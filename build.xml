<?xml version="1.0" encoding="UTF-8"?>

<!-- Begin Project  -->
<project name="Addon" default="all">
    <description>Addon build file </description>

    <!-- build.dir    where this build is stored -->
    <!-- src.dir      where the addon checkouts are located -->
    <!-- bbj.src.dir  where the bbj checkouts are located -->
    <!-- docpub.dir   where the built docs are found -->
    <!-- bbj.jars.dir where the bbj built installable jars are found -->
    <!-- install.dir  where to install BBj -->


    <!-- ====================================== -->
    <!-- Properties -->

    <!-- Load the user's local properties from a file called
         user.build.properties in the same directory as the
         local build.xml file.  -->
    <property environment="env"/>
    <property file="${basedir}/user.build.properties"/>
    <property file="${basedir}/basis.build.properties"/>

    <!-- Now let's set specific properties -->
    <property name="addon.build.dir"   value="${build.dir}/apps/aon"/>
    <property name="barista.build.dir" value="${build.dir}/barista"/>
    <property name="addon.bbj.dir"     value="${install.dir}/apps/aon"/>
    <property name="barista.bbj.dir"   value="${install.dir}/barista"/>
    <property name="log.bbj.dir"       value="${install.dir}/log"/>

    <property name="doc.dir"          value="documentation"/>

    <property name="images.dir"          value="${bbj.src.dir}/install/images"/>
    <property name="templates.dir"       value="${bbj.src.dir}/install/templates"/>

    <property name="work.dir"   value="${base.build}/work"/>

    <!-- the ports -->
    <property name="port.MAC"      value="2120"/>
    <property name="port.LINUX"    value="2145"/>
    <property name="port.LINUXPPC" value="6146"/>
    <property name="port.WIN"      value="2166"/>
    <property name="port.SOLARISI" value="2169"/>
    <property name="port.HPUX"     value="2172"/>
    <property name="port.HPUXI"    value="6173"/>
    <property name="port.SOLARISS" value="2179"/>
    <property name="port.AIX"      value="2184"/>

    <!-- Import AntContrib -->
    <taskdef resource="net/sf/antcontrib/antlib.xml" />

    <!-- Default addon languages to english only if not already set
         Example settings:
            "ENU"            - English only
            "ENU\;ESP\;FRA"  - English, Spanish, French
    -->
    <condition property="use.locale" value="true">
        <isset  property="addon.langs"/>
    </condition>
    <condition property="use.locale" value="false">
        <not>
            <isset  property="addon.langs"/>
        </not>
    </condition>

    <!-- End of Properties -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- ids -->
    <path id="path.bbj">
        <pathelement location="${install.dir}/lib/BBjIndex.jar"/>
        <pathelement location="${install.dir}/lib/ExtIndex.jar"/>
    </path>

    <path id="path.install">
        <pathelement location="${build.dir}/installBBj.jar"/>
    </path>
    <!-- End of ids -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- Misc targets -->

    <!-- clean -->
    <target name="clean">
        <!-- Clear out stuff from last install -->
        <delete file="${build.dir}/installBBj.jar"/>
        <delete dir="${addon.build.dir}"/>
        <delete dir="${install.dir}"/>
    </target>


    <!-- createDirs -->
    <target name="createDirs">
        <!-- Create install directory including addon -->
        <mkdir  dir="${install.dir}"/>
        <mkdir  dir="${install.dir}/apps/aon"/>

        <!-- Create base Addon build directory-->
        <mkdir  dir="${addon.build.dir}"/>
        <mkdir  dir="${addon.build.dir}/${doc.dir}"/>
    </target>

    <!-- End of Misc targets -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- Get build info -->
    <target name="build.info">

        <!-- Gen package date/time -->
        <exec executable="echo"
              output="epoch.txt"
              append="false">
              <arg value="-n"/>
              <arg value="addon.thedate="/>
        </exec>
        <exec executable="date"
              output="epoch.txt"
              append="true">
        </exec>
        <property file="epoch.txt"/>
        <echo message="addon.thedate: ${addon.thedate}"/>
        <delete file="epoch.txt"/>

        <!-- Get package epoch -->
        <exec executable="echo"
              output="epoch.txt"
              append="false">
              <arg value="-n"/>
              <arg value="addon.epoch="/>
        </exec>
        <exec executable="date"
              output="epoch.txt"
              append="true">
              <arg value="--date"/>
              <arg value="${addon.thedate}"/>
              <arg value="+%s"/>
        </exec>
        <exec executable="echo"
              output="epoch.txt"
              append="true">
              <arg value="-n"/>
              <arg value="addon.dtstamp="/>
        </exec>
        <exec executable="date"
              output="epoch.txt"
              append="true">
              <arg value="--date"/>
              <arg value="${addon.thedate}"/>
              <arg value="+%m-%d-%Y_%H%M"/>
        </exec>
        <property file="epoch.txt"/>
        <echo message="addon.epoch: ${addon.epoch}"/>
        <echo message="addon.dtstamp: ${addon.dtstamp}"/>
        <delete file="epoch.txt"/>

    </target>
    <!-- End of build.info -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- installAddon -->
    <target name="installAddon">
        <!-- Clear out stuff from last build -->
        <delete dir="${addon.bbj.dir}"/>
        <mkdir  dir="${addon.bbj.dir}"/>
        <mkdir  dir="${addon.bbj.dir}/help"/>
        <mkdir  dir="${barista.bbj.dir}/sys/data/bar"/>

        <!-- Addon source tree  -->
        <copy preserveLastModified="true"
              todir="${addon.bbj.dir}">
              <fileset dir="${src.dir}"
                  excludes="build.xml,
                            user.build.properties.default,
                            user.build.properties,
                            basis.build.properties,
                            InstallResponse.properties,
                            config/barista.syn.example"/>
              <fileset file="${src.dir}/${doc.dir}/readme.htm"/>
              <fileset file="${src.dir}/${doc.dir}/relnotes.htm"/>
        </copy>

        <!-- Update config files to include Adddon install -->
        <java classname="com.basis.install.IS.WriteConfigurationFiles" fork="true">
            <classpath refid="path.bbj"/>
            <arg value="${install.dir}"/>
            <arg value="-cdstore"/>
            <arg value="-barista}"/>
            <arg value="-addon"/>
        </java>

        <!-- Addon Images -->
        <copy preserveLastModified="true"
              todir="${addon.bbj.dir}/images">
              <fileset file="${images.dir}/AddonSoftware.xpm"/>
              <fileset file="${images.dir}/Documentation.xpm"/>
        </copy>

        <!-- Addon Docs -->
        <mkdir  dir="${addon.bbj.dir}/help/WebHelp"/>
        <untar src="${docpub.dir}/docaddonhtml.tar.gz"
               compression="gzip"
               dest="${addon.bbj.dir}/help/WebHelp">
        </untar>

        <!-- The addon archive has a AddonHelp.jar placeholder file, delete it -->
        <delete file="${addon.bbj.dir}/help/AddonHelp.jar"/>

        <move preserveLastModified="true"
              file="${bbj.jars.dir}/addonhelp.jar"
              tofile="${addon.bbj.dir}/help/addonhelp.jar">
        </move>

        <copy preserveLastModified="true"
              todir="${addon.bbj.dir}/documentation">
              <fileset dir="${src.dir}/documentation"
                       includes="readme.htm,
                                 relnotes.htm"/>
        </copy>
    </target>
    <!-- End of installAddon -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- copyBase -->
    <target name="copyBase">
        <!-- Addon source tree  -->
        <!--   Programs in ${prog.dir} and ${callpoints.dir} -->
        <!--   are compiled so there is no need to copy them -->
        <copy preserveLastModified="true"
              todir="${addon.build.dir}">
              <fileset dir="${addon.bbj.dir}"
                  excludes="build.xml,
                            user.build.properties.default,
                            user.build.properties,
                            basis.build.properties,
                            InstallResponse.properties,
                            config/barista.syn.example"/>
        </copy>
    </target>
    <!-- End of copyBase -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- copy Images -->
    <target name="copyImages">
        <copy preserveLastModified="true"
              todir="${build.dir}/unix/images">
              <fileset file="${images.dir}/AddonSoftware.xpm"/>
              <fileset file="${images.dir}/AddonDev.png"/>
              <fileset file="${images.dir}/Documentation.xpm"/>
        </copy>
        <copy preserveLastModified="true"
              todir="${build.dir}/${port.MAC}/images">
              <fileset file="${images.dir}/AddonDev.icns"/>
              <fileset file="${images.dir}/AddonSoftware.icns"/>
        </copy>
        <copy preserveLastModified="true"
              todir="${build.dir}/${port.WIN}/images">
              <fileset file="${images.dir}/AddonDev.ico"/>
              <fileset file="${images.dir}/AddonSoftware.ico"/>
              <fileset file="${images.dir}/Documentation.ico"/>
        </copy>
    </target>
    <!-- End of copy Images -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- copy Scripts -->
    <target name="copyScripts">
        <!-- Generic Unix Scripts -->
        <copy preserveLastModified="true"
              todir="${build.dir}/unix/bin">
              <fileset file="${templates.dir}/addon"/>
        </copy>
        <copy preserveLastModified="true"
              todir="${build.dir}/unix/bin">
              <fileset file="${templates.dir}/addondeveloper"/>
        </copy>

        <!-- Specific Unix Scripts -->

        <!-- Mac Shortcuts -->
        <copy preserveLastModified="true"
              todir="${build.dir}/${port.MAC}/apps">
              <fileset dir="${templates.dir}/mac"
                       includes="AddonSoftware.app/"/>
        </copy>
        <copy preserveLastModified="true"
              todir="${build.dir}/${port.MAC}/apps">
              <fileset dir="${templates.dir}/mac"
                       includes="AddonSoftwareDeveloper.app/"/>
        </copy>
    </target>
    <!-- End of copyScripts -->
    <!-- ====================================== -->


    <!-- ====================================== -->
    <!-- Addon sync -->
    <target name="syncAddon" depends="sleep15">

        <!-- Run BBj session to sync AddonSoftware -->
        <if>
            <equals arg1="${use.locale}" arg2="true"/>
            <then>
                <exec executable="${install.dir}/bin/bbj">
                    <env key="DISPLAY" value=":99.0"/>
                    <arg value="-q"/>
                    <arg value="-WD${barista.bbj.dir}"/>
                    <arg value="-c${barista.bbj.dir}/sys/config/enu/barista.cfg"/>
                    <arg value="${barista.bbj.dir}/sys/prog/bax_build_sync.bbj"/>
                    <arg value="-"/>
                    <arg value="-s../apps/aon/config/addon.syn"/>
                    <arg value="-loc${addon.langs}"/>
                    <arg value="-log${log.bbj.dir}/addon_sync.log"/>
                </exec>
            </then>
            <else>
                <exec executable="${install.dir}/bin/bbj">
                    <env key="DISPLAY" value=":99.0"/>
                    <arg value="-q"/>
                    <arg value="-WD${barista.bbj.dir}"/>
                    <arg value="-c${barista.bbj.dir}/sys/config/enu/barista.cfg"/>
                    <arg value="${barista.bbj.dir}/sys/prog/bax_build_sync.bbj"/>
                    <arg value="-"/>
                    <arg value="-s../apps/aon/config/addon.syn"/>
                    <arg value="-log${log.bbj.dir}/addon_sync.log"/>
                </exec>
            </else>
        </if>

    </target>
    <!-- End of syncAddon -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- Start BBjServices -->
    <target name="startBBj">

        <!-- Use killBBjProcs to shutdown BBj -->
        <exec executable="${install.dir}/bin/bbjservices">
              <env key="DISPLAY" value=":99.0"/>
        </exec>

    </target>
    <!-- End of startBBj -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- Stop BBjServices -->
    <target name="stopBBj">

        <!-- Use killBBjProcs to shutdown BBj -->
        <exec executable="${install.dir}/bin/killBBjProcs">
            <arg value="BBjServices"/>
        </exec>

    </target>
    <!-- End of stopBBj -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- Remove .syn/.men files -->
    <target name="rmSynMen">
        <delete>
            <fileset dir="${install.dir}/barista"
                     includes="*.men,**/*.men,
                               *.syn,**/*.syn"
                     excludes="sys/config/???/barista.men,
                               sys/config/???/barista_dev.men"/>
            <fileset dir="${install.dir}/apps/examples"
                     includes="*.men,**/*.men,
                               *.syn,**/*.syn"
                     excludes="config/../examples.men,
                               config/examples.syn"/>
            <fileset dir="${install.dir}/apps/aon"
                     includes="*.men,**/*.men,
                               *.syn,**/*.syn"
                     excludes="config/???/addon.men,
                               config/???/addon.syn,
                               config/addon.syn"/>
        </delete>
    </target>
    <!-- End of rmSynMen -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- install BBj -->
    <target name="installBBj">
        <!-- Clear out old stuff from last install -->
        <delete file="${build.dir}/installBBj.jar"/>
        <delete dir="${install.dir}"/>

        <!-- Unzip the BASIS installer -->
        <mkdir dir="${work.dir}"/>
        <unjar src="${build.dir}/BBjInstaller.jar" dest="${work.dir}"/>

        <!-- Jar up the install into an installable jar -->
        <jar destfile="${work.dir}/installBBj.jar">
            <fileset dir="${work.dir}"
                     includes="install.xml,
                               com/"/>
            <fileset dir="${build.dir}"
                     includes="package_*.jar"/>
            <manifest>
                <attribute name="Main-Class"
                           value="com.basis.install.BASISInstallerStarter"/>
            </manifest>
        </jar>

        <!-- Update the JENKINS_BUILD_DIR marker with the Jenkins build directory -->
        <replace file="${src.dir}/InstallResponse.properties"
                 encoding="ISO-8859-1"
                 token="BBJ_INSTALL_DIR"
                 value="${install.dir}"/>

        <!-- Run BBj installer -->
        <java jar="${work.dir}/installBBj.jar" fork="true">
            <arg value="-pl"/>
            <arg value="${src.dir}/InstallResponse.properties"/>
        </java>

        <!-- Clean up -->
        <delete dir="${work.dir}"/>

    </target>
    <!-- End of installBBj -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- copySync -->
    <target name="copySync">
        <copy preserveLastModified="true"
              todir="${addon.build.dir}/callpoints">
              <fileset dir="${addon.bbj.dir}/callpoints"
                       includes="**,*"/>
        </copy>

        <copy preserveLastModified="true"
              todir="${addon.build.dir}/data/arc">
              <fileset dir="${addon.bbj.dir}/data/arc" includes="**"/>
        </copy>

        <copy preserveLastModified="true"
              todir="${addon.build.dir}/data/def">
              <fileset dir="${addon.bbj.dir}/data/def" includes="**"/>
        </copy>

        <!-- Built by addon sync -->
        <copy preserveLastModified="true"
              todir="${barista.build.dir}/callpoints">
              <fileset dir="${barista.bbj.dir}/callpoints" includes="**,*"/>
        </copy>

        <copy preserveLastModified="true"
              todir="${barista.build.dir}/sys/data">
              <fileset dir="${barista.bbj.dir}/sys/data" includes="**,*"/>
        </copy>

        <copy preserveLastModified="true"
              todir="${barista.build.dir}/bbdict">
              <fileset dir="${barista.bbj.dir}/bbdict" includes="**,*"/>
        </copy>

        <copy preserveLastModified="true"
              todir="${barista.build.dir}/sys/config">
              <fileset dir="${barista.bbj.dir}/sys/config"
                       includes="*/barista.men,
                                 */barista.cfg"/>
        </copy>

        <copy preserveLastModified="true"
              todir="${barista.build.dir}">
              <fileset dir="${src.dir}/documentation"
                       includes="readme.htm,relnotes.htm"/>
        </copy>
    </target>
    <!-- End of copySync -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- jar Addon  -->
    <target name="jar">

        <propertyfile file="${build.dir}/apps/aon/documentation/build.info">
            <entry key="addon.epoch"   value="${addon.epoch}"/>
            <entry key="addon.dtstamp" value="${addon.dtstamp}"/>
        </propertyfile>

        <!-- Jar it up property files -->
        <jar destfile="${build.dir}/apps/aon/prop/addonprop.jar">
             <fileset dir="${build.dir}"
                      includes="apps/aon/prop/*.properties" />
        </jar>

        <!-- Jar it up - package_addon.jar -->
        <jar destfile="${build.dir}/package_addon.jar">
             <fileset dir="${build.dir}"
                      includes="**,*"
                      excludes="apps/aon/images/AddonSoftware.xpm,
                                apps/aon/images/Documentation.xpm,
                                BBjInstaller.jar,
                                package_*.jar" />
        </jar>
    </target>
    <!-- End of jar Addon -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- sleep15 -->
    <target name="sleep15">
        <!-- Give BLM time to shutdown -->
        <!-- Give BBjServices time to start -->
        <sleep seconds="15"/>
    </target>
    <!-- End of sleep15 -->
    <!-- ====================================== -->


    <!-- ====================================== -->
    <!-- build Addon  -->
    <target name="build"
            depends="clean,
                     build.info,
                     installBBj,
                     installAddon,
                     startBBj,
                     syncAddon,
                     stopBBj,
                     rmSynMen,
                     copyBase,
                     copySync,
                     copyImages,
                     copyScripts,
                     jar">
    </target>
    <!-- End of build Addon  -->
    <!-- ====================================== -->



    <!-- ====================================== -->
    <!-- build all  -->
    <target name="all"
            depends="build">
    </target>
    <!-- End of build all  -->
    <!-- ====================================== -->

<!-- End Project  -->
</project>
