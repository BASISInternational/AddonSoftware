rem Callpoint program for OPE_INVCASH - Cash Sale Transaction
rem Program ope_invcash_cpt.bbj

rem Barista Version 9.0
rem Copyright (c) 2007-2009 BASIS International Ltd.
rem All Rights Reserved

	seterr std_error
	setesc std_error

	use ::sys/prog/bao_callpoint.bbj::Callpoint
	declare Callpoint Callpoint!

	enter
:		Callpoint!,
:		bar_tpl$,
:		BarObj!,
:		user_tpl$,
:		UserObj!,
:		gui_dev,
:		SysGUI!,
:		Form!,
:		rec_data$,
:		table_chans$[all],
:		dtlg_param$[all],
:		GridVect!,
:		OrigVect!,
:		hrec_data$[all],
:		hattr_col$[all],
:		err=*next

rem --- Directory STBLs

	dir_pgm$=stbl("+DIR_SYP")
	dir_frm$=stbl("+DIR_FRM")
	dir_def$=stbl("+DIR_DEF")
	dir_img$=stbl("+DIR_IMG")
	dir_wrk$=stbl("+DIR_WRK")

rem --- Retrieve sysinfo Data

	sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
	dim sysinfo$:sysinfo_template$
	sysinfo$=stbl("+SYSINFO",err=*next)
	firm_id$=sysinfo.firm_id$

rem --- Callpoints and tables handled by this program

	callpoint_event$=Callpoint!.getCallpointEvent()

	callpoint_event_str$=
:		pad("OPE_INVCASH.ARAR",40)+
:		pad("OPE_INVCASH.BSHO",40)+
:		pad("OPE_INVCASH.CASH_REC_CD.AVAL",40)+
:		pad("OPE_INVCASH.EXPIRE_DATE.AVAL",40)+
:		pad("OPE_INVCASH.TENDERED_AMT.AVAL",40)

	switch fnstr_pos(callpoint_event$,callpoint_event_str$,40)
		case fnstr_pos(pad("OPE_INVCASH.ARAR",40),callpoint_event_str$,40)			
			print "OPE_INVCASH:ARAR"; rem debug
			
			rem --- Set table_chans$[all] into util object for getDev() and getTmpl()
			
				declare ArrayObject tableChans!
			
				call stbl("+DIR_PGM")+"adc_array.aon::str_array2object", table_chans$[all], tableChans!, status
				if status = 999 then goto std_exit
				util.setTableChans(tableChans!)
			
			rem --- Order Helper object
			
				declare OrderHelper ordHelp!
				ordHelp! = new OrderHelper(firm_id$, callpoint!)
			
			rem --- Total detail lines
			
				cust_id$  = callpoint!.getColumnData("OPE_INVCASH.CUSTOMER_ID")
				order_no$ = callpoint!.getColumnData("OPE_INVCASH.ORDER_NO")
				print "---customer: ", cust_id$; rem debug
				print "---order_no: ", order_no$; rem debug
			
				ordHelp!.totalSalesDisk(cust_id$, order_no$)
				
				user_tpl.ext_price = ordHelp!.getExtPrice()
				user_tpl.taxable   = ordHelp!.getTaxable()
				user_tpl.ext_cost  = ordHelp!.getExtCost()
			
			rem --- Set Invoice Amount
			
				tax_amount   = num(callpoint!.getDevObject("tax_amount"))
				freight_amt  = num(callpoint!.getDevObject("freight_amt"))
				discount_amt = num(callpoint!.getDevObject("discount_amt"))
				invoice_amt  = user_tpl.ext_price + tax_amount - discount_amt + freight_amt
			
				if invoice_amt <> num(callpoint!.getColumnData("OPE_INVCASH.INVOICE_AMT")) then
					callpoint!.setColumnData("OPE_INVCASH.INVOICE_AMT", str(invoice_amt))
					callpoint!.setStatus("MODIFIED;REFRESH")
				endif
			
			rem --- Set customer name default
			
				if cvs(callpoint!.getColumnData("OPE_INVCASH.CUSTOMER_NAME"), 2) = "" then
					file_name$ = "ARM_CUSTMAST"
					dim custmast_rec$:fnget_tpl$(file_name$)
					find record (fnget_dev(file_name$), key=firm_id$+callpoint!.getColumnData("OPE_INVCASH.CUSTOMER_ID")) custmast_rec$
					callpoint!.setTableColumnAttribute("OPE_INVCASH.CUSTOMER_NAME","DFLT", custmast_rec.customer_name$)
					print "---Customer Name set: ", custmast_rec.customer_name$; rem debug
				endif
			
			rem --- Set change amount
			
				tendered = num(callpoint!.getColumnData("OPE_INVCASH.TENDERED_AMT"))
			
				if tendered - invoice_amt > 0 then
					callpoint!.setColumnData("<<DISPLAY>>.CHANGE", str(tendered - invoice_amt))
					callpoint!.setStatus("REFRESH")
					print "---Set Change Amount:", tendered - invoice_amt; rem debug
				endif
		break
		case fnstr_pos(pad("OPE_INVCASH.BSHO",40),callpoint_event_str$,40)			
			print "OPE_INVCASH:BSHO"; rem debug
			
			rem --- Inits
			
				use ::ado_util.src::util
				use ::ado_order.src::OrderHelper
				use ::adc_array.aon::ArrayObject
			
			rem --- Open files
			
				num_files = 4
				dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
			
				open_tables$[1]="ARM_CUSTMAST", open_opts$[1]="OTA"
				open_tables$[2]="ARC_CASHCODE", open_opts$[2]="OTA"
				open_tables$[3]="OPE_ORDHDR",   open_opts$[3]="OTA"
				open_tables$[4]="OPE_ORDDET",   open_opts$[4]="OTA"
			
				gosub open_tables
			
			rem --- Global string templates
			
				dim user_tpl$:"ext_price:n(15), taxable:n(15), ext_cost:n(15)"
			
		break
		case fnstr_pos(pad("OPE_INVCASH.CASH_REC_CD.AVAL",40),callpoint_event_str$,40)			
			print "OPE_INVCASH.CASH_REC_CD:AVAL"; rem debug
			
			rem --- Validate cash receipt code
			
				start_block = 1
				found       = 0
			
				code$ = callpoint!.getUserInput()
				file_name$ = "ARC_CASHCODE"
				dim cashcode_rec$:fnget_tpl$(file_name$)
			
				if start_block then
					find record (fnget_dev(file_name$), key=firm_id$+"C"+code$, dom=*endif) cashcode_rec$
					found = 1
				endif
			
				if !found then
					callpoint!.setStatus("ABORT")
					break; rem --- exit callpoint
				endif
			
				if pos(cashcode_rec.trans_type$="$CP")=0 then
					callpoint!.setStatus("ABORT")
					break; rem --- exit callpoint
				endif
			
			rem --- Disable fields and set minimums by trans type
			
				if cashcode_rec.trans_type$ <> "C" then 		
					callpoint!.setColumnEnabled("OPE_INVCASH.AR_CHECK_NO", 0)
				else
					callpoint!.setTableColumnAttribute("OPE_INVCASH.AR_CHECK_NO","MINL","1")
					callpoint!.setTableColumnAttribute("OPE_INVCASH.PAYMENT_ID","MINL","1")
				endif
			
				if cashcode_rec.trans_type$ <> "P" then 		
					callpoint!.setColumnEnabled("OPE_INVCASH.EXPIRE_DATE", 0)
				else
					callpoint!.setTableColumnAttribute("OPE_INVCASH.EXPIRE_DATE","MINL","1")
					callpoint!.setTableColumnAttribute("OPE_INVCASH.PAYMENT_ID","MINL","1")
				endif
			
				if cashcode_rec.trans_type$ = "$" then
					callpoint!.setColumnEnabled("OPE_INVCASH.PAYMENT_ID", 0)
				endif
			
			rem --- Memo or Credit Card#?
			
				if cashcode_rec.trans_type$ = "C" then 
					util.changeText(Form!, "Credit Card or ABA No", "ABA No")
				else
					if cashcode_rec.trans_type$ = "P" then
						util.changeText(Form!, "Credit Card or ABA No", "Credit Card No")
					endif
				endif
			
			rem --- Check for discount
			
				if discount_amt<>0 and cashcode_rec.disc_flag$<>"Y" then
					msg_id$="OP_NO_DISCOUNT"
					gosub disp_message
					callpoint!.setStauts("ABORT")
					break; rem --- exit callpoint
				endif
			
			rem --- Set default Tendered Amount
			
				terndered_amt = num(callpoint!.getColumnData("OPE_INVCASH.TENDERED_AMT"))
			
				if cashcode_rec.trans_type$ = "P" or (cashcode_rec.trans_type$ = "C" and terndered_amt = 0) then
					callpoint!.setTableColumnAttribute("OPE_INVCASH.TENDERED_AMT","DFLT", str(invoice_amt))
				endif
		break
		case fnstr_pos(pad("OPE_INVCASH.EXPIRE_DATE.AVAL",40),callpoint_event_str$,40)			
			print "OPE_INVCASH.EXPIRE_DATE:AVAL"; rem debug
			
			rem --- Expiration date can't by more than today
			
				if callpoint!.getUserInput() <= sysinfo.system_date$ then
					msg_id$="OP_CC_EXPIRED"
					gosub disp_message
					callpoint!.setStatus("ABORT")
				endif
		break
		case fnstr_pos(pad("OPE_INVCASH.TENDERED_AMT.AVAL",40),callpoint_event_str$,40)			
			print "OPE_INVCASH.TENDERED_AMT:AVAL"; rem debug
			
			rem --- Tendered enough?
			
				tendered    = num(callpoint!.getUserInput())
				invoice_amt = num(callpoint!.getColumnData("OPE_INVCASH.INVOICE_AMT"))
			
				if tendered < invoice_amt then
					msg_id$ = "OP_TENDER_MORE"
					gosub disp_message
					callpoint!.setStatus("ABORT")
					break; rem --- exit callpoint
				endif
			
			rem --- Set change amount
			
				callpoint!.setColumnData("<<DISPLAY>>.CHANGE", str(tendered - invoice_amt))
				callpoint!.setStatus("REFRESH")
		break

		case default
		break
	swend

rem --- All done

	goto std_exit

rem [[OPE_INVCASH.<CUSTOM>]]


open_tables:rem --- Open Tables

	call stbl("+DIR_SYP")+"bac_open_tables.bbj",
:		open_beg,
:		open_end,
:		open_tables$[all],
:		open_opts$[all],
:		open_chans$[all],
:		open_tpls$[all],
:		table_chans$[all],
:		open_batch,
:		open_status$

	if open_status$<>"" then
		msg_id$="ENTRY_OPEN_ERROR"
		dim msg_tokens$[1]
		msg_tokens$[1]=open_status$
		gosub disp_message
		rdFuncSpace!=bbjAPI().getGroupNamespace().setValue("+build_task","OFF")
		release
	endif

	return

disp_message:rem --- Display Message Dialog

	call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]

	return

disp_msg:rem --- Display Message Dialog

	call stbl("+DIR_SYP")+"bam_message.bbj",gui_dev,msg_title$,msg_text$,msg_defs$,msg_opt$

	return

disp_meter:rem --- Display Progress Meter

	call dir_pgm$+"bam_prog_bar.bbj",SysGUI!,Form!,MeterWin!,meter_title$,meter_total_recs,meter_proc_recs,meter_data$,meter_action$

	return

rem --- Functions

	def fnstr_pos(str_pos_att0$,str_pos_att1$,str_pos_att1)=int((pos(str_pos_att0$=str_pos_att1$,str_pos_att1)+str_pos_att1-1)/str_pos_att1)
	def fngett_attr$(gett_attr_att0$)=attr_tbl$[fnstr_pos(gett_attr_att0$,attr_def_tbl$[0,0],5)]
	def fngetc_attr$(getc_attr_att0,getc_attr_att0$)=attr_col$[getc_attr_att0,fnstr_pos(getc_attr_att0$,attr_def_col$[0,0],5)]
	def fngetv_attr$(getv_attr_att0$,getv_attr_att1$)=attr_col$[fnstr_pos(getv_attr_att0$,attr_col$[0,1],40),fnstr_pos(getv_attr_att1$,attr_def_col$[0,0],5)]
	def fnget_rec$(get_rec_att0$)=rec_data$[fnstr_pos(get_rec_att0$,rec_data$[0,0],40),0]
	def fnget_rec_orig$(get_rec_att0$)=rec_data$[fnstr_pos(get_rec_att0$,rec_data$[0,0],40),1]
	def fnget_hrec$(hrec_att0$)=hrec_data$[fnstr_pos(hrec_att0$,hrec_data$[0,0],40),0]
	def fndate$(date_att0$)=date(jul(num(date_att0$(1,4)),num(date_att0$(5,2)),num(date_att0$(7,2))):stbl("+DATE_MASK"))
	def fnget_dev(tmp0$)=num(table_chans$[0,0](pos(pad(tmp0$,17)=table_chans$[0,0],20)+17,3))
	def fnget_tpl$(tmp0$)=table_chans$[num(table_chans$[0,0](pos(pad(tmp0$,17)=table_chans$[0,0],20)+17,3)),0]
	def fnget_path$(tmp0$)=table_chans$[num(table_chans$[0,0](pos(pad(tmp0$,17)=table_chans$[0,0],20)+17,3)),1]
	def fnmdy$(tmp0$)=tmp0$(5,4)+tmp0$(1,4)

std_error: rem --- Standard error handler (01Apr2006)

	err_text$=""
	if tcb(5) and pgm(-1)=pgm(-2) then err_text$=pgm(tcb(5),err=*next)
	pgmdir$=stbl("+DIR_SYP",err=std_error_exit)
	call pgmdir$+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),str(err:"000"),err_text$,err_act$
	if pos("EXIT"=err_act$) then goto std_error_exit
	if pos("ESCAPE"=err_act$) then seterr 0;setesc 0
	if pos("RETRY"=err_act$) then retry

std_error_exit:

	master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
	sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
	dim sysinfo$:sysinfo_template$
	sysinfo$=stbl("+SYSINFO",err=std_error_release)
	if cvs(sysinfo.user_id$,2)=master_user$ then escape

std_error_release:

	status=999
	if pgm(-1)<>pgm(-2) then exit
	release

std_exit: rem --- Standard called program exit (01Mar2006)

	exit

