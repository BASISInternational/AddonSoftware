rem Callpoint program for OPC_TAXCODE - Tax Code
rem Program opc_taxcode_cpt.bbj

rem Barista Version 9.0
rem Copyright (c) 2007-2009 BASIS International Ltd.
rem All Rights Reserved

	seterr std_error
	setesc std_error

	use ::sys/prog/bao_callpoint.bbj::Callpoint
	declare Callpoint Callpoint!

	enter
:		Callpoint!,
:		bar_tpl$,
:		BarObj!,
:		user_tpl$,
:		UserObj!,
:		gui_dev,
:		SysGUI!,
:		Form!,
:		rec_data$,
:		table_chans$[all],
:		dtlg_param$[all],
:		GridVect!,
:		OrigVect!,
:		hrec_data$[all],
:		hattr_col$[all],
:		err=*next

rem --- Directory STBLs

	dir_pgm$=stbl("+DIR_SYP")
	dir_frm$=stbl("+DIR_FRM")
	dir_def$=stbl("+DIR_DEF")
	dir_img$=stbl("+DIR_IMG")
	dir_wrk$=stbl("+DIR_WRK")

rem --- Retrieve sysinfo Data

	sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
	dim sysinfo$:sysinfo_template$
	sysinfo$=stbl("+SYSINFO",err=*next)
	firm_id$=sysinfo.firm_id$

rem --- Callpoints and tables handled by this program

	callpoint_event$=Callpoint!.getCallpointEvent()

	callpoint_event_str$=
:		pad("OPC_TAXCODE.ARAR",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_01.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_02.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_03.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_04.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_05.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_06.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_07.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_08.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_09.AVAL",40)+
:		pad("OPC_TAXCODE.AR_TOT_CODE_10.AVAL",40)+
:		pad("OPC_TAXCODE.BREC",40)+
:		pad("OPC_TAXCODE.BSHO",40)+
:		pad("OPC_TAXCODE.GL_ACCOUNT.BINP",40)+
:		pad("OPC_TAXCODE.OP_TAX_CODE.AVAL",40)+
:		pad("OPC_TAXCODE.TAX_RATE.AVAL",40)

	switch fnstr_pos(callpoint_event$,callpoint_event_str$,40)
		case fnstr_pos(pad("OPC_TAXCODE.ARAR",40),callpoint_event_str$,40)			
			rem --- Calculate and display all the extra tax codes
				if user_tpl.gl$<>"Y" or rec_data.tax_rate=0
					enableit$="I"
				else
					enableit$=""
				endif
				gosub able_gl
				opm06_dev=user_tpl.opm06_dev
				dim opm06a$:user_tpl.opm06_tpl$
				callpoint!.setColumnData("<<DISPLAY>>.TAX_TOTAL","0")
				total_pct=num(rec_data.tax_rate$)
				for x=1 to 10
					dim opm06a$:fattr(opm06a$)
					next_code$=field(rec_data$,"AR_TOT_CODE_"+str(x:"00"))
					if cvs(next_code$,2)<>""
						read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
						callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_"+str(x:"00"),opm06a.tax_rate$)
						callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_"+str(x:"00"),opm06a.code_desc$)
						total_pct=total_pct+num(opm06a.tax_rate$)
						field user_tpl$,"code",[x]=next_code$
						field user_tpl$,"rate",[x]=num(opm06a.tax_rate$)
					else
						callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_"+str(x:"00"),"")
						callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_"+str(x:"00"),"")
						field user_tpl$,"rate",[x]=0
					endif
				next x
				field user_tpl$,"this_rate"=rec_data.tax_rate
				field user_tpl$,"this_code"=rec_data.op_tax_code$
				callpoint!.setColumnData("<<DISPLAY>>.TAX_TOTAL",str(total_pct))
				callpoint!.setStatus("REFRESH-ABLEMAP")
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_01.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=1
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[1]=callpoint!.getUserInput()
					field user_tpl$,"rate",[1]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_01",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_01",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_01","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_02.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=2
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[2]=callpoint!.getUserInput()
					field user_tpl$,"rate",[2]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_02",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_02",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_02","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_03.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=3
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[3]=callpoint!.getUserInput()
					field user_tpl$,"rate",[3]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_03",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_03",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_03","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_04.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=4
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[4]=callpoint!.getUserInput()
					field user_tpl$,"rate",[4]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_04",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_04",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_04","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_05.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=5
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[5]=callpoint!.getUserInput()
					field user_tpl$,"rate",[5]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_05",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_05",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_05","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_06.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=6
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[6]=callpoint!.getUserInput()
					field user_tpl$,"rate",[6]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_06",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_06",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_06","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_07.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=7
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[7]=callpoint!.getUserInput()
					field user_tpl$,"rate",[7]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_07",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_07",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_07","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_08.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=8
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[8]=callpoint!.getUserInput()
					field user_tpl$,"rate",[8]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_08",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_08",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_08","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_09.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=9
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[9]=callpoint!.getUserInput()
					field user_tpl$,"rate",[9]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_09",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_09",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_09","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.AR_TOT_CODE_10.AVAL",40),callpoint_event_str$,40)			
			rem --- Put new rate into array and calc total
				cur_fld=10
				gosub check_code
				if ok$="Y"
					opm06_dev=user_tpl.opm06_dev
					dim opm06a$:user_tpl.opm06_tpl$
					next_code$=callpoint!.getUserInput()
					read record (opm06_dev,key=firm_id$+next_code$,dom=*next) opm06a$
					field user_tpl$,"code",[10]=callpoint!.getUserInput()
					field user_tpl$,"rate",[10]=opm06a.tax_rate
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_10",opm06a.code_desc$)
					callpoint!.setColumnData("<<DISPLAY>>.TAX_RATE_10",opm06a.tax_rate$)
					gosub calc_total
				else
					callpoint!.setUserInput("")
					callpoint!.setColumnData("<<DISPLAY>>.TAX_DESC_10","")
					callpoint!.setStatus("REFRESH")
				endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.BREC",40),callpoint_event_str$,40)			
			rem --- clear out temporary rates
				for x=1 to 10
					field user_tpl$,"code",[x]=""
					field user_tpl$,"rate",[x]=0
				next x
				field user_tpl$,"this_rate"=0
				field user_tpl$,"this_code"=""
		break
		case fnstr_pos(pad("OPC_TAXCODE.BSHO",40),callpoint_event_str$,40)			
			rem --- Open second channel to OPC_TAXCODE
				files=1,begfile=1,endfile=files
				dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
				files$[1]="opm-06",ids$[1]="OPC_TAXCODE"
				call stbl("+DIR_PGM")+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:								ids$[all],templates$[all],channels[all],batch,status
				if status then
					remove_process_bar:
					bbjAPI!=bbjAPI()
					rdFuncSpace!=bbjAPI!.getGroupNamespace()
					rdFuncSpace!.setValue("+build_task","OFF")
				 	release
				endif
			
			rem --- Keep info in user_tpl$
				dim user_tpl$:"opm06_dev:n(4),opm06_tpl:c(500),this_rate:n(10),code[10]:c(10),rate[10]:n(10),this_code:c(10),gl:C(1),gl_installed:c(1)"
				user_tpl.opm06_dev=channels[1]
				user_tpl.opm06_tpl$=templates$[1]
				call stbl("+DIR_PGM")+"adc_application.aon","OP",info$[all]
				user_tpl.gl$=info$[9]
				if info$[9]<>"Y"
					enableit$="I"
					gosub able_gl
				endif
				call stbl("+DIR_PGM")+"adc_application.aon","GL",info$[all]
				user_tpl.gl_installed$=info$[20]
		break
		case fnstr_pos(pad("OPC_TAXCODE.GL_ACCOUNT.BINP",40),callpoint_event_str$,40)			
			if user_tpl.gl_installed$="Y"
				callpoint!.setTableColumnAttribute("OPC_TAXCODE.GL_ACCOUNT","MINL","1")
			endif
		break
		case fnstr_pos(pad("OPC_TAXCODE.OP_TAX_CODE.AVAL",40),callpoint_event_str$,40)			
			rem --- Don't allow add of blank code
			while 1
				code$=callpoint!.getUserInput()
				if cvs(code$,2)=""
					find (user_tpl.opm06_dev,key=firm_id$+code$,dom=*next);break
					callpoint!.setMessage("INVALID_ENTRY")
					callpoint!.setStatus("ABORT")
				endif
				break
			wend
		break
		case fnstr_pos(pad("OPC_TAXCODE.TAX_RATE.AVAL",40),callpoint_event_str$,40)			
			rem --- Enable/Disable G/L Account"
				if user_tpl.gl$<>"Y" or num(callpoint!.getUserInput())=0
					enableit$="I"
				else
					enableit$=""
				endif
				gosub able_gl
			
				user_tpl.this_rate=num(callpoint!.getUserInput())
				gosub calc_total
		break

		case default
		break
	swend

rem --- All done

	goto std_exit

rem [[OPC_TAXCODE.<CUSTOM>]]

able_gl: rem --- enable/disable selected control
	wctl$=str(num(callpoint!.getTableColumnAttribute("OPC_TAXCODE.GL_ACCOUNT","CTLI")):"00000")
	wmap$=callpoint!.getAbleMap()
	wpos=pos(wctl$=wmap$,8)
	wmap$(wpos+6,1)=enableit$
	callpoint!.setAbleMap(wmap$)
	callpoint!.setStatus("ABLEMAP")
return

calc_total: rem Calculate Total Tax rate
	total_pct=user_tpl.this_rate
	for x=1 to 10
		total_pct=total_pct+nfield(user_tpl$,"rate",x)
	next x
	callpoint!.setColumnData("<<DISPLAY>>.TAX_TOTAL",str(total_pct))
	callpoint!.setStatus("REFRESH")
return

check_code: rem --- Check code
	ok$="Y"
	if cvs(callpoint!.getUserInput(),2)=cvs(user_tpl.this_code$,2) and
:		cvs(callpoint!.getUserInput(),2)<>""
		msg_id$="OP_SUBTAX_DUPE"
		gosub disp_message
		callpoint!.setStatus("ABORT")
		ok$="N"
	endif
	for taxcode=1 to 10
		if taxcode<>cur_fld
			if cvs(callpoint!.getUserInput(),2)=cvs(field(user_tpl$,"code",taxcode),3) and
:				cvs(callpoint!.getUserInput(),2)<>""
				msg_id$="OP_TOTCODE_DUPE"
				gosub disp_message
				callpoint!.setStatus("ABORT")
				ok$="N"
			endif
		endif
	next taxcode
return


open_tables:rem --- Open Tables

	call stbl("+DIR_SYP")+"bac_open_tables.bbj",
:		open_beg,
:		open_end,
:		open_tables$[all],
:		open_opts$[all],
:		open_chans$[all],
:		open_tpls$[all],
:		table_chans$[all],
:		open_batch,
:		open_status$

	if open_status$<>"" then
		msg_id$="ENTRY_OPEN_ERROR"
		dim msg_tokens$[1]
		msg_tokens$[1]=open_status$
		gosub disp_message
		rdFuncSpace!=bbjAPI().getGroupNamespace().setValue("+build_task","OFF")
		release
	endif

	return

disp_message:rem --- Display Message Dialog

	call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]

	return

disp_msg:rem --- Display Message Dialog

	call stbl("+DIR_SYP")+"bam_message.bbj",gui_dev,msg_title$,msg_text$,msg_defs$,msg_opt$

	return

disp_meter:rem --- Display Progress Meter

	call dir_pgm$+"bam_prog_bar.bbj",SysGUI!,Form!,MeterWin!,meter_title$,meter_total_recs,meter_proc_recs,meter_data$,meter_action$

	return

rem --- Functions

	def fnstr_pos(str_pos_att0$,str_pos_att1$,str_pos_att1)=int((pos(str_pos_att0$=str_pos_att1$,str_pos_att1)+str_pos_att1-1)/str_pos_att1)
	def fngett_attr$(gett_attr_att0$)=attr_tbl$[fnstr_pos(gett_attr_att0$,attr_def_tbl$[0,0],5)]
	def fngetc_attr$(getc_attr_att0,getc_attr_att0$)=attr_col$[getc_attr_att0,fnstr_pos(getc_attr_att0$,attr_def_col$[0,0],5)]
	def fngetv_attr$(getv_attr_att0$,getv_attr_att1$)=attr_col$[fnstr_pos(getv_attr_att0$,attr_col$[0,1],40),fnstr_pos(getv_attr_att1$,attr_def_col$[0,0],5)]
	def fnget_rec$(get_rec_att0$)=rec_data$[fnstr_pos(get_rec_att0$,rec_data$[0,0],40),0]
	def fnget_rec_orig$(get_rec_att0$)=rec_data$[fnstr_pos(get_rec_att0$,rec_data$[0,0],40),1]
	def fnget_hrec$(hrec_att0$)=hrec_data$[fnstr_pos(hrec_att0$,hrec_data$[0,0],40),0]
	def fndate$(date_att0$)=date(jul(num(date_att0$(1,4)),num(date_att0$(5,2)),num(date_att0$(7,2))):stbl("+DATE_MASK"))
	def fnget_dev(tmp0$)=num(table_chans$[0,0](pos(pad(tmp0$,17)=table_chans$[0,0],20)+17,3))
	def fnget_tpl$(tmp0$)=table_chans$[num(table_chans$[0,0](pos(pad(tmp0$,17)=table_chans$[0,0],20)+17,3)),0]
	def fnget_path$(tmp0$)=table_chans$[num(table_chans$[0,0](pos(pad(tmp0$,17)=table_chans$[0,0],20)+17,3)),1]
	def fnmdy$(tmp0$)=tmp0$(5,4)+tmp0$(1,4)

std_error: rem --- Standard error handler (01Apr2006)

	err_text$=""
	if tcb(5) and pgm(-1)=pgm(-2) then err_text$=pgm(tcb(5),err=*next)
	pgmdir$=stbl("+DIR_SYP",err=std_error_exit)
	call pgmdir$+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),str(err:"000"),err_text$,err_act$
	if pos("EXIT"=err_act$) then goto std_error_exit
	if pos("ESCAPE"=err_act$) then seterr 0;setesc 0
	if pos("RETRY"=err_act$) then retry

std_error_exit:

	master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
	sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
	dim sysinfo$:sysinfo_template$
	sysinfo$=stbl("+SYSINFO",err=std_error_release)
	if cvs(sysinfo.user_id$,2)=master_user$ then escape

std_error_release:

	status=999
	if pgm(-1)<>pgm(-2) then exit
	release

std_exit: rem --- Standard called program exit (01Mar2006)

	exit

