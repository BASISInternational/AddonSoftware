rem --- Work Order Transaction History Report - Transaction Print
rem --- Program sfr_wordtrans_o1.aon v8.0.0 04Jan2008 (sfr_jb)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (01/04/2008 11:00:34)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)
    precision ivs01_precision

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Init Data

    dim t[2],u[2]
    headings$[2]=h3$
    headings$[3]=h4$
    headings$[4]=h7$
    call pgmdir$+"adc_printer.aon",printer_dev,1,"","",status
    if status then goto std_exit
    more=1

rem --- Retrieve key templates

    call stbl("+DIR_SYP")+"bac_key_template.bbj","SFX_WOTRANXR","PRIMARY",sfm07a_key_tpl$,rd_table_chans$[all],status$
    call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMASTR","PRIMARY",sfe01a_key_tpl$,rd_table_chans$[all],status$
    call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMASTR","ALT_KEY_01",sfe01a_key_talt$,rd_table_chans$[all],status$
    call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMASTR","ALT_KEY_02",sfe01b_key_talt$,rd_table_chans$[all],status$
    call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMASTR","ALT_KEY_03",sfe01c_key_talt$,rd_table_chans$[all],status$
 
rem --- Background

    call pgmdir$+"adc_progress.aon","N","","","","",0,sfe01a_dev,1,meter_num,status
    
rem --- Init Read

    extractrecord(sfe01a_dev,key=begin_key$,knum=keynum,dom=*next)

rem --- Main Read
    while more
        key_tpl$=key(sfe01a_dev,knum=keynum,end=*break)
        if pos(firm_id$=key_tpl$)<>1 break

        if ending$<>"" 
            if sequence$="W" and key_tpl.firm_id$+key_tpl.wo_location$+key_tpl.wo_no$>firm_id$+key_tpl.wo_location$+ending$ break
            if sequence$="B" and key_tpl.firm_id$+key_tpl.warehouse_id$+key_tpl.item_id$>firm_id$+ending$ break
            if sequence$="C" and key_tpl.firm_id$+key_tpl.customer_id$>firm_id$+ending$ break
            if sequence$="T" and key_tpl.firm_id$+key_tpl.wo_type$>firm_id$+ending$ break   
        else
            if sequence$="B" and whse$<>"" then if key_tpl.warehouse_id$>whse$ break
        endif

        if sequence$<>"W" then 
            if sequence$="T" data1$=key_tpl.wo_type$
            if sequence$="C" data1$=key_tpl.customer_id$
            if sequence$="B" data1$=key_tpl.item_id$
            if data1$<>t0$ then gosub sub_total
            read (sfe01a_dev,knum=keynum)
        endif

        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
        read record (sfe01a_dev,key=key_tpl$,knum=keynum,dom=*continue) sfe01a$
        if wotype$="C" and sfe01a.wo_status$<>"C" then continue
        if wotype$="O" and sfe01a.wo_status$="C" then continue
        if sfe01a.wo_category$="I" 
            find record (ivm01a_dev,key=firm_id$+ivm01a.item_id$,dom=init_data) ivm01a$
            sfe01a.description_01$=ivm01a.item_desc$(1,min(desc[1],30))
        endif

init_data: rem --- Init Data
        dim s[2]
        t1$=""
        l2=0
rem --- Process Transactions

        if sfe01a.wo_status$<>"C" and sfe01a.closed_date$>g9$ then 
            tran01_dev=sft01_dev;tran01a$=templates$[9]
            tran02_dev=sft21a_dev;tran02a$=templates$[11]
            tran03_dev=sft31a_dev;tran03a$=templates$[13]
        else
            tran01_dev=sft03a_dev;tran01a$=templates$[10]
            tran02_dev=sft23a_dev;tran02a$=templates$[12]
            tran03_dev=sft33a_dev;tran03a$=templates$[14]
        endif
   
        read (sfm07a_dev,key=sfe01a.firm_id$+sfe01a.wo_location$+sfe01a.wo_no$+datefrom$,dom=*next)
        while more
            dim sfm07a_key$:sfm07a_key_tpl$
            sfm07a_key$=key(sfm07a_dev,end=*break)
            if sfm07a_key.firm_id$+"  "+sfm07a_key.wo_no$<>sfe01a.firm_id$+sfe01a.wo_location$+sfe01a.wo_no$ then break
            if datethru$<>"" then if sfm07a.trans_date$>datethru$ then break
            if pos(sfm07a_key.record_id$="OMS")=0 then continue
            read (sfm07a_dev,key=sfm07a_key$)
            if sfm07a_key.record_id$="O" then sftran_dev=tran01_dev;dim sftran$:tran01a$;record_id_field$="O"
            if sfm07a_key.record_id$="M" then sftran_dev=tran02_dev;dim sftran$:tran02a$;record_id_field$="M"
            if sfm07a_key.record_id$="S" then sftran_dev=tran03_dev;dim sftran$:tran03a$;record_id_field$="S"
            find record (sftran_dev,key=sfm07a_key$,dom=*continue) sftran$
            if transtype$<>"" then if pos(record_id_field$=transtype$)=0 then continue
            if sfm07a_key.trans_date$(1,6)<>t1$ then gosub date_subtot
            if l2<=0 
                if l+3>l9 then gosub report_heading; gosub sub_head
                print (printer_dev)sfe01a.wo_no$,"  ",
:                       @(40),"Type: ",sfe01a.wo_type$," Cat: ",sfe01a.wo_category$,"  Stat: ",sfe01a.wo_status$,
:                       "  Whse: ",sfe01a.warehouse_id$,"  Sched Prod: ",sfe01a.sch_prod_qty$:m2$,
                if sfe01a.wo_category$="I"
                    x0$=sfe01a.item_id$
                    x0$=x0$(1,pos("   "=x0$+"   ")-1)+" "+sfe01a.description_01$,x0$=x0$(1,30)
                    print (printer_dev)@(10),x0$,
                else
                    print (printer_dev)@(10),sfe01a.description_01$
                endif

                if pos("0"<sfe01a.customer_id$)>0 then print (printer_dev)@(105-c1),"Cust: ",fnmask$(sfe01a.customer_id$,c1$),"  Order: ",sfe01a.order_no$,"-",sfe01a.line_no$,
                print (printer_dev)""
                l=l+2
            endif 

rem --- Now Print It

            if l>l9 then gosub sub_head
            if sfm07a_key.record_id$="O" then 
                print (printer_dev)fndate$(sftran.trans_date$),
:                       @(12),sftran.record_id_o$,
:                       @(15),sftran.op_seq$,
:                       @(132-m1-m2-m3),sftran.units:m2$,sftran.unit_cost:m3$,sftran.ext_cost:m1$,
            endif

            if sfm07a_key.record_id$="M" then 
                print (printer_dev)fndate$(sftran.trans_date$),
:                       @(12),sftran.record_id_m$,
:                       @(15),sftran.material_seq$,
:                       @(132-m1-m2-m3),sftran.units:m2$,sftran.unit_cost:m3$,sftran.ext_cost:m1$,
            endif

            if sfm07a_key.record_id$="S" then 
                print (printer_dev)fndate$(sftran.trans_date$),
:                       @(12),sftran.record_id_s$,
:                       @(15),sftran.subcont_seq$,
:                       @(132-m1-m2-m3),sftran.units:m2$,sftran.unit_cost:m3$,sftran.ext_cost:m1$,
            endif
            dim x0$(30),x1$(20),x2$(30); let x0$(1)="*** Not On File ***",x1$(1)=x0$

rem --- Materials Here
            if record_id_field$="M"
                find record (ivm01a_dev,key=firm_id$+sftran.item_id$,dom=*next) ivm01a$
                print (printer_dev)
:                           @(20),sftran.item_id$,"UM: ",sftran.unit_measure$,
:                           @(50),ivm01a.item_desc$
                if ivm01a.lotser_item$+ivm01a.inventoried$="YY" and pos(ivs01a.lotser_flag$="LS")<>0 then 
rem --- Serial Numbers Here
                    if sfe01a.wo_status$<>"C" and sfe01a.closed_date$>g9$ then 
                        lstran_dev=sft11a_dev
                        dim lstran$:templates$[22]
                    else
                        lstran_dev=sft12a_dev
                        dim lstran$:templates$[23]
                    endif

                    while more
                        k1$=key(lstran_dev,end=*break)
                        if pos(sftran.firm_id$+sftran.wo_location$+sftran.wo_no$+sftran.trans_date$+sftran.record_id_m$+sftran.trans_seq$=k1$)=1
                            read record (lstran_dev) lstran$
                            if l>=l9 then 
                                gosub sub_head
                                print (printer_dev)
:                                       @(20),sftran$(18),"UM: ",sftran.vendor_id$,
:                                       @(50),ivm01a.item_desc$
                            endif 
    rem --- Print It Here
                            if ivs01a.lotser_flag$="S" then print (printer_dev)@(20),"Serial: ", else print (printer_dev)@(20),"Lot: ",
                                print (printer_dev)lstran.lotser_no$,
                                if lstran_dev=sft11a_dev then print (printer_dev)@(30+i2),"Issued:",lstran.cls_inp_qty:m2$," Cost:",lstran.closed_cost:m3$," Amount: ",lstran.ext_cost:m1$
                                if lstran_dev=sft11a_dev then print (printer_dev)@(30+i2),"Issued:",lstran.qty_closed:m2$," Cost:",lstran.unit_cost:m3$," Amount: ",lstran.ext_cost:m1$            
                            endif
                            l=l+1
                        endif
                     wend 
                 endif
            endif
rem --- Operations Here
            if record_id_field$="O"
                x1$="Invalid Op Code"
                find record (opcode_dev,key=firm_id$+sftran.op_code$,dom=label3) opcode$
                x1$=opcode.code_desc$
                label3:
                find record (empcode_dev,key=firm_id$+sftran.employee_no$,dom=*next) empcode$
                print (printer_dev)
:                               @(20),sftran.op_code$,"  ",x1$,
:                               @(50),fnmask$(sftran.employee_no$,c5$)," ",empcode.empl_surname$+empcode.empl_givname$,
:                               @(132-m1-m2*3-m3),sftran.complete_qty:m2$,sftran.setup_time:m2$
            endif
rem --- Subcontracts Here
            if record_id_field$="S"
                if po$="Y" then find record (apm01a_dev,key=firm_id$+sftran.vendor_id$,dom=*next) apm01a$
                print (printer_dev)
:                           @(20),fnmask$(sftran.vendor_id$,c3$),"  ",apm01a.vendor_name$,
:                           @(50),"PO #: ",sftran.po_no$+sftran.po_line_no$
            endif

            l=l+1
            l0=l0+1,l2=l2+1
            if record_id_field$="O" then 
                d[0]=d[0]+sftran.units
                t[0]=t[0]+sftran.units
                s[0]=s[0]+sftran.units
                u[0]=u[0]+sftran.units
                d[2]=d[2]+sftran.setup_time
                t[2]=t[2]+sftran.setup_time
                s[2]=s[2]+sftran.setup_time
                u[2]=u[2]+sftran.setup_time
            endif
            d[1]=d[1]+sftran.ext_cost
            t[1]=t[1]+sftran.ext_cost
            s[1]=s[1]+sftran.ext_cost
            u[1]=u[1]+sftran.ext_cost
                
        wend 

rem --- W/O Totals Here

        if l2<>0 gosub  wo_subtot 
    wend 
   
done: rem --- End

    t9$="U"
    if sequence$<>"W" then gosub sub_total
    if h=0 then gosub report_heading
    if l+1>l9 then gosub report_heading
    print (printer_dev)@(132-m1),fill(m1-1,"-"),'lf',
    print (printer_dev)
:               @(5),"Grand Total: ",
    if pos("O"=transtype$)>0 then print (printer_dev)
:               @(44),"Total Hours: ",u[0]:m2$," Setup Hours: ",u[2]:m2$,
    print (printer_dev)
:               @(132-m1),u[1]:m1$,'lf'
    goto std_exit

report_heading: rem --- Report Heading

    l=0
    call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,h,h0,when$,clock$,status
    if status then exitto std_exit
    if pos("O"=transtype$)>0 then print (printer_dev)
:                                         @(132-m1*2-m2-m3-7),"Complt",
:                                         @(132-m1-m2-m3-6),"Setup",
:                                         @(126-m1-m2),"Total"
    print (printer_dev)
:               @(2),"Date",
:               @(11),"Src",
:               @(15),"Seq",
:               @(20),"Item/Description - Op Code/Employee - Vendor/P.O.",
    if pos("O"=transtype$)>0 then print (printer_dev)
:                                           @(132-m1*2-m2-m3-4),"Qty",
:                                           @(132-m1-m2-m3-6),"Hours",
    print (printer_dev)
:               @(126-m1-m2),"Units",
:               @(127-m1),"Rate",
:               @(125),"Amount",'lf'
    return

sub_head:rem --- Sub Heading

    if l+2>l9 then gosub report_heading
    if sequence$="T" then
        print (printer_dev)'lf',t0$+"   ",h5$,'lf'
        l=l+3
    endif
    if sequence$="C" then
        print (printer_dev)fnmask$(t0$,c1$)," ",h5$
        l=l+1
    endif
return

sub_total: rem --- First Sub Total

    if t0$<>"" and l0>=1 then 
        if l+2>l9 then gosub sub_head
        print (printer_dev)
:                   @(132-m1),fill(m1-1,"-"),'lf'
        print (printer_dev)
:                   @(15),h9$," ",t0$+"   ","Total: ",
        if pos("O"=transtype$)>0 then print (printer_dev)
:                   @(44),"Total Hours: ",t[0]:m2$," Setup Hours: ",t[2]:m2$,
        print (printer_dev)
:                   @(132-m1),t[1]:m1$,'lf'
        l=l+3
    endif

    if t9$<>"" then return
    dim t[2]
    t0$=data1$
    l0=0
  
    if sequence$="T" then
        dim h5$(20); let h5$(1)="*** Not On File ***"
        find record (sfm10a_dev,key=firm_id$+"A"+t0$,dom=*return) sfm10a$
        h5$=sfm10a.code_desc$
        gosub sub_head
    endif
    if sequence$="C" then
        dim h5$(30); let h5$(1)="*** Not On File ***"
        find record (arm01a_dev,key=firm_id$+t0$,dom=*return) arm01a$
        h5$=arm01a.customer_name$
        gosub sub_head
    endif
return

date_subtot:rem --- Date Subtotal
    if t1$<>"" then 
        if l+2>l9 then gosub sub_head
        print (printer_dev)
:                   @(132-m1),fill(m1-1,"-")
        print (printer_dev)
:                   @(15),"Month ",fnh$(t1$)," Total: ",
        if pos("O"=transtype$)>0 then print (printer_dev)
:                   @(44),"Total Hours: ",d[0]:m2$," Setup Hours: ",d[2]:m2$,
        print (printer_dev)
:                   @(132-m1),d[1]:m1$,'lf'
        l=l+3
    endif

    if t9$<>"" then return
    dim d[2]
    t1$=sfm07a_key.trans_date$(1,6)
    l=l+3
return

wo_subtot: rem --- W/O Subtotal

    if t9$="" then let t9$="B"
    gosub date_subtot
    if t9$="B" then let t9$=""
    if l+2>l9 then gosub sub_head
    print (printer_dev)
:               @(132-m1),fill(m1-1,"-")
    print (printer_dev)
:               @(15),"Work Order ",sfe01a.wo_no$," Total: ",
    if pos("O"=transtype$)>0 then print (printer_dev)
:               @(44),"Total Hours: ",s[0]:m2$," Setup Hours: ",s[2]:m2$,
    print (printer_dev)
:               @(132-m1),s[1]:m1$,'lf','lf'
    l=l+3
return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$
    def fni$(q$)=q$(1,2)+chr(32*pos("C"=rec$))+q$(3)
rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Format zip/postal code

    def fnzipcode$(q$)=fill(10,cvs(q$(1,3)+fill(pos("9"<q$(1,5))>0)+q$(4,2)+
:                      fill(ABS(pos("A">=q$(1,6))>0)-pos("0">q$(6,4))>0,"-")+
:                      q$(6,4)+fill(10),16))

rem --- Date/time handling functions

    def fndate$(q$)=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")
    def fnh$(q1$)=q1$(5,2)+"/"+q1$(1,4)

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
