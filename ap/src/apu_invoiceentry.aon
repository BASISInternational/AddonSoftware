rem --- Invoice Entry Update
rem --- Program apu_invoiceentry v8.0.0 03Dec2006 (apu_aa)
rem --- Created by adx_codeport.bbx v1.1.3 (12/03/2006 02:21:02)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

rem --- Currently just an incomplete stub which clears the entry files

    seterr std_error
    setesc std_error

rem --- Close printer and destroy current progress meter (if one exists)

    close (printer_dev,err=*next)
    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,status

rem --- Initializations

rem --- Get user approval to update

    prompt$="UPDATE_INVOICE_REG"
    call pgmdir$+"adc_yesno.aon",0,prompt$,0,answer$,fkey
    if answer$<>"YES" goto std_exit

rem --- Start progress meter and position header file

    call pgmdir$+"adc_progress.aon","NC","","","","",0,ape01_dev,1,meter_num,status
    read (ape01_dev,key=firm_id$,dom=*next)

rem --- Read next Invoice Header (ape-01) record

    while moreheaders
          k$=key(ape01_dev,end=*break)
          if pos(firm_id$=k$)<>1 break
          read record (ape01_dev,key=k$) ape01a$
          call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

          rem --- Initializations for this invoice

          ape01a_key$=k$
          invoice$=ape01a.firm_id$+ape01a.ap_type$+ape01a.vendor_id$+ape01a.ap_inv_no$

          rem --- Retrieve Vendor Master (apm-01) record

          dim apm01a$:fattr(apm01a$)
          apm01a.firm_id$=firm_id$
          apm01a.vendor_id$=ape01a.vendor_id$
          apm01a.vendor_name$=nf$
          k$=apm01a.firm_id$+apm01a.vendor_id$ 
          find record (apm01_dev,key=k$,dom=*next) apm01a$

          rem --- Position the Invoice Detail (ape-11) file

          read (ape11_dev,key=invoice$,dom=*next)

          rem --- Read the next Invoice Detail (ape-11) record

          while moredetail
                k$=key(ape11_dev,end=*break)
                if pos(invoice$=k$)<>1 break
                read record (ape11_dev) ape11a$
                remove (ape11_dev,key=k$)
          wend

          rem --- Delete Invoice Header (ape-01) record and loop back for the next one

          remove (ape01_dev,key=ape01a_key$)
    wend

rem --- All done

    if gl$="Y"
       call pgmdir$+"glc_update.aon",glm01_dev,glt04_dev,glw11_dev,status
       call pgmdir$+"glc_ctlupdate.aon",status
    endif
    call pgmdir$+"adc_batchdelete.aon",err=*next,status
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run pgmdir$+"ads_process_end.aon",err=*next
    release

rem #endinclude std_end.src

    end
