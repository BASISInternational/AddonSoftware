rem --- Print Unlinked Operation Sequences in Mat/Subs
rem --- Program bmr_opseq_o1 v8.0.0 08Jan2008 (bmr_lb)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (01/08/2008 11:50:31)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

        setesc std_error
        seterr std_error

rem --- Retrieve the program path

        pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

        sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
        dim sysinfo$:sysinfo_template$
        sysinfo$=stbl("+SYSINFO",err=*next)
        milestone=num(stbl("+MILESTONE",err=*next),err=*next)
        firm_id$=sysinfo.firm_id$

rem --- Init Data

        more=1
        h0=80
        h=0,headings=2,when$=sysinfo.system_date$,clock$=""
        dim headings$[headings]
        headings$[0]=sysinfo.firm_name$
        headings$[1]=sysinfo.task_desc$
        call pgmdir$+"adc_printer.aon",printer_dev,1,"","",status
        if status then goto std_exit
        call stbl("+DIR_SYP")+"bac_key_template.bbj","BMM_BILLMAST","PRIMARY",bmm01a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","BMM_BILLMAT","PRIMARY",bmm02a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","BMM_BILLSUB","PRIMARY",bmm05a_key_tpl$,rd_table_chans$[all],status$
        dim bmm01a_key$:bmm01a_key_tpl$
        dim bmm02a_key$:bmm02a_key_tpl$
        dim bmm05a_key$:bmm05a_key_tpl$

rem --- Background

        call pgmdir$+"adc_progress.aon","N","","","","",0,bmm01_dev,1,meter_num,status

rem --- Initial Read Of Bill

        read (bmm01_dev,key=firm_id$+billfrom$,dom=*next)

read_material: rem --- Read Loop For Materials

    bmm01a_key$=key(bmm01_dev,end=done)
    if pos(firm_id$=bmm01a_key$)<>1 then goto done
    if billthru$<>"" then if bmm01a_key.bill_no$(1,len(billthru$))>billthru$ then goto done
    read (bmm01_dev)
    read (bmm02_dev,key=bmm01a_key.firm_id$+bmm01a_key.bill_no$,dom=*next)

    while more
        bmm02a_key$=key(bmm02_dev,end=*break)
        if pos(bmm01a_key$=bmm02a_key$)<>1 then break
        read record (bmm02_dev) bmm02a$
        count=count+1
        if mod(count,5)=0 then call pgmdir$+"adc_progress.aon","S","","","",bmm02a_key.bill_no$(1,p[0]),0,0,1,meter_num,status

rem --- Test for Print

        if bmm02a.op_seq$="   " then continue
        find record (bmm03_dev,key=bmm02a.firm_id$+bmm02a.bill_no$+bmm02a.op_seq$,dom=print_material_line) bmm03a$
        if bmm03a.line_type$<>"M" then continue

print_material_line: rem --- Print Material Line

        if l+1>l9 then gosub report_heading
        print (printer_dev)
:           @(0),bmm02a.bill_no$(1,p[0]),
:           @(25),"Material",
:           @(40),bmm02a.material_seq$,
:           @(52),bmm02a.op_seq$,
        if bmm03a.line_type$="M" then print (printer_dev)
:           @(60),"Linked to comment" else print (printer_dev)
:           @(60),"Unlinked line"
        t0=t0+1
        l=l+1
    wend

    read (bmm05_dev,key=bmm01a_key.firm_id$+bmm01a_key.bill_no$,dom=*next)

rem --- Read Loop For Subcontracts

    while more 
        bmm05_key$=key(bmm05_dev,end=read_material)
        if pos(bmm01a_key$=bmm05_key$)<>1 then goto read_material
        read record (bmm05_dev) bmm05a$
        count=count+1
        if mod(count,5)=0 then call pgmdir$+"adc_progress.aon","S","","","",bmm05a_key.bill_no$(1,p[0]),0,0,1,meter_num,status

rem --- Test for Print

        if bmm05a.op_seq$="   " then continue
        find record (bmm03_dev,key=bmm05a.firm_id$+bmm05a.bill_no$+bmm05a.op_seq$,dom=print_subcontract) bmm03a$
        if bmm03a.line_type$<>"M" then continue
   
print_subcontract: rem --- Print Subcontract Line

        if l+1>l9 then gosub report_heading
        print (printer_dev)
:           @(0),bmm05a.bill_no$(1,p[0]),
:           @(25),"Subcontract",
:           @(40),bmm05a.subcont_seq$,
:           @(52),bmm05a.op_seq$,
        if bmm03a.line_type$="M" then print (printer_dev)
:           @(60),"Linked to comment" else print (printer_dev)
:           @(60),"Unlinked line"
        t0=t0+1
        l=l+1
    wend

done: rem --- Totals

    if h=0 then gosub report_heading
    print (printer_dev)'lf',
:       @(10),"Total Records:",t0
    goto std_exit

report_heading: rem --- Report Heading

    l=headings+1
    call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,h,h0,when$,clock$,status
    if status then exitto std_exit
    print (printer_dev)
:       @(0),"Bill No.",
:       @(25),"Type",
:       @(40),"Seq",
:       @(50),"Op Seq",
:       @(60),"Comments",'lf'
    l=l+2
return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)
    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
