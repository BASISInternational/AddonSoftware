rem --- Convert IV to 7.00
rem --- Program ivx70a_bbj v8.0.0 25Oct2007 (ivx70a)
rem --- Created by adx_codeport.bbj v1.1.5 (13/d/y 12:13:35)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved


initializations: rem --- Initializations

    files=1
    dim files$[files],address$[5],address[5]
    files$[1]=dir$+"ivm-10"

init_ivm10: rem --- Initializations for converting ivm-10

    print "Converting ivm-10 Inventory Codes..."

    ivm10_dev=unt
    open (ivm10_dev,err=chn_error) files$[1]
    read (ivm10_dev,key="",dom=*next)

read_ivm10: rem --- Read next ivm-10 Inventory Codes Record

    k$=key(ivm10_dev,end=done)
    read record (ivm10_dev) ivm10c$

rem --- Move fields to allow for expanded address block

    x$=ivm10c$(78)
    ivm10c$(78)=""
    ivm10c$(136)=x$

rem --- Extract address block from current record

    l=0
    for x=30 to 102 step 24
        l=l+1
        address$[l]=cvs(ivm10c$(x,24),2)
    next x

rem --- Extract city and state

    gosub city_state

rem --- Update address block in current record

    l=0
    for x=30 to 78 step 24
        l=l+1
        ivm10c$(x,24)=address$[l]
    next x
    ivm10c$(102,22)=city$
    ivm10c$(124,2)=state$

rem --- Update ivm-10 Inventory Codes Record

    write record (ivm10_dev,key=k$) ivm10c$

rem --- Loop back for next ivm-10 record

    goto read_ivm10

done:
    
    close(ivm10_dev)
    print "Inventory Control Has Been Upgraded To Version 7.00"

    run "mpx70a.bbj"

city_state: rem --- Extract City and State from current address block

    city$=""
    state$=""
    for x=1 to 5
        address[x]=len(address$[x])
    next x

rem --- First find the state

    for x=5 to 1 step -1
        l=x
        if state$="" if address[x]>1 gosub get_state
    next x

rem --- Now find the city

    for x=5 to 1 step -1
        if city$<>"" goto next_line
        if address[x]=0 goto next_line
        city$=address$[x]
        address$[x]=""
        address[x]=0
    next_line:
    next x
    return

get_state: rem --- Get State and adjust current address line

    addr$=address$[l]
    addr=address[l]
    state$=addr$(addr-1,2)
    addr$=cvs(addr$(1,addr-2),2)
    addr=len(addr$)
    if addr if addr$(addr,1)="," addr=addr-1,addr$=addr$(1,addr)
    address$[l]=addr$
    address[l]=addr
    return

chn_error:
    a=msgbox( "File not found - "+file$[1])
    goto std_exit

std_exit: rem --- Standard program end (27Oct2007)

    release
    end