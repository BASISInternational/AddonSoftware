rem adc - Build +SYSINFO and +SYSINFO_TPL (Temporary)
rem Program adc_sysinfo v8.0.0 01Apr2006

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- TASK_ID$    : Calling program name (Input)
rem --- FIRM_ID     : Firm ID/Null=01 (Input)
rem --- PRINTER_ID$ : Printer ID/Null=PS (Input)
rem --- PRINTER_OPT$: Printer option (Input)
rem --- TASK_DESC$  : Task description (Input)
rem --- STATUS: Exit status/0=No Error (Returned)

rem --- This program is temporarily required since the Administrator
rem --- hasn't been modified to generate +SYSINFO and +SYSINFO_TPL
rem --- yet (01Apr2006).

rem --- +SYSINFO values are hard-coded and may be changed as required.

    seterr std_error
    setesc std_error
    enter task_id$,firm_id$,printer_id$,printer_opt$,task_desc$,status

rem --- Assign default values where necessary if none was specified

    if cvs(task_id$,2)="" task_id$="(Unknown Task)"
    if cvs(firm_id$,2)="" firm_id$="01"
    if cvs(printer_id$,2)="" printer_id$="PS"
    if cvs(task_desc$,2)="" task_desc$="(Undefined Task Description)"

rem --- Is task id length longer than 16 characters (full pathname)?

    if len(task_id$)>16 p=pos("/"=task_id$,-1),task_id$=task_id$(p+1)

rem --- Define SYSINFO template

    sysinfo_tpl$="user_id:c(16),"+
:                "system_date:c(8),"+
:                "printer_id:c(4),"+
:                "printer_opt:c(1),"+
:                "firm_id:c(2),"+
:                "firm_name:c(40),"+
:                "task_id:c(16),"+
:                "process_id:c(24),"+
:                "task_desc:c(40),"+
:                "task_params:c(60)"

rem --- Dimension sysinfo$ and hard-code values as required

    dim sysinfo$:sysinfo_tpl$
    sysinfo.user_id$="aon"
    sysinfo.system_date$=date(0:"%Y%Mz%Dz")
    sysinfo.printer_id$=printer_id$
    sysinfo.printer_opt$=printer_opt$
    sysinfo.firm_id$=firm_id$
    sysinfo.firm_name$="AddonSoftware Demonstration Company"
    sysinfo.task_id$=task_id$
    sysinfo.process_id$=sysinfo.task_id$+str(dec(info(3,0)):"0000")
    sysinfo.task_desc$=task_desc$
    sysinfo.task_params$=""

rem --- Create global variables

    x$=stbl("+SYSINFO_TPL",sysinfo_tpl$)
    x$=stbl("+SYSINFO",sysinfo$)

rem --- All done

    status=0
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit:
    
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
    
std_error_release:

    status=999
    if pgm(-1)<>pgm(-2) exit 
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
