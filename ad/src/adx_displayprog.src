rem Display Program Information
rem Proprietary Software. AddonSoftware
rem Program ID: adx_displayprog.aon  <Mar 27, 2007>

	begin

	if stbl("+USE_SETERR")="YES" seterr error_proc

rem --- Functions

	def fnstr_pos(rd_tmp0$,rd_tmp1$,rd_tmp0)=int((pos(rd_tmp0$=rd_tmp1$,rd_tmp0)+rd_tmp0-1)/rd_tmp0)
	def fnstrip$(rd_tmp0$,rd_tmp1$)=rd_tmp0$(1,pos(fill(50,rd_tmp1$)=rd_tmp0$+fill(50,rd_tmp1$))-1)
	def fngetv_attr$(rd_att0$,rd_att1$)=rd_ddm_attr_col$[fnstr_pos(rd_att0$,rd_ddm_attr_col$[0,1],40),fnstr_pos(rd_att1$,rd_attr_def_col$[0,0],5)]
	def fngetc_attr$(rd_att0,rd_att0$)=rd_ddm_attr_col$[rd_att0,fnstr_pos(rd_att0$,rd_attr_def_col$[0,0],5)]

rem --- Directory STBLs

	rd_gui_dev$=stbl("+GUI_DEVICE")
	rd_dir_ddb$=stbl("+DIR_DDB")
	rd_dir_pgm$=stbl("+DIR_PGM")
	rd_dir_img$=stbl("+DIR_IMG")
	rd_dir_sys$=stbl("+DIR_SYS")
	rd_file_usr$=stbl("+FILE_USR"),rd_file_usr$=stbl("+DIR_USR",err=*next)+"aon_"+cvs(stbl("+USER_ID",err=*next),138)+".usr"
	rd_file_set$=stbl("+FILE_SET")

	rd_target_dir$=stbl("+DDDATA")

rem --- Constants

	rd_task_id$="LIST_PROG"+str(dec(info(3,0)):"0000")

file_opens:rem --- Open File(s)

	rd_num_files=1
	dim rd_open_tables$[1:rd_num_files],rd_open_opts$[1:rd_num_files],rd_open_chans$[1:rd_num_files],rd_open_tpls$[1:rd_num_files]

	rd_open_tables$[1]=stbl("+GUI_DEVICE"),rd_open_opts$[1]="O"
	gosub open_tables
	rd_gui_dev=num(rd_open_chans$[1])

rem --- Get SysGUI Object

	bbjAPI!=bbjAPI()
	rdSysGUI!=bbjAPI!.getSysGui()

    dim rd_gui_event$:tmpl(rd_gui_dev)
    dim rd_notify_base$:noticetpl(0,0)

rem --- Get Attributes

	call rd_dir_pgm$+"rdm_attr_init.aon",rd_attr_def_tbl$[all],rd_attr_def_col$[all]
		rd_attr_def_col$=rd_attr_def_col$[0,0]
		rd_attr_def_tbl$=rd_attr_def_tbl$[0,0]

rem --- Main Process

	gosub disp_win
	gosub get_win_settings
	gosub resize_win
	gosub source_edit

	rdForm!.setVisible(1)
	rdSource!.focus()

event_ctl:rem --- Event Control

	rdForm!.setCallback(rdForm!.ON_CLOSE,"exit_prog")
	rdForm!.setCallback(rdForm!.ON_RESIZE,"resize_win")

	rdSource!.setCallback(rdSource!.ON_EDIT_MODIFY,"source_edit")
	rdBtnSource!.setCallback(rdBtnSource!.ON_BUTTON_PUSH,"source_find")

	rdBtnLoad!.setCallback(rdBtnLoad!.ON_BUTTON_PUSH,"func_load")
	rdBtnExit!.setCallback(rdBtnExit!.ON_BUTTON_PUSH,"exit_prog")

	rdSysGUI!.flushEvents()

	process_events,err=*same

source_edit:rem --- Source Directory Edited

	rd_temp_source$=rdSource!.getText()
	if rd_temp_source$=""
		rdBtnLoad!.setEnabled(0)
		else
		rdBtnLoad!.setEnabled(1)
	endif

	return

source_find:rem --- Call Open Directory Dialog

	rd_source_dir$=fileopen("Find Source Directory",rd_dir_pgm$,"","","",0)
	if pos(rd_source_dir$="::BAD:: ::CANCEL::")=0
		rdSource!.setText(rd_source_dir$)
		gosub source_edit
	endif

	return

func_load:rem --- Load Program File

	rd_temp_source$=rdSource!.getText()
	rdProgList!=BBjAPI().getProgramInfo(rd_temp_source$,err=source_err)
	rdListVect!=rdProgList!.getListingVector()
	rdListCEdit!.removeAll()
	rdListCEdit!.addParagraphs(0,rdListVect!)

	return

source_err:rem --- Source File Error

	rd_msg_id$="PROGRAM_LIST_NF"
	dim rd_msg_tokens$[1]
		rd_msg_tokens$[1]=rd_temp_source$
	gosub disp_message

	rdSource!.focus()

	return

open_tables:rem -----<Open Tables

	call rd_dir_pgm$+"rdc_open_tables.aon",
:		rd_open_beg,
:		rd_open_end,
:		rd_open_tables$[all],
:		rd_open_opts$[all],
:		rd_open_chans$[all],
:		rd_open_tpls$[all],
:		rd_table_chans$[all],
:		rd_open_batch,
:		rd_open_status$

	if rd_open_status$<>""
		rd_msg_id$="ENTRY_OPEN_ERROR"
		dim rd_msg_tokens$[1]
			rd_msg_tokens$[1]=rd_open_status$
		gosub disp_message
		goto exit_prog
	endif

	return

disp_message:rem --- Display Message Dialog

	call rd_dir_pgm$+"adc_message.aon",
:		rd_msg_id$,
:		rd_msg_tokens$[all],
:		rd_msg_opt$,
:		rd_table_chans$[all]

	return

get_win_settings:rem --- Get Window Settings

	rd_save_win_desc$=pad("WIN_[DISPPROG]",20)

	call rd_dir_pgm$+"rdc_winsize.aon",rd_save_win_desc$,"W","",rdForm!,"READ",rd_win_coord[all]

	return

save_win_settings:rem --- Save Window Settings

	call rd_dir_pgm$+"rdc_winsize.aon",rd_save_win_desc$,"W","",rdForm!,"SAVE",rd_win_coord[all]

	return

disp_win:rem --- Display Window

	dim rd_ctl_misc$[20]

	rd_form_id$=rd_dir_sys$+"adx_displayprog.arc"

	call rd_dir_pgm$+"rdm_controls.aon",
:		rd_gui_dev,
:		rdSysGUI!,
:		rd_form_id$,
:		rd_win_coord[all],
:		rdForm!,
:		"DISPLAY",
:		rd_open_chan$[all],
:		rd_ctl_misc$[all]

	rdSource!=rdForm!.getControl(3000)
	rdBtnSource!=rdForm!.getControl(3001)
	rdListCEdit!=rdForm!.getControl(6000)

	rdBtnLoad!=rdForm!.getControl(3)
		rdBtnLoad!.setEnabled(0)
	rdBtnExit!=rdForm!.getControl(2)

	rd_win_disp$="YES"

	return

resize_win:rem --- Resize Window Contents

	rdSource!.setSize(rdForm!.getWidth()-230,rdSource!.getHeight())
	rdBtnSource!.setLocation(rdForm!.getWidth()-175,rdSource!.getY())

	rdBtnLoad!.setLocation(rdForm!.getWidth()-150,7)
	rdBtnExit!.setLocation(rdForm!.getWidth()-75,7)

	rdListCEdit!.setSize(rdForm!.getWidth()-(rdListCEdit!.getX()*2),rdForm!.getHeight()-(rdListCEdit!.getY()+5))

	return

error_proc:rem --- Error Processing Routine

	rd_err_text$=""
	if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5),err=*next)

	call stbl("+DIR_PGM")+"adc_error.aon",pgm(-2),str(tcb(5):"00000"),str(err:"000"),rd_err_text$,rd_err_act$

	if pos("EXIT"=rd_err_act$)<>0 goto exit_prog
	if pos("ESCAPE"=rd_err_act$)<>0 seterr 0;setesc 0
	if pos("RETRY"=rd_err_act$)<>0 retry

exit_prog:rem --- Exit Program

	if rd_win_disp$="YES" gosub save_win_settings

	release
