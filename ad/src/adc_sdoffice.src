rem adc - Interface with sdOffice (v8.00 stub)
rem Program adc_sdoffice v8.0.0 15Apr2006 (syc_so)
rem Created by adx_progconv.bbx v1.0.0 (04/15/2006 11:43:31)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- This program is currently only a stub with no support for any
rem --- sdOffice functionality pending a design decision for v8.00.
rem --- STATUS is returned as zero (no error) in all cases (15Apr06).

rem --- Much of this code is based on sdofc.bb

rem --- Arguments for main entry point: call "adc_sdoffice.aon" 

rem --- SDO_FILE$ : Name of sdo file, or program name if default (input)
rem --- SECTION$  : Section in sdo file to execute (input)
rem --- TOKENS$   : Hash of tokens, if needed (input)
rem --- SDO_DEV   : Channel that sdOffice socket is open on (input/returned)
rem --- TEXT$     : String template containing text of sdo file (input/returned)
rem --- DAT$      : Data from sdOffice, if any (returned)
rem --- STATUS    : 0 = okay
rem ---             1 = couldn't get client IP
rem ---             2 = error opening socket
rem ---             3 = couldn't initiate communication with sdOffice server
rem ---             4 = couldn't find sdo file
rem ---             5 = couldn't find section
rem ---             6 = error communicating with sdOffice

rem --- Arguments for execute entry point: call "adc_sdoffice.aon::do_now" 

rem --- CMD$      : sdOffice command to execute (don't use sdo file) (input)
rem --- SDO_DEV   : Channel that sdOffice socket is open on (input/returned)
rem --- DAT$      : Data from sdOffice, if any (returned)
rem --- STATUS    : 0 = okay
rem ---             1 = couldn't get client IP
rem ---             2 = error opening socket
rem ---             3 = couldn't initiate communication with sdOffice server
rem ---             4 = couldn't find sdo file
rem ---             5 = couldn't find section
rem ---             6 = error communicating with sdOffice
rem --- SDO_DEV, DAT$, and STATUS are the same

rem --- Arguments for sdOffice check entry point: call "adc_sdoffice.aon::check" 

rem --- STATUS    : 0 = sdOffice present and initialized (returned)

    setesc std_error
    seterr std_error
    enter sdo_file$,section$,tokens$,sdo_dev,text$,dat$,status
    goto done

do_now: rem --- Run a command directly (don't look at .sdo file)

    setesc std_error
    seterr std_error
    enter cmd$,sdo_dev,dat$,status
    goto done

check: rem --- Check if sdOffice is up and running

    seterr std_error
    setesc std_error
    enter status

done: rem --- Good exit

    status=0
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit:
    
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
    
std_error_release:

    status=999
    if pgm(-1)<>pgm(-2) exit 
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
