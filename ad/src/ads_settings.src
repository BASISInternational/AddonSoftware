rem Processing Settings
rem Proprietary Software. AddonSoftware
rem Program ID: ads_settings.aon  <Apr 18, 2006>

	enter rd_gui_dev,rdSysGUI!,rd_proc_set$[all],rd_table_chans$[all]

rem --- Functions

	def fnstr_pos(rd_tmp0$,rd_tmp1$,rd_tmp0)=int((pos(rd_tmp0$=rd_tmp1$,rd_tmp0)+rd_tmp0-1)/rd_tmp0)
	def fnstrip$(rd_tmp0$,rd_tmp1$)=rd_tmp0$(1,pos(fill(50,rd_tmp1$)=rd_tmp0$+fill(50,rd_tmp1$))-1)
	def fngetc_attr$(rd_att0,rd_att0$)=rd_attr_dcol$[rd_att0,fnstr_pos(rd_att0$,rd_attr_def_col$,5)]
	def fngetv_attr$(rd_att0$,rd_att1$)=rd_attr_dcol$[fnstr_pos(rd_att0$,rd_attr_dcol$[0,1],16),fnstr_pos(rd_att1$,rd_attr_def_col$,5)]

rem --- Directory STBLs

	rd_dir_pgm$=stbl("+DIR_PGM")
	rd_dir_img$=stbl("+DIR_IMG")
	rd_dir_sys$=stbl("+DIR_SYS")
	rd_file_usr$=stbl("+FILE_USR"),rd_file_usr$=stbl("+DIR_USR",err=*next)+"aon_"+cvs(stbl("+USER_ID",err=*next),138)+".usr"
	rd_file_set$=stbl("+FILE_SET")

file_opens:rem --- Open File(s)

	rd_num_files=1
	dim rd_open_tables$[1:rd_num_files],rd_open_opts$[1:rd_num_files],rd_open_chans$[1:rd_num_files],rd_open_tpls$[1:rd_num_files]

	rd_open_tables$[1]="ADM_FIRMS",rd_open_opts$[1]="OTA"

	gosub open_tables

	rd_adm_firms=num(rd_open_chans$[1]);dim rd_adm_firms$:rd_open_tpls$[1]

rem --- Misc Setup

	rdAPI!=BBjAPI()
    rdColsGUI!=rdAPI!.getSysGui()
    rdSysGUI!=rdAPI!.getSysGui()
	rdCompVect!=rdSysGUI!.makeVector()
	rdPrtrVect!=rdSysGUI!.makeVector()

	dim rd_gui_event$:tmpl(rd_gui_dev)

	call rd_dir_pgm$+"rdm_attr_init.aon",rd_attr_def_tbl$[all],rd_attr_def_col$[all]
		rd_attr_def_tbl$=rd_attr_def_tbl$[0,0]
		rd_attr_def_col$=rd_attr_def_col$[0,0]

	dim rd_alias$:"type:u(1),opens:u(1),alias:c(2*=0),device:c(10*=0),phys:c(10*=0),modes:c(80*=0)"

	rd_proc_date$=rd_proc_set$[1,0]
		if rd_proc_date$="" rd_proc_date$="00000000"
	rd_proc_comp$=rd_proc_set$[2,0]
	rd_proc_prtr$=rd_proc_set$[3,0]

rem --- Main Process

	gosub get_user_settings
	gosub win_coords
	gosub disp_win

	rd_sel_comp=-1
	gosub get_comp_data
	gosub def_grid_comp
	rdCompGrid!.setCellText(0,0,rdCompVect!)
	if rd_sel_comp<>-1
		rdCompGrid!.setSelectedRow(rd_sel_comp)
		else
		rdCompGrid!.setSelectedRow(0)
	endif

	rd_sel_prtr=-1
	gosub get_prtr_data
	gosub def_grid_prtr
	rdPrtrGrid!.setCellText(0,0,rdPrtrVect!)

	if rd_sel_prtr<>-1
		rdPrtrGrid!.setSelectedRow(rd_sel_prtr)
		else
		rdPrtrGrid!.setSelectedRow(0)
	endif

	rdProcDate!.focus()
	rdWindow!.setVisible(1)

event_ctl:rem --- Event Control

	rdWindow!.setCallback(rdWindow!.ON_CLOSE,"exit_prog")
	rdWindow!.setCallback(rdWindow!.ON_RESIZE,"resize_win")

	rdBtnOK!.setCallback(rdBtnOK!.ON_BUTTON_PUSH,"func_accept")
	rdBtnCancel!.setCallback(rdBtnCancel!.ON_BUTTON_PUSH,"exit_prog")

	rdSysGUI!.flushEvents()

	process_events,err=*same

func_accept:rem --- Update Array With Changes

	rd_proc_set$[1,1]=date(max(0,rdProcDate!.getValue()):"%Yd%Mz%Dz")
	rd_proc_set$[2,1]=rdCompGrid!.getCellText(rdCompGrid!.getSelectedRow(),0)
	rd_proc_set$[3,1]=rdPrtrGrid!.getCellText(rdPrtrGrid!.getSelectedRow(),0)

	for rd_curr_setting=1 to 3
		if rd_proc_set$[rd_curr_setting,0]<>rd_proc_set$[rd_curr_setting,1] rd_proc_set$[0,0]="MOD"
	next rd_curr_setting

	goto exit_prog

get_comp_data:rem --- Get Company Data

	read(rd_adm_firms,key="",dom=*next)

get_comp_next:rem --- Get Next Record

	readrecord(rd_adm_firms,end=*return)rd_adm_firms$
		rdCompVect!.addItem(rd_adm_firms.company_id$)
		rdCompVect!.addItem(rd_adm_firms.firm_name$)
		if rd_proc_comp$=rd_adm_firms.company_id$ rd_sel_comp=rdCompVect!.size()/2-1

	goto get_comp_next

get_prtr_data:rem --- Get Printer Data

	rd_alias$=tsk(rd_curr_task,err=*return)
	if rd_alias.type$=$01$
		rdPrtrVect!.addItem(rd_alias.alias$)
		rdPrtrVect!.addItem(rd_alias.device$)
		if rd_proc_prtr$=rd_alias.alias$ rd_sel_prtr=rdPrtrVect!.size()/2-1
	endif

	rd_curr_task=rd_curr_task+1

	goto get_prtr_data

get_user_settings:rem --- Get User Settings

	rd_save_win_desc$=pad("WIN_[SETTINGS]",20)
	rd_attr_desc$=rd_save_win_desc$

	dim rd_set_data$[len(rd_attr_desc$)/20]
		rd_set_data$[0]=rd_attr_desc$

	call rd_dir_pgm$+"rdm_config.aon",rd_file_usr$,"USR","READ",rd_set_data$[all]

	rd_win_coord$=rd_set_data$[fnstr_pos(rd_save_win_desc$,rd_set_data$[0],20)]

	return

win_coords:rem --- Set Window & Column Coordinates

	if rd_win_coord$="" rd_win_coord$="0,0,0,0"

	dim rd_win_coord[1:4]
		for rd_curr_coord=1 to 2
			rd_temp_spos=pos(","=","+rd_win_coord$+",",1,rd_curr_coord)
			rd_temp_epos=pos(","=","+rd_win_coord$+",",1,rd_curr_coord+1)-1
			rd_win_coord[rd_curr_coord]=num(rd_win_coord$(rd_temp_spos,rd_temp_epos-rd_temp_spos))
		next rd_curr_coord
	
	return

save_win_coords:rem --- Save Windows Coordinates

	if rdWindow!.getWidth()=0 return

	rd_curr_win_coords$=
:		str(rdWindow!.getX())+","+
:		str(rdWindow!.getY())+","+
:		str(rdWindow!.getWidth())+","+
:		str(rdWindow!.getHeight())

	rd_attr_desc$=rd_save_win_desc$

	dim rd_usr_data$[len(rd_attr_desc$)/20]
		rd_usr_data$[0]=rd_attr_desc$

	rd_usr_data$[fnstr_pos(rd_save_win_desc$,rd_usr_data$[0],20)]=rd_curr_win_coords$

	call rd_dir_pgm$+"rdm_config.aon",rd_file_usr$,"USR","WRITE",rd_usr_data$[all]

	return

disp_win:rem --- Display Window

	if pgm(-1)<>pgm(-2) rdBaseWin!=rdSysGUI!.getWindow(rdSysGUI!.getContext())
	dim rd_ctl_misc$[20]

	rd_form_id$=rd_dir_sys$+"ads_settings.arc"

	call rd_dir_pgm$+"rdm_controls.aon",
:		rd_gui_dev,
:		rdSysGUI!,
:		rd_form_id$,
:		rd_win_coord[all],
:		rdWindow!,
:		"DISPLAY",
:		rd_open_chan$[all],
:		rd_ctl_misc$[all]

	rdBtnOK!=rdWindow!.getControl(1)
	rdBtnCancel!=rdWindow!.getControl(2)

	rdProcDate!=rdWindow!.getControl(3001)
		rdProcDate!.setMask("%Mz/%Dz/%Yd")
		rdProcDate!.setValue(jul(num(rd_proc_date$(1,4)),num(rd_proc_date$(5,2)),num(rd_proc_date$(7,2))))
	rdCompGrid!=rdWindow!.getControl(3002)
	rdPrtrGrid!=rdWindow!.getControl(3003)

	rd_win_disp$="YES"

	return

def_grid_comp:rem --- Define Grid - Companies

	rd_def_ccols=2
	dim rd_attr_ccol$[rd_def_ccols,len(rd_attr_def_col$)/5]
		rd_attr_ccol$[1,fnstr_pos("DVAR",rd_attr_def_col$,5)]="FIRM_ID"
		rd_attr_ccol$[1,fnstr_pos("LABS",rd_attr_def_col$,5)]="ID"
		rd_attr_ccol$[1,fnstr_pos("CTLW",rd_attr_def_col$,5)]="30"

		rd_attr_ccol$[2,fnstr_pos("DVAR",rd_attr_def_col$,5)]="FIRM_DESC"
		rd_attr_ccol$[2,fnstr_pos("LABS",rd_attr_def_col$,5)]="Name"
		rd_attr_ccol$[2,fnstr_pos("CTLW",rd_attr_def_col$,5)]="230"

		for rd_curr_attr=1 to rd_def_ccols
			rd_attr_ccol$[0,1]=rd_attr_ccol$[0,1]+pad("SETTINGS."+rd_attr_ccol$[rd_curr_attr,fnstr_pos("DVAR",rd_attr_def_col$,5)],40)
		next rd_curr_attr
		rd_attr_disp_col$=rd_attr_ccol$[0,1]

	call rd_dir_pgm$+"rdm_grid_init.aon",rd_gui_dev,rdCompGrid!,"COLH-LINES-LIGHT-AUTO",rdCompVect!.size()/2,rd_attr_def_col$[all],rd_attr_disp_col$,rd_attr_ccol$[all]
	rdCompGrid!.setFitToGrid(rdCompGrid!.AUTO_RESIZE_LAST_COLUMN)

	return

def_grid_prtr:rem --- Define Grid - Printers

	rd_def_pcols=2
	dim rd_attr_pcol$[rd_def_pcols,len(rd_attr_def_col$)/5]
		rd_attr_pcol$[1,fnstr_pos("DVAR",rd_attr_def_col$,5)]="PRT_ID"
		rd_attr_pcol$[1,fnstr_pos("LABS",rd_attr_def_col$,5)]="ID"
		rd_attr_pcol$[1,fnstr_pos("CTLW",rd_attr_def_col$,5)]="30"

		rd_attr_pcol$[2,fnstr_pos("DVAR",rd_attr_def_col$,5)]="PRT_DESC"
		rd_attr_pcol$[2,fnstr_pos("LABS",rd_attr_def_col$,5)]="Name"
		rd_attr_pcol$[2,fnstr_pos("CTLW",rd_attr_def_col$,5)]="230"

		for rd_curr_attr=1 to rd_def_pcols
			rd_attr_pcol$[0,1]=rd_attr_pcol$[0,1]+pad("SETTINGS."+rd_attr_pcol$[rd_curr_attr,fnstr_pos("DVAR",rd_attr_def_col$,5)],40)
		next rd_curr_attr
		rd_attr_disp_col$=rd_attr_pcol$[0,1]

	call rd_dir_pgm$+"rdm_grid_init.aon",rd_gui_dev,rdPrtrGrid!,"COLH-LINES-LIGHT-AUTO",rdPrtrVect!.size()/2,rd_attr_def_col$[all],rd_attr_disp_col$,rd_attr_pcol$[all]
	rdPrtrGrid!.setFitToGrid(rdPrtrGrid!.AUTO_RESIZE_LAST_COLUMN)

	return

open_tables:rem --- Open Tables

	call rd_dir_pgm$+"rdc_open_tables.aon",
:		rd_open_beg,
:		rd_open_end,
:		rd_open_tables$[all],
:		rd_open_opts$[all],
:		rd_open_chans$[all],
:		rd_open_tpls$[all],
:		rd_table_chans$[all],
:		rd_open_batch,
:		rd_open_status$

	if rd_open_status$<>""
:		rd_msg_text$=rd_open_status$,
:		rd_msg_defs$="O  ;F;O";
:		gosub disp_msg;
:		release

	return

disp_msg:rem --- Display Messages

	call rd_dir_pgm$+"rdm_message.aon",
:		rd_gui_dev,
:		rd_msg_dialog_title$,
:		rd_msg_text$,
:		rd_msg_defs$,
:		rd_msg_opt$

	rd_msg_title$=""
	rd_msg_text$=""

	return

error_proc:rem --- Error Processing Routine

	rd_err_text$=""
	if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))

	call stbl("+DIR_PGM")+"adc_error.aon",pgm(-2),str(tcb(5):"00000"),str(err:"000"),rd_err_text$,rd_err_act$

	if pos("EXIT"=rd_err_act$)<>0 goto exit_prog
	if pos("ESCAPE"=rd_err_act$)<>0 seterr 0;setesc 0
	if pos("RETRY"=rd_err_act$)<>0 retry

exit_prog:rem --- Exit Program

	if rd_win_disp$="YES"
		gosub save_win_coords
		rdWindow!.destroy()
		if pgm(-1)<>pgm(-2)
			rdBaseWin!.focus()
			rdSysGUI!.setContext(rdBaseWin!.getContextID())
		endif
	endif

	if pgm(-1)=pgm(-2) escape
	exit
