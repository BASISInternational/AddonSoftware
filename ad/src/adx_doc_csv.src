rem Document Output - CSV (Comma Separated Values)
rem Proprietary Software. AddonSoftware
rem Program ID: adx_doc_csv.aon  <Apr 04, 2007>

	if stbl("+USE_SETERR")="YES" seterr error_proc

	enter
:		rdSysGUI!,
:		rdOutGrid!,
:		rdOutVect!,
:		rdBrkVect!,
:		rdHdrVect!,
:		rd_doc_id$,
:		rd_doc_settings$,
:		rep_date$,
:		rep_date_stamp$,
:		rep_time$,
:		rep_time_stamp$,
:		rd_rep_headings$[all],
:		rd_rep_columns$[all],
:		rd_attr_def_col$[all],
:		rd_attr_col$[all],
:		rd_out_options$[all],
:		rd_opt_action$,
:		rd_out_status$

rem --- Functions

	def fnstr_pos(rd_tmp0$,rd_tmp1$,rd_tmp0)=int((pos(rd_tmp0$=rd_tmp1$,rd_tmp0)+rd_tmp0-1)/rd_tmp0)
	def fnstrip$(rd_tmp0$,rd_tmp1$)=rd_tmp0$(1,pos(fill(50,rd_tmp1$)=rd_tmp0$+fill(50,rd_tmp1$))-1)
	def fngetv_attr$(rd_att0$,rd_att1$)=rd_attr_col$[fnstr_pos(rd_att0$,rd_attr_col$[0,1],40),fnstr_pos(rd_att1$,rd_attr_def_col$[0,0],5)]
	def fngetc_attr$(rd_att0,rd_att0$)=rd_attr_col$[rd_att0,fnstr_pos(rd_att0$,rd_attr_def_col$[0,0],5)]

rem --- Directory STBLs

	rd_gui_dev$=stbl("+GUI_DEVICE")
	rd_dir_pgm$=stbl("+DIR_PGM")
	rd_dir_img$=stbl("+DIR_IMG")
	rd_dir_sys$=stbl("+DIR_SYS")
	rd_file_set$=stbl("+FILE_SET")

rem --- Constants

	rd_milestone=20
	rd_milestone=num(stbl("+MILESTONE",err=*next),err=*next)

	rdGroupSpace!=bbjAPI().getGroupNamespace()
	rd_task_id$=rd_doc_id$+"CSV"+str(dec(info(3,0)):"0000")

	rd_total_cols=len(rd_attr_col$[0,1])/40
	rd_total_rows=rdOutGrid!.getNumRows()

rem --- Retrieve sysinfo data

    rd_sysinfo_tpl$=stbl("+SYSINFO_TPL",err=*next)
    dim rd_sysinfo$:rd_sysinfo_tpl$
    rd_sysinfo$=stbl("+SYSINFO",err=*next)
	rd_user_id$=rd_sysinfo.user_id$
	rd_proc_date$=date(jul(num(rd_sysinfo.system_date$(1,4)),num(rd_sysinfo.system_date$(5,2)),num(rd_sysinfo.system_date$(7,2))):stbl("+DATE_MASK"))

rem --- Main Process

	rdGroupSpace!.setValue("+process_task",rd_task_id$+"^C^"+rd_doc_id$+"-CSV"+"^CNC^"+str(rd_total_rows)+"^")
	gosub get_ini_settings
	gosub get_output_opts
	gosub setup_doc
	gosub set_headings
	gosub print_data
	if rd_doc_archive$="Y" gosub doc_archive
	rdGroupSpace!.setValue("+process_task",rd_task_id$+"^D^")

	goto exit_prog

get_output_opts:rem --- Get Output Options

	rd_out_option=fnstr_pos("CSV",rd_out_options$[0,0],3)
	if rd_out_option=0 goto exit_prog
	rd_doc_path$=rd_out_options$[rd_out_option,2]
	rd_doc_archive$=rd_out_options$[rd_out_option,3]

	while pos("["=rd_doc_path$)<>0
		rd_stbl_from=pos("["=rd_doc_path$)+1
		rd_stbl_thru=pos("]"=rd_doc_path$)
		rd_open_status$="Undefined global directory value :"+rd_doc_path$(rd_stbl_from,rd_stbl_thru-rd_stbl_from)
		rd_temp_stbl$=stbl(rd_doc_path$(rd_stbl_from,rd_stbl_thru-rd_stbl_from),err=exit_prog)
		rd_open_status$=""
		if rd_stbl_thru=len(rd_doc_path$)
			rd_doc_path$=rd_doc_path$(1,rd_stbl_from-2)+rd_temp_stbl$
			else
			rd_doc_path$=rd_doc_path$(1,rd_stbl_from-2)+rd_temp_stbl$+rd_doc_path$(rd_stbl_thru+1)
		endif
	wend

	return

setup_doc:rem --- Setup Document Output File

	rd_csv_doc$=rd_doc_path$+rd_doc_id$+".csv"
	erase rd_csv_doc$,err=*next
	string rd_csv_doc$,err=exit_prog
	rd_out_chan=unt
	open(rd_out_chan)rd_csv_doc$

	return

set_headings:rem --- Column Headings

	rd_col_pos=0

	for rd_curr_header=1 to rd_total_cols

		if rd_curr_header>1 rd_curr_row$=rd_curr_row$+","

		rd_temp_labs$=fngetc_attr$(rd_curr_header,"LABS")
		rd_temp_dtyp$=fngetc_attr$(rd_curr_header,"DTYP")
		rd_temp_maxl=num(fngetc_attr$(rd_curr_header,"MAXL"))
		rd_temp_ctlw=int(num(fngetc_attr$(rd_curr_header,"CTLW"))*rd_font_adj)

		if pos(","=rd_temp_labs$)<>0 rd_temp_labs$=$22$+rd_temp_labs$+$22$

		rd_curr_row$=rd_curr_row$+rd_temp_labs$

	next rd_curr_header

	rd_out_data$=rd_curr_row$
	gosub write_out

	return

print_data:rem --- Print Report Data

	for rd_curr_row=1 to rd_total_rows

		rd_col_pos=0
		rd_curr_row$=""

		for rd_curr_col=1 to rd_total_cols

			if rd_curr_col>1 rd_curr_row$=rd_curr_row$+","

			rd_temp_data$=rdOutVect!.getItem(((rd_curr_row-1)*rd_total_cols)+(rd_curr_col-1))
			rd_temp_dtyp$=fngetc_attr$(rd_curr_col,"DTYP")
			rd_temp_maxl=num(fngetc_attr$(rd_curr_col,"MAXL"))
			rd_temp_ctlw=int(num(fngetc_attr$(rd_curr_col,"CTLW"))*rd_font_adj)
			rd_temp_msko$=fngetc_attr$(rd_curr_col,"MSKO")

			if rd_temp_dtyp$="C"
				if cvs(rd_temp_data$,2)<>"" and rd_temp_msko$<>"" rd_temp_data$=str(rd_temp_data$:rd_temp_msko$,err=*next)
			endif

			if pos(","=rd_temp_data$)<>0 rd_temp_data$=$22$+rd_temp_data$+$22$

			rd_curr_row$=rd_curr_row$+rd_temp_data$

		next rd_curr_col

		rd_out_data$=rd_out_data$+rd_curr_row$+$0a$

		if mod(rd_curr_row,rd_milestone)=0
			rdGroupSpace!.setValue("+process_task",rd_task_id$+"^U^"+str(rd_curr_row)+"^")
			gosub write_out
		endif

	next rd_curr_row

	gosub write_out

	return

write_out:rem --- Write Output Document

	if rd_out_data$<>"" print(rd_out_chan)rd_out_data$
	rd_out_data$=""

	return

doc_archive:rem --- Send To Document Archive

	rd_doc_source$="I"
	rd_doc_ext$="CSV"
	rd_archive_action$=rd_out_status$

	call rd_dir_pgm$+"adc_documents.aon",
:		rd_doc_id$,
:		rep_date_stamp$,
:		rep_time_stamp$,
:		rd_doc_source$,
:		rd_doc_ext$,
:		rd_doc_path$,
:		rd_table_chans$[all],
:		rd_archive_action$

	return

get_ini_settings:rem --- Create Attribute Description String

	rd_attr_desc$=
:		"DEBUG_MODE          "+
:		"OUTPUT_TYPES        "+
:		"OUTPUT_DOC          "

	dim rd_set_data$[len(rd_attr_desc$)/20]
		rd_set_data$[0]=rd_attr_desc$

	call rd_dir_pgm$+"rdm_config.aon",rd_file_set$,"INI","READ",rd_set_data$[all]

	rd_debug_mode$=rd_set_data$[fnstr_pos("DEBUG_MODE",rd_set_data$[0],20)]
	rd_output_types$=rd_set_data$[fnstr_pos("OUTPUT_TYPES",rd_set_data$[0],20)]
	rd_output_doc$=rd_set_data$[fnstr_pos("OUTPUT_DOC",rd_set_data$[0],20)]

	return

error_proc:rem --- Error Processing Routine

	rd_err_text$=""
	if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5),err=*next)

	call stbl("+DIR_PGM")+"adc_error.aon",pgm(-2),str(tcb(5):"00000"),str(err:"000"),rd_err_text$,rd_err_act$

	if pos("EXIT"=rd_err_act$)<>0 goto exit_prog
	if pos("ESCAPE"=rd_err_act$)<>0 seterr 0;setesc 0
	if pos("RETRY"=rd_err_act$)<>0 retry

exit_prog:rem --- Exit Program

	if rd_out_chan<>0 close(rd_out_chan,err=*next)

	exit
