rem Open/Create Tables
rem Proprietary Software.  AddonSoftware
rem Program ID: adc_open_tables.aon  <Mar 07, 2006>

	if stbl("+USE_SETERR")="YES" seterr error_proc

rem --- Enter Arguments

	enter
:		rd_open_beg,
:		rd_open_end,
:		rd_open_tables$[all],
:		rd_open_opts$[all],
:		rd_open_chans$[all],
:		rd_open_tpls$[all],
:		rd_table_chans$[all],
:		rd_open_batch,
:		rd_open_status$

rem	rd_open_opts$[] - May contain one or more of the following:
rem		F - Find existing channel for file if open
rem		A - Get actual disk file name based on alias
rem		O - Open file
rem		N - Force open on new channel
rem		T - Retreive template record
rem		L - Lock file
rem		C - Close_file
rem		S - Skip error messages if file open unsuccessful
rem		I - Initialize file
rem		D - Define file if not found

rem	rd_table_chans$[512,2]
rem                [0,0]=Open Alias/Channel String
rem                [n,0]=Alias Template
rem                [n,1]=Alias Path
rem                [n,2]=Alias Type
rem                [n,3]=Actual Table Name

rem --- Constants

	rd_text_mode$=stbl("+TEXT_MODE",err=*next)
	rd_dir_dat$=stbl("+DIR_DAT")
	rd_dims_tpl$="dimen:i(1),d0elem:i(4),d0base:i(4),d1elem:i(4),d1base:i(4),d2elem:i(4),d2base:i(4)"

rem --- Open Table Array

	dim rd_open_array$:rd_dims_tpl$
	rd_open_array$=dims(rd_open_tables$[all])

	rd_no_tables=rd_open_array.d0elem
	if rd_open_beg=0 rd_open_beg=1
	if rd_open_end=0 rd_open_end=rd_no_tables

get_array:rem --- Get File Channel Array Data

	dim rd_temp_array$:rd_dims_tpl$
	rd_temp_array$=dims(rd_table_chans$[all],err=set_array)

	goto table_open_loop

set_array:rem --- Set File Channel Array

	dim rd_table_chans$[512,3]

table_open_loop:rem --- Loop Through Table Opens

	for rd_curr_table=rd_open_beg to rd_open_end

		rd_open_table$=rd_open_tables$[rd_curr_table]
		rd_open_opts$=rd_open_opts$[rd_curr_table]
		rd_table_tpl$=""
		rd_open_status$=""
		rd_tmplfile=0
		rd_table_path$=""
		rd_alias_type$=""

		if pos("F"=rd_open_opts$)=0 rd_open_chan=0

		rd_pathpos=max(pos("/"=rd_open_table$,-1),pos("\"=rd_open_table$,-1))
		if rd_pathpos<>0 rd_filepath$=rd_open_table$(1,rd_pathpos),rd_open_table$=rd_open_table$(rd_pathpos+1)

		rd_tmplid$=rd_open_table$
		rd_fileid$=rd_open_table$
		rd_table_id$=rd_open_table$

		if pos("F"=rd_open_opts$)<>0 gosub get_chan
		if pos("A"=rd_open_opts$)<>0 gosub get_actual_file
		if pos("O"=rd_open_opts$)<>0 gosub channel_open
		if pos("N"=rd_open_opts$)<>0 gosub force_open
		if pos("T"=rd_open_opts$)<>0 gosub get_template
		if pos("L"=rd_open_opts$)<>0 gosub lock_file
		if pos("C"=rd_open_opts$)<>0 gosub close_file

		rd_open_chans$[rd_curr_table]=str(rd_open_chan)
		rd_open_tpls$[rd_curr_table]=rd_table_tpl$

	next rd_curr_table

	goto exit_prog

get_chan:rem --- Get Channel For Opened File

	rd_temppos=pos(pad(cvs(rd_tmplid$,4),17," ")=rd_table_chans$[0,0],20)
	if rd_temppos<>0 rd_open_chan=num(rd_table_chans$[0,0](rd_temppos+17,3))

	return

channel_open:rem --- Open File On Existing Channel

	rd_temppos=pos(pad(cvs(rd_tmplid$,4),17," ")=rd_table_chans$[0,0],20)
	if rd_temppos=0 goto force_path

	rd_open_chan=num(rd_table_chans$[0,0](rd_temppos+17,3))

	return

force_path:rem --- Force Open File With Path

	gosub get_unt

	if rd_fileid$=stbl("+GUI_DEVICE")
		open (rd_open_chan,err=force_open,mode=rd_text_mode$)rd_fileid$
		else
		open (rd_open_chan,err=force_open)rd_filepath$+rd_fileid$
	endif

	goto addto_farr

force_open:rem --- Open File Without Path

	gosub get_unt

	open (rd_open_chan,err=open_errs)rd_fileid$
	rd_filepath$=""

	goto addto_farr

open_errs:rem --- File Open Errors

	rd_open_chan=0

	if err=12 rd_open_status$="Table "+rd_open_table$+" not found."+$0a$+"("+rd_fileid$+")"
	if err<>12 rd_open_status$="Unable to open "+rd_fileid$
	if rd_filepath$>"" rd_open_status$=rd_open_status$+$0a$+" in directory "+rd_filepath$

	if pos("S"=rd_open_opts$)<>0 rd_open_status$="",rd_open_chan=0

	goto exit_prog

get_actual_file:rem --- Get Actual File Name

	gosub open_table_file

	dim rd_alias_rec$:rd_ddm_tables$
	readrecord(rd_table_file,key=pad(cvs(rd_table_id$,4),16," "),dom=all_returns)rd_alias_rec$
		rd_aon_name$=rd_alias_rec.dd_aon_name$
		rd_table_path$=rd_alias_rec.dd_table_path$
		rd_alias_type$=rd_alias_rec.dd_alias_type$
		rd_attr_atab$=rd_alias_rec.dd_attr_atab$
		rd_open_table_id$=rd_alias_rec.dd_table_alias$

	if cvs(rd_attr_atab$,3)<>""
		dim rd_atab_rec$:rd_ddm_tables$
		readrecord(rd_table_file,key=pad(rd_attr_atab$,16),dom=all_returns)rd_atab_rec$
			rd_aon_name$=rd_atab_rec.dd_aon_name$
			rd_table_path$=rd_atab_rec.dd_table_path$
			rd_alias_type$=rd_atab_rec.dd_alias_type$
			rd_open_table_id$=rd_atab_rec.dd_table_alias$
	endif

	if len(rd_aon_name$)>6 rd_aon_name$=rd_aon_name$(1,6)
	if cvs(rd_aon_name$,3)="" rd_aon_name$=cvs(rd_open_table_id$,11)

	while pos("["=rd_table_path$)<>0
		rd_stbl_from=pos("["=rd_table_path$)+1
		rd_stbl_thru=pos("]"=rd_table_path$)
		rd_open_status$="Undefined global directory value :"+rd_table_path$(rd_stbl_from,rd_stbl_thru-rd_stbl_from)
		rd_temp_stbl$=stbl(rd_table_path$(rd_stbl_from,rd_stbl_thru-rd_stbl_from),err=exit_prog)
		rd_open_status$=""
		if rd_stbl_thru=len(rd_table_path$)
			rd_table_path$=rd_table_path$(1,rd_stbl_from-2)+rd_temp_stbl$
			else
			rd_table_path$=rd_table_path$(1,rd_stbl_from-2)+rd_temp_stbl$+rd_table_path$(rd_stbl_thru+1)
		endif
	wend

	rd_filepath$=""
	rd_fileid$=rd_table_path$+rd_aon_name$

	return

addto_farr:rem --- Add To File Channel Array

	rd_table_chans$[0,0]=rd_table_chans$[0,0]+cvs(pad(rd_tmplid$,17," "),4)+str(rd_open_chan:"000")
	rd_table_chans$[rd_open_chan,1]=rd_table_path$
	rd_table_chans$[rd_open_chan,2]=rd_alias_type$
	rd_table_chans$[rd_open_chan,3]=rd_aon_name$

	return

get_unt:rem --- Get Next Channel

	if pos("F"=rd_open_opts$)=0 rd_open_chan=unt

	return

get_template:rem --- Template Retrieval

	gosub open_tmpl_file

	if pos("O"=rd_open_opts$)
		rd_table_tpl$=rd_table_chans$[rd_open_chan,0]
		if rd_table_tpl$>"" return
	endif

	read (rd_tmpl_file,key=cvs(pad(rd_tmplid$,16," "),4),dom=tmpl_errs)*,*,rd_table_tpl$

	goto addto_tarr

tmpl_errs:rem --- Template Retrieval Errors

	rd_open_status$="Template record "+rd_tmplid$+" not found."

	if pos("S"=rd_open_opts$) rd_open_status$=""

	goto exit_prog

addto_tarr:rem --- Add To Template Array

	if pos("O"=rd_open_opts$) rd_table_chans$[rd_open_chan,0]=rd_table_tpl$

	return

lock_file:rem --- Lock Opened File

	rd_open_status$="Cannot lock file:"+$0A$+rd_fileid$+"."
	lock (rd_open_chan,err=exit_prog)
	rd_open_status$=""

	return

close_file:rem --- Close File & Remove Template Info

	rd_devtmp$=fill(20)+rd_table_chans$[0,0]+fill(20)
	rd_temppos=pos(pad(cvs(rd_open_table$,4),17," ")=rd_devtmp$,20)
	if rd_temppos=0 return

	rd_open_chan=num(rd_devtmp$(rd_temppos+17,3))
	close (rd_open_chan)
	rd_table_chans$[rd_open_chan,0]=""

	rd_devtmp$=rd_devtmp$(1,rd_temppos-1)+rd_devtmp$(rd_temppos+20)
	rd_devtmp$=rd_devtmp$(81)
	rd_devtmp$=rd_devtmp$(1,len(rd_devtmp$)-20)

	rd_table_chans$[0,0]=rd_devtmp$

	return

open_tmpl_file:rem --- Open Template File If Not So

	rd_ddm_table_tpls_alias$="DDM_TABLE_TPLS"
	rd_tmpl_file$=cvs(rd_ddm_table_tpls_alias$,8)

	rd_temppos=pos(pad(cvs(rd_ddm_table_tpls_alias$,4),17," ")=rd_table_chans$[0,0],20)
	if rd_temppos<>0
		rd_tmpl_file=num(rd_table_chans$[0,0](rd_temppos+17,3))
		rd_ddm_table_tpls$=rd_table_chans$[rd_tmpl_file,0]
		return
	endif

	rd_tmpl_file=unt
	open (rd_tmpl_file)rd_dir_dat$+rd_tmpl_file$
	read(rd_tmpl_file,key=pad(rd_ddm_table_tpls_alias$,16))*,*,rd_ddm_table_tpls$

	rd_table_chans$[0,0]=rd_table_chans$[0,0]+pad(cvs(rd_ddm_table_tpls_alias$,4),17," ")+str(rd_tmpl_file:"000")
	rd_table_chans$[rd_tmpl_file,0]=rd_ddm_table_tpls$

	return

open_table_file:rem --- Open Table File If Not So

	rd_ddm_tables_alias$="DDM_TABLES"
	rd_table_file$=cvs(rd_ddm_tables_alias$,8)
	rd_temppos=pos(pad(cvs(rd_ddm_tables_alias$,4),17," ")=rd_table_chans$[0,0],20)
	if rd_temppos<>0
		rd_table_file=num(rd_table_chans$[0,0](rd_temppos+17,3))
		rd_ddm_tables$=rd_table_chans$[rd_table_file,0]
		return
	endif

	gosub open_tmpl_file
	
	rd_table_file=unt
	open (rd_table_file)rd_dir_dat$+rd_table_file$
	read(rd_tmpl_file,key=pad(rd_ddm_tables_alias$,16))*,*,rd_ddm_tables$
	rd_table_chans$[0,0]=rd_table_chans$[0,0]+pad(cvs(rd_ddm_tables_alias$,4),17," ")+str(rd_table_file:"000")
	rd_table_chans$[rd_table_file,0]=rd_ddm_tables$

	return

all_returns:rem --- All Subroutine Returns

	return

error_proc:rem --- Error Processing Routine

	rd_err_text$=""
	if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))

	call stbl("+DIR_PGM")+"adc_error.aon",pgm(-2),str(tcb(5):"00000"),str(err:"000"),rd_err_text$,rd_err_act$

	if pos("EXIT"=rd_err_act$)<>0 goto exit_prog
	if pos("ESCAPE"=rd_err_act$)<>0 seterr 0;setesc 0
	if pos("RETRY"=rd_err_act$)<>0 retry

exit_prog:rem --- Exit Program

	rd_open_beg=0
	rd_open_end=0

	exit

