rem --- Monthly Cash Receipts Journal Purge
rem --- Program aru_cashjournal v8.0.0 01Jan2007 (aru_xb)
rem --- Created by adx_codeport.bbx v1.1.5 (01/01/2007 10:05:16)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=4,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ads-01"
    files$[2]="art-06"
    files$[3]="art-16"
    files$[4]="art-26"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ads01_dev=channels[1]
    art06_dev=channels[2]
    art16_dev=channels[3]
    art26_dev=channels[4]

rem --- Dimension string templates

    dim art06a$:templates$[2],art16a$:templates$[3],art26a$:templates$[4]

rem --- Retrieve miscellaneous templates

    files=1,begfile=1,endfile=files
    dim ids$[files],templates$[files]
    ids$[1]="ars-01A"
    call pgmdir$+"adc_template.aon",begfile,endfile,ids$[all],templates$[all],status
    if status goto std_exit

rem --- Dimension miscellaneous string templates

    dim ars01a$:templates$[1]

rem --- Assign form input values to local variables

    table$=fnget_table$("")
    begcust$=fnget_fld_data$(table$,"customer_id_1")
    endcust$=fnget_fld_data$(table$,"customer_id_2")
    begdate$=fnget_fld_data$(table$,"receipt_date_1")
    enddate$=fnget_fld_data$(table$,"receipt_date_2")
    reccode$=fnget_fld_data$(table$,"cash_rec_cd")

rem --- Retrieve parameter records

    ars01a_key$=firm_id$+"AR00"
    find record (ads01_dev,key=ars01a_key$,err=std_missing_params) ars01a$

rem --- Initializations

    moreheaders=1
    moredetail=1
    artype$=fill(2)
    reserved$=" "

rem --- Start progress meter and position header file

    call pgmdir$+"adc_progress.aon","NC","","","","",0,art06_dev,1,meter_num,status
    k$=firm_id$+artype$+reserved$+begcust$
    read (art06_dev,key=k$,dom=*next)

rem --- Read next Cash Receipts History Header (art-06) record

    while moreheaders   
          art06_key$=key(art06_dev,end=*break)
          if pos(firm_id$=art06_key$)<>1 break
          read record (art06_dev) art06a$
          call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
          if endcust$<>"" if art06a.customer_id$>endcust$ break
          if begdate$<>"" if art06a.receipt_date$<begdate$ continue
          if enddate$<>"" if art06a.receipt_date$>enddate$ continue
          if reccode$<>"" if art06a.cash_rec_cd$<>reccode$ continue

          rem --- Position Cash Receipts History Detail (art-16) file

          receipt$=art06a.firm_id$+art06a.ar_type$+art06a.reserved_str$+
:                  art06a.customer_id$+art06a.receipt_date$+art06a.cash_rec_cd$+
:                  art06a.ar_check_no$
          read (art16_dev,key=receipt$,dom=*next)

          rem --- Remove any Cash Receipts History Detail (art-16) records

          while moredetail
                k$=key(art16_dev,end=*break)
                if pos(receipt$=k$)<>1 break
                remove (art16_dev,key=k$)
          wend

          rem --- Position Cash Receipts History GL Distribution (art-26) file

          read (art16_dev,key=receipt$,dom=*next)

          rem --- Remove any Cash Receipts History GL Distribution (art-26) records

          while moredetail
                k$=key(art26_dev,end=*break)
                if pos(receipt$=k$)<>1 break
                remove (art26_dev,key=k$)
          wend

          rem --- Remove this Cash Receipts History Header (art-06) record

          remove (art06_dev,key=art06_key$,dom=*next)

          rem --- Loop back for next Cash Receipts History Header record

    wend

rem --- All done

    goto std_exit

rem --- Functions

rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit:
    
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
    
std_error_release:

    status=999
    if pgm(-1)<>pgm(-2) exit 
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run pgmdir$+"ads_process_end.aon",err=*next
    release

rem #endinclude std_end.src

    end
