rem --- ard_arInvHist.aon
rem --- launches AR  Invoice History Inquiry

enter rd_gui_dev,rdWindow!,rd_field_tvar$,rd_ddm_drill_defs$,rd_drill_pfx$,rd_table_chans$[all]
     
        dim dflt_data$[2,1]
        sel_key$=rd_drill_pfx$
        call stbl("+DIR_SYP")+"bam_run_prog.bbj","ART_INVHDR",stbl("+USER_ID"),"",sel_key$,rd_table_chans$[all],"",dflt_data$[all]

    goto exit_prog


rem --- Functions

    def fnget_dev(tmp0$)=num(rd_table_chans$[0,0](pos(pad(tmp0$,17)=rd_table_chans$[0,0],20)+17,3))
    def fnget_tpl$(tmp0$)=rd_table_chans$[num(rd_table_chans$[0,0](pos(pad(tmp0$,17)=rd_table_chans$[0,0],20)+17,3)),0]

rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

exit_prog:rem --- Exit Program

    if op$="Y"
        rem - can't remember why this seemingly extra file close is here...I *think* it had to do w/ launching drilldown, then going into hist invoice, then doing a print... had err 0 along the way, or instances of opt_invhdr were stacking up?
        num_files=1
        dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
        open_tables$[1]="OPT_INVHDR",open_opts$[1]="CX"
        gosub open_tables;rem close OPT_INVHDR
    endif

    exit
                