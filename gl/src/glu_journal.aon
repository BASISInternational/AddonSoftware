rem glu - Journal Entry Update
rem Program glu_journal v8.0.0 24Apr2006 (glu_ga)
rem Created by adx_progconv.bbx v1.0.1 (04/24/2006 03:32:40)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$
    task$=cvs(sysinfo.task_desc$,2)

rem --- Retrieve templates

    glcontrol_template$=stbl("+GLCONTROL_TPL",err=*next)
    dim glcontrol$:glcontrol_template$

rem --- Parameters

    dim info$[20]
    call pgmdir$+"adc_application.aon","GL",info$[all]
    gl$=info$[9]

rem --- Initializations

    more=1
    last$=""
    action$="N"

rem --- Options

    prompt$="Are you ready to update the "+task$
    call pgmdir$+"adc_yesno.aon",0,prompt$,0,v$,v3
    if v$<>"YES" goto std_exit

rem --- Start up progress meter

    call pgmdir$+"adc_progress.aon","N","","","Updating","",13,glw11_dev,1,meter_num,status

rem --- Position File

    read (glw11_dev,key=firm_id$,dom=*next)

rem --- Read through the work file and post the records to the daily detail file

    while more
          k$=key(glw11_dev,end=*break)
          if pos(firm_id$=k$)<>1 break
          read record(glw11_dev) glw11a$
          call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,0,status

          rem --- Set Journal ID in +GLCONTROL

          if glw11a.journal_id$<>last$ last$=glw11a.journal_id$
                                       glm03_key$=firm_id$+glw11a.journal_id$
                                       find record (glm03_dev,key=glm03_key$,dom=*next)glm03a$
                                       glcontrol$=stbl("+GLCONTROL",err=*next)
                                       glcontrol.journal_id$=glm03a.journal_id$
                                       glcontrol.permit_je$="Y"
                                       glcontrol.post_yr_end$=glm03a.post_yr_end$
                                       glcontrol.post_locked$=glm03a.post_locked$
                                       x$=stbl("+GLCONTROL",glcontrol$)
          endif

          rem --- Post record in the daily detail file

          call pgmdir$+"glc_glpost.aon",glm01_dev,glt04_dev,notused,glw11a.gl_account$,glw11a.trns_date$,
:                                       glw11a.reference_01$,glw11a.reference_02$,glw11a.reference_03$,
:                                       glw11a.description$,glw11a.trans_amt,glw11a.units,status

          rem --- Reversal?

          if cvs(glw11a.reverse_date$,2)<>"" glw11a.trans_amt=-glw11a.trans_amt
                                             glw11a.units=-glw11a.units
                                             call pgmdir$+"glc_glpost.aon",glm01_dev,glt04_dev,notused,
:                                                                          glw11a.gl_account$,glw11a.reverse_date$,
:                                                                          glw11a.reference_01$,glw11a.reference_02$,
:                                                                          glw11a.reference_03$,glw11a.description$,
:                                                                          glw11a.trans_amt,glw11a.units,status
          endif
    wend

rem --- Remove journal entry detail records

    call pgmdir$+"adc_clearpartial.aon",action$,gle11_dev,firm_id$,status

rem --- Remove journal entry header records

    call pgmdir$+"adc_clearpartial.aon",action$,gle01_dev,firm_id$,status

rem --- All done

    call pgmdir$+"glc_ctlupdate.aon",status
    call pgmdir$+"adc_batchdelete.aon",status
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run pgmdir$+"ads_process_end.aon",err=*next
    release

rem #endinclude std_end.src

    end
