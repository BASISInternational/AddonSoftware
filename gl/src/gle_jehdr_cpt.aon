rem GLE_JEHDR Callpoint Program
rem Proprietary Software.  AddonSoftware
rem Program ID: gle_jehdr_cpt.aon  <Apr 28, 2006>

	if stbl("+USE_SETERR")="YES" seterr error_proc

rem --- Enter Arguments

	enter

rem --- Functions

	def fnstr_pos(rd_tmp0$,rd_tmp1$,rd_tmp1)=int((pos(rd_tmp0$=rd_tmp1$,rd_tmp1)+rd_tmp1-1)/rd_tmp1)
	def fngett_attr$(rd_att0$)=rd_attr_tbl$[fnstr_pos(rd_att0$,rd_attr_def_tbl$,5)]
	def fngetc_attr$(rd_att0,rd_att0$)=rd_attr_col$[rd_att0,fnstr_pos(rd_att0$,rd_attr_def_col$,5)]
	def fngetv_attr$(rd_att0$,rd_att1$)=rd_attr_col$[fnstr_pos(rd_att0$,rd_attr_col$[0,1],16),fnstr_pos(rd_att1$,rd_attr_def_col$,5)]
	def fnget_rec$(rd_att0$)=rd_rec_data$[fnstr_pos(rd_att0$,rd_attr_col$[0,1],16),0]

route_callpoint:rem --- Route Callpoint to Correct Subroutine

	cp_callpoint_str$="AVAL;AGDS;AGCL;AWRI;"
	switch fnstr_pos(rd_callpoint$(1,4),cp_callpoint_str$,5)
		case fnstr_pos("AVAL",cp_callpoint_str$,5)
			gosub get_controls
			gosub calc_totals
			gosub display_totals
		break
		case fnstr_pos("AGDS",cp_callpoint_str$,5)
			gosub get_controls
			gosub calc_totals
			gosub display_totals
		break
		case fnstr_pos("AGCL",cp_callpoint_str$,5)
			gosub get_controls
			gosub calc_totals
			gosub display_totals
		break
		case fnstr_pos("AWRI",cp_callpoint_str$,5)
			gosub calc_totals
			if cp_debit_amt-cp_credit_amt<>0
				rd_msg_text$="Entry is out of balance by "+str(cp_debit_amt-cp_credit_amt:"######.00")+$0a$+"Do you wish to exit?"
				rd_msg_defs$="YN;Q;N"
				gosub disp_msg
				if rd_msg_opt$<>"Y" rd_call_proceed$="N"
			endif
		break
		case default
			goto exit_prog
		break
	swend

	goto exit_prog

get_controls:rem --- Get Additional Controls

	if cpDebitCtl!=null()
		cpDebitCtl!=rdWindow!.getControl(3006)
		cpCreditCtl!=rdWindow!.getControl(3007)
		cpBalanceCtl!=rdWindow!.getControl(3008)
	endif

	return

calc_totals:rem --- Calculate Totals

	dim cp_grid_data$:fattr(rd_rec_data$)
	cp_debit_amt=0
	cp_credit_amt=0
	cp_balance=0
	if rdRecVect!.size()<>0
		for cp_grid_rec=1 to rdRecVect!.size()
			cp_grid_data$=rdRecVect!.getItem(cp_grid_rec-1)
			cp_debit_amt=cp_debit_amt+nfield(cp_grid_data$,"debit_amt",err=*next)
			cp_credit_amt=cp_credit_amt+nfield(cp_grid_data$,"credit_amt",err=*next)
		next cp_grid_rec
	endif

	return

display_totals:rem --- Display Additional Totals

	cpDebitCtl!.setValue(cp_debit_amt)
	cpCreditCtl!.setValue(cp_credit_amt)
	cpBalanceCtl!.setValue(cp_debit_amt-cp_credit_amt)

	return

disp_msg:rem --- Display Messages

	call rd_dir_pgm$+"rdm_message.aon",rd_gui_dev,rd_msg_dialog_title$,rd_msg_text$,rd_msg_defs$,rd_msg_opt$
	rd_msg_title$=""
	rd_msg_text$=""

	return

error_proc:rem --- Error Processing Routine

	rd_err_text$=""
	if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))

	call stbl("+DIR_SYP")+"bac_error.bbj",err=error_proc,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
	if pos("EXIT"=rd_err_act$)<>0 goto exit_prog
	if pos("ESCAPE"=rd_err_act$)<>0 seterr 0;setesc 0
	if pos("RETRY"=rd_err_act$)<>0 retry

exit_prog:rem --- Exit Program

	exit
