rem glu - Close Fiscal Period
rem Program glu_periodend v8.0.0 08May2006 (glu_ca)
rem Created by adx_progconv.bbx v1.0.2 (05/08/2006 03:36:40)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=1,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ads-01"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ads01_dev=channels[1]

rem --- Retrieve miscellaneous templates

    files=1,begfile=1,endfile=files
    dim ids$[files],templates$[files]
    ids$[1]="gls-01A"
    call pgmdir$+"adc_template.aon",begfile,endfile,ids$[all],templates$[all],status
    if status goto std_exit

rem --- Dimension miscellaneous string templates

    dim gls01a$:templates$[1]

rem --- Retrieve parameter records

    gls01a_key$=firm_id$+"GL00"
    find record (ads01_dev,key=gls01a_key$,err=std_missing_params) gls01a$

rem --- Parameters

    total_pers=num(gls01a.total_pers$)

rem --- Assign input values to local variables
escape

    period$=rd_rec_data$[1,0]
    period=num(period$)
    year$=rd_rec_data$[2,0]
    year=num(year$)

rem --- Initializations

    period_name$=cvs(field(gls01a$,"period_name_"+str(period:"00")),2)

rem --- All transaction files empty?

    call pgmdir$+"glc_filecheck.aon",firm_id$,status
    if status goto std_exit

rem --- Confirm that this user REALLY wants to close the fiscal period

    message$="OK to close "+period_name$+" (fiscal period "+period$+" "+year$+")?"
    call pgmdir$+"adc_yesno.aon",0,message$,0,v$,v3
    if v3=4 or v$="NO" goto std_exit

rem --- Close period

    field gls01a$,"locked_flag_"+str(period:"00")="Y"
    field gls01a$,"locked_date_"+str(period:"00")=sysinfo.system_date$
    if period=total_pers goto close_last_period
    if period=period period=period+1
                     gls01a.current_per$=str(period:"00")
    endif
    goto update_calendar

close_last_period: rem --- Closing last period of year

    for x=1 to mp    
        field gls01a$,"locked_flag_"+str(x:"00")="N"
        field gls01a$,"locked_date_"+str(x:"00")=""
    next x
    gls01a.gl_yr_closed$="N"
    gls01a.current_per$="01"
    year=year+1
    gls01a.current_year$=str(year:"0000")

update_calendar: rem --- Update fiscal calendar

    write record (ads01_dev,key=gls01a_key$)gls01a$

rem --- All done

    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run pgmdir$+"ads_process_end.aon",err=*next
    release

rem #endinclude std_end.src

    end
