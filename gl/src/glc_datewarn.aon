rem glc - Print Transaction Date Warning Message
rem Program glc_datewarn v8.0.0 11Apr2006 (glc_ga)
rem Created by adx_progconv.bbx v1.0.0 (04/11/2006 05:00:32)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- PRINTER_DEV: Printer Channel (Input)
rem --- WHEN$      : Transaction Date (Input)
rem --- NUMBER     : Transaction Date Error Number (Input)
rem --- LINES      : Line Counter (Input)
rem --- ERRORS     : Total number of errors (Returned)
rem --- STATUS     : 0=No Error (Returned)

    setesc std_exit
    seterr std_error
    enter printer_dev,when$,number,lines,errors,status

rem --- Print warning/error message

    if number=0 goto std_exit
    prefix$="WARNING:"
    message$="The "+fndate$(when$)+" Transaction Date "
    if number=1 message$=message$+"Occurs Prior to The Current Period"
    if number=2 message$=message$+"Occurs After The Next Period"
    if number=3 message$=message$+"Falls Into A Prior GL Period"
    if number=101 message$=message$+"is not in the Prior, Current or Next GL Year"
    if number=102 message$=message$+"Falls Into A Locked GL Period"
    if number=103 message$=message$+"Fall Into A Closed Fiscal Year"
    if number=104 message$="This GL Account Does Not Exist"
    if number>99 errors=errors+1,prefix$="ERROR:"
    message$="---> "+prefix$+" "+message$
    print (printer_dev)message$
    lines=lines+1

rem --- All done

    goto std_exit

rem --- Functions

    def fndate$(q$)=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit:
    
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
    
std_error_release:

    status=999
    if pgm(-1)<>pgm(-2) exit 
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
