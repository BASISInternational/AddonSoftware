rem glc - Audit Control (Delete +GLCONTROL)
rem Program glc_ctldelete v8.0.0 11Apr2006 (glc_da)
rem Created by adx_progconv.bbx v1.0.0 (04/11/2006 04:41:58)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- STATUS: 0=No Error (Returned)

    seterr std_error
    setesc std_exit
    enter status

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Parameters

    status=0
    glcontrol_template$=stbl("+GLCONTROL_TPL",err=done)
    dim glcontrol$:glcontrol_template$
    glcontrol$=stbl("+GLCONTROL",err=done)
    firm_id$=glcontrol.firm_id$
    program$=glcontrol.program_name$
    process$=glcontrol.process_id$
    if glcontrol.update_flag$<>"Y" goto done

rem --- Open/Lock files

    files=1,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="glm-06"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto done
    glm06_dev=channels[1]

rem --- Dimension string templates

    dim glm06a$:templates$[1]

rem --- Retrieve and update glm-06 entry

    glm06_key$=firm_id$+process$+program$
    find record (glm06_dev,key=glm06_key$,dom=done)glm06a$
    glm06a.lstupd_date$=glm06a.lstuse_date$
    glm06a.lstupd_time$=glm06a.lstuse_time$
    write record (glm06_dev,key=a0$)glm06a$

done: rem --- All done. Delete +GLCONTROL and +GLCONTROL_TPL and exit.

    x$=stbl("!CLEAR","+GLCONTROL",err=*next)
    x$=stbl("!CLEAR","+GLCONTROL_TPL",err=*next)
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit:

    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape

std_error_release:

    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    close (sym06_dev,err=*next)
    exit

rem #endinclude std_exit.src

    end
