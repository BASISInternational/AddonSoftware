rem --- Purchase Order Receipt Register (Receipts By Order Overlay)
rem --- Program por_recptreg_o2 v8.0.0 11Jun2009 (por_dc)
rem --- Created by adx_codeport.bbj v1.1.5 (06/11/2009 11:37:28)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Initializations

    precision i[1]
    dim description$(40),b0$(8),b1$(30),l0$(52),l1$(64),l[17],z0$(75)
    headings$[2]="Receipts By Work Order"
    number=0
    t=5
    sales=0
    m1$=i6$
    m2$=i7$
    m3$=i8$
    m1=len(m1$)
    m2=len(m2$)
    m3=len(m3$)
    done=0
    maxm1=15
    maxm2=12
    maxm3=12
    l=l9+1
    subhead$=""
    t0$=""
    t1$=""
    issues=0
    subcontracts=0
    notopen=0
    wo=0

l600: rem --- Report initializations and print positions

    if m+m1+m2+m3<94 goto l650
    maxm1=maxm1-1
    maxm2=maxm2-1
    maxm3=maxm3-1
    call pgmdir$+"adc_sizemask.aon",m1$,m1,11,maxm1
    call pgmdir$+"adc_sizemask.aon",m2$,m2,9,maxm2
    call pgmdir$+"adc_sizemask.aon",m3$,m3,6,maxm3
    goto l600
l650:
    o[11]=width-8
    o[10]=o[11]-6
    o[9]=o[10]-12
    o[8]=o[9]-8
    o[7]=o[8]-m-1
    o[6]=o[7]-11
    o[5]=o[6]-m1
    o[4]=o[5]-m3
    o[3]=o[4]-m2
    o[2]=o[3]-3
    o[0]=0
    o[1]=o[0]+12

rem --- Shop Floor in use?

    if sf$<>"Y" goto l2500

rem --- Position files

    call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
    read (pow08_dev,key=firm_id$,dom=*next)

l1000: rem --- Get next sort record

    read record(pow08_dev,end=l2000)pow08a$
    if pos(firm_id$=pow08a$)<>1 goto l2000
    read (pow08_dev)

rem --- Level breaks?

    if t0$<>pow08a.warehouse_id$ then warehouse_id$=pow08a.warehouse_id$; gosub l6000
    if subhead$<>"" gosub l5400

rem --- Read receipt header and detail

    dim poe04a$:fattr(poe04a$)
    dim poe14a$:fattr(poe14a$)

    poe04a.firm_id$=firm_id$
    poe04a.receiver_no$=pow08a.receiver_no$

    poe14a.firm_id$=firm_id$
    poe14a.receiver_no$=pow08a.receiver_no$+pow08a.po_line_no$

    gosub l6400
    if status goto l1900

rem --- Calculate extension and set detail line fields

    precision 2
    po_extension=poe14a.unit_cost*poe14a.qty_received
    precision i[1]
    wo$=poe14a.wo_no$
    if cvs(poe14a.wo_seq_ref$,3)<>"" wo$=wo$+"-"+poe14a.wo_seq_ref$

rem --- Work order released?

    mark$=""
    if pom02a.line_type$<>"S" goto l1600
    if ivm02a.special_ord$<>"Y" goto l1600
    k$=firm_id$+"  "+poe14a.wo_no$
    read record (sfe01_dev,key=k$,dom=l1560) sfe01a$
    if sfe01a.wo_status$="O" goto l1600
l1560:
    mark$="*"
    notopen=notopen+1

l1600: rem --- Print detail line

    if l+2>l9 gosub report_heading
    print (printer_dev)@(o[0]),wo$,mark$,@(o[1]),poe14a.item_id$,@(o[2]),poe14a.unit_measure$,@(o[3]),poe14a.qty_received:m2$,@(o[4]),poe14a.unit_cost:m3$,@(o[5]),po_extension:m1$,@(o[6]),poe14a.location$,@(o[7]),fnmask$(poe04a.vendor_id$(1,vendlen),m0$),@(o[8]),poe04a.receiver_no$,@(o[9]),poe14a.po_no$,"-",poe14a.po_line_no$,@(o[10]),complete$,@(o[11]),fndate$(poe04a.recpt_date$)
    print (printer_dev)@(o[1]),description$

rem --- Accumulate totals

    whse=whse+po_extension
    report=report+po_extension
    l=l+2
    number=number+1

l1900: rem --- Loop back for next sort record

    goto l1000

l2000: rem --- Done with work orders

    done=1
    if number=0 goto l2500
    gosub l6000
    totals$="Total For Register"
    total=report
    gosub l6900

rem --- Any unreleased work orders?

    if notopen=0 goto l2500
    if l+3>l9 gosub report_heading
    print (printer_dev)""
    print (printer_dev)"WARNING: ",$22$,"*",$22$," Indicates That This Is A ",$22$,"Special Order",$22$," Inventory Item For A Work Order Which is Not Open."
    if pos01a.updt_plan_wo$="Y" goto l2500
    print (printer_dev)"          The Receipt Register Update May Not Be Run Until These Work Orders Are Released Or This Line Is Deleted."
    wo=notopen

l2500: rem --- Initializations for Sales Order Report

    if op$<>"Y" goto l4900
    headings$[2]="Receipts By Customer Sales Order"
    number=0
    t=6
    sales=1
    m1$=i6$
    m2$=i7$
    m3$=i8$
    m1=len(m1$)
    m2=len(m2$)
    m3=len(m3$)
    done=0
    number=0
    maxm1=15
    maxm2=12
    maxm3=12
    l=l9+1
    subhead$=""
    t0$=""
    t1$=""

l2600: rem --- Print positions

    if m+m1+(m2*2)+m3<94 goto l2650
    maxm1=maxm1-1
    maxm2=maxm2-1
    maxm3=maxm3-1
    call pgmdir$+"adc_sizemask.aon",m1$,m1,11,maxm1
    call pgmdir$+"adc_sizemask.aon",m2$,m2,9,maxm2
    call pgmdir$+"adc_sizemask.aon",m3$,m3,6,maxm3
    goto l2600
l2650:
    o[12]=width-8
    o[11]=o[12]-6
    o[10]=o[11]-5
    o[9]=o[10]-12
    o[8]=o[9]-8
    o[7]=o[8]-m-1
    o[6]=o[7]-m1
    o[5]=o[6]-m3
    o[4]=o[5]-m2
    o[3]=o[4]-m2
    o[0]=0
    o[1]=o[0]+12
    o[2]=o[3]-3

rem --- Position files

    read (pow09_dev,key=firm_id$,dom=*next)

l3000: rem --- Get next sort record

    read record(pow09_dev,end=done)pow09a$
    if pos(firm_id$=pow09a$)<>1 goto done

rem --- Level breaks?

    if t0$<>pow09a.warehouse_id$ then warehouse_id$=pow09a.warehouse_id$; gosub l6000
    if t1$<>pow09a.customer_id$ then customer_id$=pow09a.customer_id$; gosub l6200
    if subhead$<>"" gosub l5400
    if customer$="" goto l3200
    if l+4>l9 gosub report_heading
    print (printer_dev)""
    print (printer_dev)customer$
    l=l+2
    customer$=""

l3200: rem --- Read receipt header and detail

    dim poe04a$:fattr(poe04a$)
    dim poe14a$:fattr(poe14a$)

    poe04a.firm_id$=firm_id$
    poe04a.receiver_no$=pow09a.receiver_no$

    poe14a.firm_id$=firm_id$
    poe14a.receiver_no$=pow09a.receiver_no$+pow09a.po_line_no$

    gosub l6400
    if status goto l3900

rem --- Retrieve order line item

    ope11a.firm_id$=firm_id$
    ope11a.customer_id$=pow09a.customer_id$
    ope11a.order_no$=pow09a.order_no$
    ope11a.internal_seq_no$=pow09a.so_int_seq_ref$
    find record (ope11_dev,key=ope11a.firm_id$+ope11a.ar_type$+ope11a.customer_id$+ope11a.order_no$+ope11a.internal_seq_no$,dom=l3900) ope11a$

rem --- Calculate extensions and branch based on line type

    if poe14a.conv_factor=0 poe14a.conv_factor=1
    cost=poe14a.unit_cost/poe14a.conv_factor
    qty=poe14a.qty_received*poe14a.conv_factor
    precision 2
    po_extension=qty*cost
    precision i[1]

rem --- Print detail line

    if l+2>l9 gosub report_heading
    print (printer_dev)@(o[0]),poe04a.order_no$,"-",poe14a.so_int_seq_ref$,@(o[1]),poe14a.item_id$,@(o[2]),um$,@(o[3]),ope11a.qty_ordered:m2$,@(o[4]),qty:m2$,@(o[5]),cost:m3$,@(o[6]),po_extension:m1$,@(o[7]),fnmask$(poe04a.vendor_id$(1,vendlen),m0$),@(o[8]),poe04a.receiver_no$,@(o[9]),poe14a.po_no$,"-",poe14a.po_line_no$,@(o[10]),drop$,@(o[11]),complete$,@(o[12]),fndate$(poe04a.recpt_date$)
    print (printer_dev)@(o[1]),description$
    l=l+2

rem --- Accumulate totals

    customer=customer+po_extension
    whse=whse+po_extension
    report=report+po_extension
    l=l+2
    number=number+1

l3900: rem --- Loop back for next sort record

    goto l3000

done: rem --- All done

    done=1
    if number=0 goto l4900
    gosub l6000
    totals$="Total For Register"
    totals[all]=report[all]
    gosub l6900

l4900: rem --- Run next overlay

    run pgmdir$+"por_recptreg_o3.aon"

report_heading: rem --- Report Heading

    l=headings+3
    call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,page,width,when$,clock$,status
    if status exitto std_exit
    if sales goto l5200

rem --- Heading for work order receipts

    print (printer_dev)@(o[3]+m2-9),"Quantity",@(o[4]+m3-5),"PO",@(o[5]+m1-10),"PO",@(o[6]),"Receiving",@(o[10]),"Rec'd",@(o[11]+2),"Date"
    print (printer_dev)@(o[0]),"Work Order",@(o[1]),"Item",@(o[2]),"UM",@(o[3]+m2-9),"Received",@(o[4]+m3-5),"Cost",@(o[5]+m1-10),"Extension",@(o[6]),"Location",@(o[7]),"Vendor",@(o[8]),"Rec #",@(o[9]),"PO Number",@(o[10]),"Comp?",@(o[11]),"Received"
    return

l5200: rem --- Heading for sales order receipts

    print (printer_dev)@(o[3]+m2-9),"Order",@(o[4]+m2-9),"Quantity",@(o[5]+m3-5),"Unit",@(o[10]),"Drop",@(o[11]),"Rec'd",@(o[12]+2),"Date"
    print (printer_dev)@(o[0]),"Sales Order",@(o[1]),"Item",@(o[2]),"UM",@(o[3]+m2-9),"Quantity",@(o[4]+m2-9),"Received",@(o[5]+m3-5),"Cost",@(o[6]+m1-10),"Extension",@(o[7]),"Vendor",@(o[8]),"Rec #",@(o[9]),"PO Number",@(o[10]),"Ship",@(o[11]),"Comp?",@(o[12]),"Received"
    return

l5400: rem --- Subheading

    if l+4>l9 gosub report_heading
    print (printer_dev)""
    print (printer_dev)subhead$
    print (printer_dev)""
    l=l+3
    subhead$=""
    return

l6000: rem --- Warehouse break

    if t0$="" goto l6100
    if sales gosub l6200
    totals$="Total For Warehouse "+cvs(whse$,2)
    total=whse
    gosub l6900
l6100:
    if done goto l6190
    dim whse[1]
    t0$=warehouse_id$
    find record (ivm10_dev,key=firm_id$+"C"+warehouse_id$,dom=*next) ivm10c$
    whse$=ivm10c.warehouse_id$+" "+ivm10c.short_name$
    subhead$="Warehouse "+cvs(whse$,3)
l6190:
    return

l6200: rem --- Customer break
    if t1$="" goto l6300
    let totals$="Total For "+fnmask$(t1$(1,custlen),customask$)+" "+cvs(arm01a.customer_name$,3)
    let total=customer
    gosub l6900
l6300:
    if done goto l6390
    dim arm01a$:fattr(arm01a$)
    arm01a.firm_id$=firm_id$
    arm01a.customer_id$=customer_id$
    let t1$=customer_id$,customer=0
    find record (arm01_dev,key=arm01a.firm_id$+arm01a.customer_id$,dom=*next) arm01a$
    let customer$="Customer "+fnmask$(arm01a.customer_id$(1,custlen),customask$)+" "+arm01a.customer_name$
l6390:
    return

l6400: rem --- Read receipt header and detail

    status=11
    find record (poe04_dev,key=poe04a.firm_id$+poe04a.receiver_no$,dom=l6690) poe04a$
    find record (poe14_dev,key=poe14a.firm_id$+poe14a.receiver_no$+poe14a.po_line_no$,knum="DISPLAY_SEQ",dom=l6690) poe14a$
    if pom02a.firm_id$+pom02a.po_line_code$=firm_id$+poe14a.po_line_code$ goto l6500
    dim pom02a$:fattr(pom02a$)
    pom02a.firm_id$=firm_id$
    pom02a.po_line_code$=poe14a.po_line_code$
    find record (pom02_dev,key=pom02a.firm_id$+pom02a.po_line_code$,dom=l6690) pom02a$

l6500: rem --- Retrieve inventory item and warehouse

    dim ivm01a$:fattr(ivm01a$)
    dim ivm02a$:fattr(ivm02a$)

    ivm01a.firm_id$=firm_id$
    ivm01a.item_id$=poe14a.item_id$
    description$(1)=poe14a.order_memo$
    ivm02a.firm_id$=firm_id$
    ivm02a.warehouse_id$=poe14a.warehouse_id$
    ivm02a.item_id$=poe14a.item_id$
    if pom02a.line_type$<>"S" goto l6600
    find record (ivm01_dev,key=ivm01a.firm_id$+ivm01a.item_id$,dom=l6690) ivm01a$
    find record (ivm02_dev,key=ivm02a.firm_id$+ivm02a.warehouse_id$+ivm02a.item_id$,dom=l6690) ivm02a$
    description$(1)=fnitem$(ivm01a.item_desc$,i[3],i[4],i[5])

rem --- Format detail line fields
l6600:
    let x=poe14a.qty_ordered-poe14a.qty_prev_rec-poe14a.qty_received,complete$="No",dropship$="No",status=0
    if poe04a.rec_complete$="Y" complete$="Yes"
    if x<=0 complete$="Yes"
    if pom02a.line_type$="S" issues=issues+1
    if pom02a.line_type$="N" subcontracts=subcontracts+1
    if pom02a.dropship$="Y" dropship$="Yes"
l6690:
    return
rem --- Print totals
l6900:
    if l+1>l9 gosub report_heading
    print (printer_dev)@(o[t]-len(totals$)),totals$,@(o[t]),total:m1$
    let l=l+1
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Format zip/postal code

    def fnzipcode$(q$)
        q$=cvs(q$,4)
        if len(cvs(q$,2))<>9 and len(cvs(q$,2))<>6 return q$
        if len(cvs(q$,2))=9
            q1$="[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]"
            q1=mask(cvs(q$,2),q1$)
            if q1=0 return q$
            if q1<>0
                if q$(6,4)="0000" return q$(1,5)
            return q$(1,5)+"-"+q$(6,4)
            endif
        endif
        if len(cvs(q$,2))=6
            q1$="[a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9]"
            q1=mask(cvs(q$,2),q1$)
            if q1=0 return q$ else return q$(1,3)+" "+q$(4,3)
        endif
    fnend

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5)),
:                                   str(err),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
