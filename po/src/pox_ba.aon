rem --- Remove Unlinked PO Detail Lines
rem --- Program pox_ba v8.0.0 06Jul2007 (pox_ba)
rem --- Created by adx_codeport.bbx v1.1.5 (07/06/2007 02:47:10)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved
rem 17Jul96 JAL: New program for 6.0.1
rem -------------- Errors, Warnings and Conversion Information ---------------------

rem --- The following error(s) were encountered during the conversion:

rem --- v7.x Administrator reference ["sys-01A"] (Line 0104)
rem --- v7.x sys-01 reference [sys01a$:temp] (Line 0110)
rem --- v7.x sys-01 reference [sys01a_key$=] (Line 0123)
rem --- v7.x sys-01 reference [sys01a_key$,] (Line 0124)
rem --- v7.x Administrator reference ["sys-01"] (Line 0130)
rem --- v7.x sys-01 reference [sys01_dev=ch] (Line 0143)
rem --- v7.x Administrator reference ["syc_wc.bbx"] (Line 0157)
rem --- BBx reference ["syc_wc.bbx"] (Line 0157)

rem --- The following reset verbs were removed from this program:

rem --- BEGIN statement removed [begin]

rem --- The following IOLIST's were removed from this program:

rem --- The following channel references have been identified:

rem --- aps01a: (Generated by CodePort)

rem --------------------------------------------------------------------------------
rem --- ivs01a: (Generated by CodePort)
rem --- poe01a: Channel reference (Line 0218)
rem --- poe02a: Channel reference (Line 0217)
rem --- poe03a: Channel reference (Line 0216)
rem --- poe04a: Channel reference (Line 0215)
rem --- poe11a: Channel reference (Line 0214)
rem --- poe12a: Channel reference (Line 0213)
rem --- poe13a: Channel reference (Line 0212)
rem --- poe14a: Channel reference (Line 0211)
rem --- poe23a: Channel reference (Line 0211)
rem --- poe24a: Channel reference (Line 0210)
rem --- sys01a: Channel reference (Line 0208)

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=11,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ads-01"
    files$[2]="poe-01"
    files$[3]="poe-02"
    files$[4]="poe-03"
    files$[5]="poe-04"
    files$[6]="poe-11"
    files$[7]="poe-12"
    files$[8]="poe-13"
    files$[9]="poe-14"
    files$[10]="poe-23"
    files$[11]="poe-24"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ads01_dev=channels[1]
    poe01_dev=channels[2]
    poe02_dev=channels[3]
    poe03_dev=channels[4]
    poe04_dev=channels[5]
    poe11_dev=channels[6]
    poe12_dev=channels[7]
    poe13_dev=channels[8]
    poe14_dev=channels[9]
    poe23_dev=channels[10]
    poe24_dev=channels[11]

rem --- Dimension string templates

    dim poe01a$:templates$[2],poe02a$:templates$[3],poe03a$:templates$[4],
:       poe04a$:templates$[5],poe11a$:templates$[6],poe12a$:templates$[7],
:       poe13a$:templates$[8],poe14a$:templates$[9],poe23a$:templates$[10],
:       poe24a$:templates$[11]

rem --- Retrieve miscellaneous templates

    files=3,begfile=1,endfile=files
    dim ids$[files],templates$[files]
    ids$[1]="aps-01A"
    ids$[2]="ivs-01A"
    ids$[3]="sys-01A"
    call pgmdir$+"adc_template.aon",begfile,endfile,ids$[all],templates$[all],status
    if status goto std_exit

rem --- Dimension miscellaneous string templates

    dim aps01a$:templates$[1],ivs01a$:templates$[2],sys01a$:templates$[3]

rem --- Assign form input values to local variables

    table$=fnget_table$("")
    value_01$=fnget_fld_data$(table$,"dataname_01")

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (ads01_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ads01_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$
    sys01a_key$=firm_id$+"SY00"
    find record (ads01_dev,key=sys01a_key$,err=std_missing_params) sys01a$

rem --- Open/Lock Files

    files=11
    dim files$[files],options$[files],channels[files]
    files$[1]="sys-01"
    files$[2]="poe-01"
    files$[3]="poe-02"
    files$[4]="poe-03"
    files$[5]="poe-04"
    files$[6]="poe-11"
    files$[7]="poe-12"
    files$[8]="poe-13"
    files$[9]="poe-14"
    files$[10]="poe-23"
    files$[11]="poe-24"
    call pgmdir$+"adc_fileopen.aon",1,1,10,files$[all],options$[all],channels[all],batch,status
    if status goto std_exit
    sys01_dev=channels[1]
    poe01_dev=channels[2]
    poe02_dev=channels[3]
    poe03_dev=channels[4]
    poe04_dev=channels[5]
    poe11_dev=channels[6]
    poe12_dev=channels[7]
    poe13_dev=channels[8]
    poe14_dev=channels[9]
    poe23_dev=channels[10]
    poe24_dev=channels[11]

rem --- Background

    call pgmdir$+"syc_wc.bbx",1,0,80,1,0,4,0
    print 'SB',@(28,3),"Processing:",'SF',

rem --- Options

    v4$="Do You Wish To Remove Unlinked Purchase Order Detail Lines"
    call pgmdir$+"adc_yesno.aon",0,v4$,0,v$,v3
    if v$<>"YES" goto std_exit
    call pgmdir$+"adc_progress.aon","N","","","Updating","",25,0,1,meter_num,status

rem --- Requisitions

    k=15
    receipt=0
    x$="Requisitions"
    header_dev=poe01_dev
    detail_dev=poe11_dev
    gosub l6000

rem --- Purchase Orders

    k=15
    receipt=0
    x$="Purchase Orders"
    header_dev=poe02_dev
    detail_dev=poe12_dev
    gosub l6000

rem --- QA Receipts

    k=22
    receipt=1
    x$="Quality Assurance Receipts"
    header_dev=poe03_dev
    detail_dev=poe13_dev
    gosub l6000

rem --- QA Receipts Lot/Serial Detail

    k=22
    receipt=1
    x$="Quality Assurance Lot/Serial Detail"
    header_dev=poe03_dev
    detail_dev=poe23_dev
    gosub l6000

rem --- PO Receipts

    k=22
    receipt=1
    x$="Purchase Order Receipts"
    header_dev=poe04_dev
    detail_dev=poe14_dev
    gosub l6000

rem --- PO Receipts

    k=22
    receipt=1
    x$="Purchase Order Receipts"
    header_dev=poe04_dev
    detail_dev=poe14_dev
    gosub l6000

done: rem --- All done

    goto std_exit

l6000: rem --- Check for unlinked detail lines

    print @(40,3),x$,'CL',
    read (detail_dev,key="",dom=*next)

l6100: rem --- Read next detail

    let k$=key(detail_dev,end=l6300)
    read (detail_dev)
    call pgmdir$+"adc_progress.aon","S","","","",k$(1,2)+" "+k$(3,6)+" "+k$(9,7),0,0,1,meter_num,status
    if receipt print " ",k$(16,7),
    find (header_dev,key=k$(1,k),dom=l6200)
    goto l6100

l6200: rem --- Remove unlinked detail line

    remove (detail_dev,key=k$)

    goto l6100
rem --- Done with current file set
l6300:
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Format zip/postal code

    def fnzipcode$(q$)=fill(10,cvs(q$(1,3)+fill(pos("9"<q$(1,5))>0)+q$(4,2)+
:                      fill(ABS(pos("A">=q$(1,6))>0)-pos("0">q$(6,4))>0,"-")+
:                      q$(6,4)+fill(10),16))

rem --- Date/time handling functions

    def fndate$(q$)=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run pgmdir$+"ads_process_end.aon",err=*next
    release
rem #endinclude std_end.src

    end
