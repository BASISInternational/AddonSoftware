rem --- Purchase Order Receipt Register Update
rem --- Program pou_recptreg v8.0.0 11Jun2009 (pou_da)
rem --- Created by adx_codeport.bbj v1.1.5 (06/11/2009 11:40:58)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

rem -------------- Errors, Warnings and Conversion Information ---------------------

rem --- The following error(s) were encountered during the conversion:

rem --- v7.x sys-01 reference [sys01_dev,i[] (Line 0348)
rem --- v7.x administrator reference ["syc_cn.bbx"] (Line 0411)
rem --- BBx reference ["syc_cn.bbx"] (Line 0411)
rem --- v7.x sys-01 reference [sys01_dev] (Line 0436)
rem --- BBx reference ["poc_wa.bbx"] (Line 0596)
rem --- BBx reference ["poc_ga.bbx"] (Line 0643)
rem --- BBx reference ["ivc_ua.bbx"] (Line 0796)

rem --- The following cross-reference files are being referenced:

rem --- Cross-reference file glt-14 referenced (Line 0206)
rem --- Cross-reference file ivm-03 referenced (Line 0209)
rem --- Cross-reference file ivm-08 referenced (Line 0213)
rem --- Cross-reference file poe-32 referenced (Line 0228)
rem --- Cross-reference file poe-34 referenced (Line 0229)
rem --- Cross-reference file poe-42 referenced (Line 0230)
rem --- Cross-reference file poe-44 referenced (Line 0231)
rem --- Cross-reference file poe-52 referenced (Line 0232)
rem --- Cross-reference file poe-54 referenced (Line 0233)
rem --- Cross-reference file poe-32 referenced (Line 0309)
rem --- Cross-reference file poe-34 referenced (Line 0310)
rem --- Cross-reference file poe-42 referenced (Line 0311)
rem --- Cross-reference file poe-44 referenced (Line 0312)
rem --- Cross-reference file poe-52 referenced (Line 0313)
rem --- Cross-reference file poe-54 referenced (Line 0314)
rem --- Cross-reference file ivm-03 referenced (Line 0322)
rem --- Cross-reference file ivm-08 referenced (Line 0391)
rem --- Cross-reference file glt-14 referenced (Line 0396)
rem --- Cross-reference file ivm-03 referenced (Line 0439)
rem --- Cross-reference file ivm-08 referenced (Line 0443)
rem --- Cross-reference file glt-14 referenced (Line 0620)
rem --- Cross-reference file poe-44 referenced (Line 0670)
rem --- Cross-reference file poe-42 referenced (Line 0706)
rem --- Cross-reference file poe-34 referenced (Line 0720)
rem --- Cross-reference file poe-54 referenced (Line 0721)
rem --- Cross-reference file poe-32 referenced (Line 0743)
rem --- Cross-reference file poe-52 referenced (Line 0744)

rem --- The following cross-reference records are being referenced:

rem --- Cross-reference record glt14a replaced by index on glt-04 (Line 0257)
rem --- Cross-reference record ivm03a replaced by index on ivm-01 (Line 0258)
rem --- Cross-reference record ivm08a replaced by index on ivm-07 (Line 0259)
rem --- Cross-reference record poe32a replaced by index on opt-01 (Line 0264)
rem --- Cross-reference record poe34a replaced by index on poe-02 (Line 0265)
rem --- Cross-reference record poe42a replaced by index on poe-04 (Line 0265)
rem --- Cross-reference record poe44a replaced by index on poe-12 (Line 0265)
rem --- Cross-reference record poe52a replaced by index on poe-13 (Line 0266)
rem --- Cross-reference record poe54a replaced by index on poe-02 (Line 0266)

rem --- The following IOLIST's were removed from this program:

rem --- apm01a: iolist b0$(1),b1$(1)
rem --- apm06a: iolist u0$(1),u1$(1),u[all]
rem --- arm10d: iolist z0$(1),z1$(1)
rem --- ivm01a: iolist c0$(1),c1$(1),c2$(1),c3$,c4$,c5$,c6$(1),c[all]
rem --- ivm02a: iolist d0$(1),d1$(1),d2$,d[all]
rem --- mhe_01: iolist xa0$,as$[1],ad$[1],aa$[1],as$[2],ad$[2],aa$[2],as$[3],ad$[3],aa$[3],as$[4],ad$[4],aa$[4],as$[5],ad$[5],aa$[5],as$[6],ad$[6],aa$[6],as$[7],ad$[7],aa$[7],as$[8],ad$[8],aa$[8],as$[9],ad$[9],aa$[9],as$[10],ad$[10],aa$[10],a31$,a32$,a33$,a34$,a35$,a36$,a37$,a38$,a39$,a40$,a41$,a42$,a43$,a44$,a45$,a46$,a47$,a48$,a49$,a50$,hr[1],hr[2],hr[3],hr[4],hr[5],hr[6],hr[7],hr[8],hr[9],hr[10]
rem --- mhm_01: iolist jj$,f$[1],dd[1],o$[1],t$[1],f$[2],dd[2],o$[2],t$[2],f$[3],dd[3],o$[3],t$[3],f$[4],dd[4],o$[4],t$[4],f$[5],dd[5],o$[5],t$[5],f$[6],dd[6],o$[6],t$[6],f$[7],dd[7],o$[7],t$[7],f$[8],dd[8],o$[8],t$[8],f$[9],dd[9],o$[9],t$[9],f$[10],dd[10],o$[10],t$[10],p$[1](1),p$[2](1),p$[3](1),p$[4](1),p$[5](1),p$[6](1),p$[7](1),p$[8](1),p$[9](1),p$[10](1)
rem --- poe02a: iolist s0$(1),s1$(1),s2$,s3$,s[all]
rem --- poe04a: iolist a0$(1),a1$(1),a2$,a3$,a[all]
rem --- poe12a: iolist r0$(1),r1$(1),r2$(1),r3$(1),r4$(1),r5$,r6$,r[all]
rem --- poe14a: iolist w0$(1),w1$(1),w2$(1),w3$(1),w4$(1),w5$,w6$,w[all]
rem --- poe24a: iolist u0$(1),u1$(1),u2$,u[all]
rem --- pom02a: iolist y0$(1),y1$(1),y2$(1)
rem --- pot04a: iolist flippeda0$(1),a1$(1),a2$,a3$,a[all]
rem --- pot14a: iolist flippedw0$(1),w1$(1),w2$(1),w3$(1),w4$(1),w5$,w6$,w[all]
rem --- pot24a: iolist xt2$
rem --- pot34a: iolist xt3$
rem --- pot44a: iolist xt4$
rem --- sfe01a: iolist t0$(1),t1$(1),t[all]
rem --- sfm07a: iolist l0$(1)
rem --- sfm10a: iolist u0$(1),u1$(1)
rem --- sft21a: iolist l0$(1),l1$(1),l[all]
rem --- sft31a: iolist l0$(1),l1$(1),l[all]

rem --- The following channel references have been identified:

rem --- apm10a: Channel reference (Line 0379)

rem --------------------------------------------------------------------------------
rem --- aps01a: (Generated by CodePort)
rem --- glm01a: Channel reference (Line 0408)
rem --- glt04a: Channel reference (Line 0383)
rem --- glt14a: Channel reference (Line 0382)
rem --- ivm03a: Channel reference (Line 0374)
rem --- ivm04a: Channel reference (Line 0385)
rem --- ivm05a: Channel reference (Line 0372)
rem --- ivm07a: Channel reference (Line 0378)
rem --- ivm08a: Channel reference (Line 0377)
rem --- ivm12a: Channel reference (Line 0369)
rem --- ivm17a: Channel reference (Line 0375)
rem --- ivs01a: (Generated by CodePort)
rem --- ivt01a: Channel reference (Line 0373)
rem --- ivt02a: Channel reference (Line 0378)
rem --- ivt03a: Channel reference (Line 0371)
rem --- ivt04a: Channel reference (Line 0363)
rem --- poe32a: Channel reference (Line 0361)
rem --- poe34a: Channel reference (Line 0360)
rem --- poe42a: Channel reference (Line 0359)
rem --- poe44a: Channel reference (Line 0358)
rem --- poe52a: Channel reference (Line 0357)
rem --- poe54a: Channel reference (Line 0356)
rem --- sfe13a: Channel reference (Line 0364)
rem --- sfe14a: Channel reference (Line 0363)
rem --- sfe15a: Channel reference (Line 0362)
rem --- sfe22a: Channel reference (Line 0361)
rem --- sfe23a: Channel reference (Line 0360)
rem --- sfe25a: Channel reference (Line 0359)
rem --- sfe32a: Channel reference (Line 0358)
rem --- sys01a: Channel reference (Line 0352)

    setesc std_error
    seterr std_error
    
    next_overlay$=""

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

goto std_exit;rem needs post codeport work...not ready to run ! (12Jun09.CAH)
escape
rem --- Open/Lock files

    files=53,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="apm-01",ids$[1]="APM_VENDMAST"
    files$[2]="apm-06",ids$[2]="APM_VENDREPL"
    files$[3]="apc_typecode",ids$[3]="APC_TYPECODE"
    files$[4]="aps_params",ids$[4]="APS_PARAMS"
    files$[5]="arc_distcode",ids$[5]="ARC_DISTCODE"
    files$[6]="glm-01",ids$[6]="GLM_ACCT"
    files$[7]="glt-04",ids$[7]="GLE_DAILYDETAIL"
    files$[8]="glt-14",ids$[8]=""
    files$[9]="ivm-01",ids$[9]="IVM_ITEMMAST"
    files$[10]="ivm-02",ids$[10]="IVM_ITEMWHSE"
    files$[11]="ivm-03",ids$[11]="IVX_ITEMPROD"
    files$[12]="ivm-04",ids$[12]="IVM_ITEMTIER"
    files$[13]="ivm-05",ids$[13]="IVM_ITEMVEND"
    files$[14]="ivm-07",ids$[14]="IVM_LSMASTER"
    files$[15]="ivm-08",ids$[15]="IVX_LSXREF"
    files$[16]="ivm-12",ids$[16]="IVM_ITEMACT"
    files$[17]="ivm-17",ids$[17]="IVM_LSACT"
    files$[18]="ivs_params",ids$[18]="IVS_PARAMS"
    files$[19]="ivt-01",ids$[19]="IVT_LSTRANS"
    files$[20]="ivt-02",ids$[20]="IVX_LSCUST"
    files$[21]="ivt-03",ids$[21]="IVX_LSVEND"
    files$[22]="ivt-04",ids$[22]="IVT_ITEMTRAN"
    files$[23]="mhe-_0",ids$[23]=""
    files$[24]="mhm-_0",ids$[24]=""
    files$[25]="poe-02",ids$[25]="POE_POHDR"
    files$[26]="poe-04",ids$[26]="POE_RECHDR"
    files$[27]="poe-12",ids$[27]="POE_PODET"
    files$[28]="poe-14",ids$[28]="POE_RECDET"
    files$[29]="poe-24",ids$[29]="POE_RECLSDET"
    files$[30]="poe-32",ids$[30]="POE_POBYPO"
    files$[31]="poe-34",ids$[31]="POE_RECBYPO"
    files$[32]="poe-42",ids$[32]="POE_POBYITEM"
    files$[33]="poe-44",ids$[33]="POE_RECBYITM"
    files$[34]="poe-52",ids$[34]="POE_POBYREQ"
    files$[35]="poe-54",ids$[35]="POE_POBYREC"
    files$[36]="pom-02",ids$[36]="POC_LINECODE"
    files$[37]="pot-04",ids$[37]="POT_RECHDR"
    files$[38]="pot-14",ids$[38]="POT_RECDET"
    files$[39]="pot-24",ids$[39]="POT_RECBYITM"
    files$[40]="pot-34",ids$[40]="POT_RECBYDAT"
    files$[41]="pot-44",ids$[41]="POT_RECBYVEN"
    files$[42]="sfe-01",ids$[42]="SFE_WOMASTR"
    files$[43]="sfe-13",ids$[43]="SFE_WOMATHDR"
    files$[44]="sfe-14",ids$[44]="SFE_WOLSISSU"
    files$[45]="sfe-15",ids$[45]="SFE_WOMATISH"
    files$[46]="sfe-22",ids$[46]="SFE_WOMATL"
    files$[47]="sfe-23",ids$[47]="SFE_WOMATDTL"
    files$[48]="sfe-25",ids$[48]="SFE_WOMATISD"
    files$[49]="sfe-32",ids$[49]="SFE_WOSUBCNT"
    files$[50]="sfm-07",ids$[50]="SFX_WOTRANXR"
    files$[51]="sfm-10",ids$[51]="SFC_WOTYPECD"
    files$[52]="sft-21",ids$[52]="SFT_OPNMATTR"
    files$[53]="sft-31",ids$[53]="SFT_OPNSUBTR"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    apm01_dev=channels[1]
    apm06_dev=channels[2]
    apm10_dev=channels[3]
    aps01a_dev=channels[4]
    arm10_dev=channels[5]
    glm01_dev=channels[6]
    glt04_dev=channels[7]
    glt14_dev=channels[8]
    ivm01_dev=channels[9]
    ivm02_dev=channels[10]
    ivm03_dev=channels[11]
    ivm04_dev=channels[12]
    ivm05_dev=channels[13]
    ivm07_dev=channels[14]
    ivm08_dev=channels[15]
    ivm12_dev=channels[16]
    ivm17_dev=channels[17]
    ivs01a_dev=channels[18]
    ivt01_dev=channels[19]
    ivt02_dev=channels[20]
    ivt03_dev=channels[21]
    ivt04_dev=channels[22]
    mhe_0_dev=channels[23]
    mhm_0_dev=channels[24]
    poe02_dev=channels[25]
    poe04_dev=channels[26]
    poe12_dev=channels[27]
    poe14_dev=channels[28]
    poe24_dev=channels[29]
    poe32_dev=channels[30]
    poe34_dev=channels[31]
    poe42_dev=channels[32]
    poe44_dev=channels[33]
    poe52_dev=channels[34]
    poe54_dev=channels[35]
    pom02_dev=channels[36]
    pot04_dev=channels[37]
    pot14_dev=channels[38]
    pot24_dev=channels[39]
    pot34_dev=channels[40]
    pot44_dev=channels[41]
    sfe01_dev=channels[42]
    sfe13_dev=channels[43]
    sfe14_dev=channels[44]
    sfe15_dev=channels[45]
    sfe22_dev=channels[46]
    sfe23_dev=channels[47]
    sfe25_dev=channels[48]
    sfe32_dev=channels[49]
    sfm07_dev=channels[50]
    sfm10_dev=channels[51]
    sft21_dev=channels[52]
    sft31_dev=channels[53]

rem --- Dimension string templates

    dim apm01a$:templates$[1],apm06a$:templates$[2],apm10a$:templates$[3],
:       aps01a$:templates$[4],arm10a$:templates$[5],glm01a$:templates$[6],
:       glt04a$:templates$[7],glt14a$:templates$[8],ivm01a$:templates$[9],
:       ivm02a$:templates$[10],ivm03a$:templates$[11],ivm04a$:templates$[12],
:       ivm05a$:templates$[13],ivm07a$:templates$[14],ivm08a$:templates$[15],
:       ivm12a$:templates$[16],ivm17a$:templates$[17],ivs01a$:templates$[18],
:       ivt01a$:templates$[19],ivt02a$:templates$[20],ivt03a$:templates$[21],
:       ivt04a$:templates$[22],mhe_0a$:templates$[23],mhm_0a$:templates$[24],
:       poe02a$:templates$[25],poe04a$:templates$[26],poe12a$:templates$[27],
:       poe14a$:templates$[28],poe24a$:templates$[29],poe32a$:templates$[30],
:       poe34a$:templates$[31],poe42a$:templates$[32],poe44a$:templates$[33],
:       poe52a$:templates$[34],poe54a$:templates$[35],pom02a$:templates$[36],
:       pot04a$:templates$[37],pot14a$:templates$[38],pot24a$:templates$[39],
:       pot34a$:templates$[40],pot44a$:templates$[41],sfe01a$:templates$[42],
:       sfe13a$:templates$[43],sfe14a$:templates$[44],sfe15a$:templates$[45],
:       sfe22a$:templates$[46],sfe23a$:templates$[47],sfe25a$:templates$[48],
:       sfe32a$:templates$[49],sfm07a$:templates$[50],sfm10a$:templates$[51],
:       sft21a$:templates$[52],sft31a$:templates$[53]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Open/Lock Files

    close (printer_dev,err=*next)
    files=36
    dim files$[files],options$[files],channels[files]
    files$[1]="poe-02"
    files$[2]="poe-12"
    files$[3]="poe-32"
    files$[4]="poe-34"
    files$[5]="poe-42"
    files$[6]="poe-44"
    files$[7]="poe-52"
    files$[8]="poe-54"
    files$[9]="pot-04"
    files$[10]="pot-14"
    files$[11]="pot-24"
    files$[12]="pot-34"
    files$[13]="pot-44"
    files$[14]="apm-06"
    files$[15]="apm-10"
    files$[16]="ivm-03"
    files$[17]="ivm-05"
    files$[18]="ivm-12"
    files$[19]="ivt-04"
    call pgmdir$+"adc_fileopen.aon",1,1,19,files$[all],options$[all],channels[all],batch,status
    if status goto std_exit
    poe02_dev=channels[1]
    poe12_dev=channels[2]
    poe32_dev=channels[3]
    poe34_dev=channels[4]
    poe42_dev=channels[5]
    poe44_dev=channels[6]
    poe52_dev=channels[7]
    poe54_dev=channels[8]
    pot04_dev=channels[9]
    pot14_dev=channels[10]
    pot24_dev=channels[11]
    pot34_dev=channels[12]
    pot44_dev=channels[13]
    apm06_dev=channels[14]
    apm10_dev=channels[15]
    ivm03_dev=channels[16]
    ivm05_dev=channels[17]
    ivm12_dev=channels[18]
    ivt04_dev=channels[19]

rem --- escape gosub 10000; rem "OPEN ADDITIONAL FILES
rem --- Initializations

    precision i[1]

rem --- escape gosub 10200; rem additional initializations

    dim a0$(22),a1$(160),a[8],b0$(8),b1$(195),y0$(4),y1$(32),message$[2]
    dim flippeda0$(22),flippedw0$(25)
    dim s0$(15),s1$(160),s[8],r0$(18),r1$(48),r2$(32),r3$(22),r4$(40),r[12]
    dim w0$(25),w1$(48),w2$(32),w3$(22),w4$(40),w[12],z0$(32),z1$(11*g[4])
    dim files[44],params[10],params$[10],item$[3],refs$[20],refs[20]
    dim glfiles[20],glparams$[20],glparams[20],w$[10]
    item$[0]=firm_id$
    params[0]=g[0]
    params$[0]=sysinfo.system_date$
    params$[1]=sysinfo.user_id$
    params$[2]=i2$
    params$[3]=i3$
    params$[4]=i4$
    action$="RC"
    if replenishment$="Y" call pgmdir$+"adc_perioddates.aon",sys01_dev,i[7],g[0],x1$,yearend$,status
    qty=0
    cost=0
    po_extension=0

rem --- Additional File Opens
rem --- escape let files$[37]="POT-54

    if ls$="N" goto l620
    files$[20]="ivm-07"
    files$[21]="ivm-08"
    files$[22]="ivm-17"
    files$[23]="ivt-01"
    files$[24]="ivt-03"
l620:
    if gl$="N" goto l630
    files$[25]="glt-04"
    files$[26]="glt-14"
l630:
    if sf$="N" goto l675

rem --- IF ISSUES=0 THEN IF SUBCONTRACTS=0 THEN GOTO 0675

    files$[27]="sfm-07"

rem --- if subcontracts=0 goto 0655

    files$[28]="sfe-32"
    files$[29]="sft-31"

rem --- IF ISSUES=0 THEN GOTO 0675

    files$[30]="sfe-13"
    files$[31]="sfe-15"
    files$[32]="sfe-22"
    files$[33]="sfe-23"
    files$[34]="sfe-25"
    files$[35]="sft-21"
    if ls$="Y" files$[36]="sfe-14"
l675:
    call pgmdir$+"adc_fileopen.aon",1,20,files,files$[all],options$[all],channels[all],batch,status
    if status goto std_exit
    ivm07_dev=channels[20]
    ivm08_dev=channels[21]
    ivm17_dev=channels[22]
    ivt01_dev=channels[23]
    ivt03_dev=channels[24]
    glt04_dev=channels[25]
    glt14_dev=channels[26]
    sfm07_dev=channels[27]
    sfe32_dev=channels[28]
    sft31_dev=channels[29]
    sfe13_dev=channels[30]
    sfe15_dev=channels[31]
    sfe22_dev=channels[32]
    sfe23_dev=channels[33]
    sfe25_dev=channels[34]
    sft21_dev=channels[35]
    sfe14_dev=channels[36]

rem --- escape let pot54_dev=channels[37]
rem --- Background

    call pgmdir$+"syc_cn.bbx","",0,7,'ce',status

rem --- Lot/serial number differences?

    if lotser=0 goto l850
    message$[0]="There Were "+str(lotser)+" Purchase Order Lines With Lot/Serial"
    message$[1]="Number Differences. These Differences Must Be Corrected"
    message$[2]="Before The Update Can Be Run (<Enter>=Continue)"
    call pgmdir$+"adc_stdmessage.aon",2,message$[all],2,-1,-1,v$,v3
    if v$<>"SPECIAL" goto std_exit

l850: rem --- Any unreleased work orders?

    if wo=0 goto l900
    message$[0]="There Were "+str(wo)+" Purchase Order Lines With Special Orders For"
    message$[1]="Unreleased Work Orders. These Work Orders Must Be Released"
    message$[2]="Before The Update Can Be Run (<Enter>=Continue)"
    call pgmdir$+"adc_stdmessage.aon",2,message$[all],2,-1,-1,v$,v3
    if v$<>"SPECIAL" goto std_exit

l900: rem --- Run update?

    v4$="Are You Ready To Update The "+sysinfo.task_desc$
    call pgmdir$+"adc_yesno.aon",0,v4$,0,v$,v3
    if v$<>"YES" goto std_exit
    files[0]=sys01_dev
    files[1]=ivm01_dev
    files[2]=ivm02_dev
    files[3]=ivm03_dev
    files[4]=ivm04_dev
    files[5]=ivm05_dev
    files[7]=ivm07_dev
    files[8]=ivm08_dev
    files[12]=ivm12_dev
    files[17]=ivm17_dev
    files[41]=ivt01_dev
    files[42]=ivt02_dev
    files[43]=ivt03_dev
    files[44]=ivt04_dev

rem --- Position file

    call pgmdir$+"adc_progress.aon","N","","","Updating","",m0+16,0,1,meter_num,status
    exit_ctl=1
    read (poe04_dev,key=firm_id$,dom=*next)

l1000: rem --- Read next receipt header

    k$=key(poe04_dev,end=done)
    if pos(firm_id$=k$)<>1 goto done
    read record (poe04_dev) poe04a$
    call pgmdir$+"adc_progress.aon","S","","","",fnmask$(a0$(3,vendlen),m0$)+" "+a0$(9,7)+" "+a0$(16,7),0,0,1,meter_num,status
    if a0$(1,8)=b0$(1,8) goto l1100
    b0$(1)=a0$
    b1$(1)=nf$
    find record (apm01_dev,key=b0$,dom=*next) apm01a$

l1100: rem --- Initializations for current receipt

    x1$=a1$(5,6)
    x2$=a1$(29,6)
    received$=fndate$(fndate$(x2$))
    when$=x2$
    leadtime=0
    call pgmdir$+"adc_daydates.aon",x1$,x2$,leadtime
    leadtime=max(0,leadtime)
    deleted=1
    read (poe14_dev,key=a0$,dom=*next)

l1200: rem --- Read next receipt detail

    k$=key(poe14_dev,end=l3500)
    if pos(a0$=k$)<>1 goto l3500
    read record (poe14_dev) poe14a$

rem --- escape if w1$(24,6)<>fill(6) and w[7]<>0 and w1$(30,4)=fill(4) job$="Y
rem --- escape let job085$=""; if w1$(24,6)<>fill(6) and w1$(30,4)=fill(4) job085$="Y
rem --- escape if job$="Y" read (cvf150,key=firm_id$+w1$(24,6),dom=1238); goto 1240
rem --- escape let job$="

    onorder=w[3]-(w[4]+w[7])
    if w[0]=0 w[0]=1

rem --- Determine line type

    if firm_id$+w1$(1,2)=y0$(1,4) goto l1350
    y0$(1,4)=firm_id$+w1$(1,2)
    find record (pom02_dev,key=y0$,dom=l3000) pom02a$

l1350: rem --- Branch based on line type

    if pos(y1$(21,1)="MOV") goto l2900
    if y1$(21,1)="N" goto l1700

rem --- Retrieve inventory item

    dim c0$(22),c1$(60),c2$(64),c6$(6*g[4]),c[12],d0$(24),d1$(64),d[20]
    c0$(1)=firm_id$+w3$(3)
    d0$(1)=firm_id$+w3$
    code$=""
    find record (ivm01_dev,key=c0$,dom=l3000) ivm01a$
    find record (ivm02_dev,key=d0$,dom=l3000) ivm02a$
    buyer$=c2$(9,3)
    stocking$=c2$(12,6)
    code$=d1$(13,2)
    if c2$(24,1)="W" buyer$=d1$(19,3),stocking$=d1$(22,6)

l1700: rem --- Calculate extension and branch based on line type

    precision 2
    po_extension=w[1]*w[7]
    iv_extension=0
    if y1$(21,1)="S" iv_extension=d[11]*w[7]*w[0]
    precision i[1]
    on pos(y1$(21,1)="SN") goto l3000,l1800,l2300

l1800: rem --- Update Inventory

    lineqty=w[7]*w[0]
    linecost=w[1]/w[0]
    qty=lineqty
    cost=linecost
    if ls$="Y" if c2$(19,2)="YY" goto l1850
    if qty<>0 gosub l6100
    goto l2200

l1850: rem --- Position lot/serial file

    dim u0$(28),u1$(20),u[1]
    read (poe24_dev,key=w0$,dom=*next)

l1900: rem --- Update Lotted/Serialized Inventory

    k$=key(poe24_dev,end=l2000)
    if pos(w0$=k$)<>1 goto l2000
    read record (poe24_dev) poe24a$
    item$[3]=u1$
    qty=u[0]
    cost=u[1]
    if qty<>0 gosub l6100
    goto l1900

l2000: rem --- Done with lot/serial number entries

    item$[3]=""
    qty=0
    cost=linecost
    gosub l6100
    qty=lineqty
    cost=linecost

l2200: rem --- Update Replenishment

    if y1$(22,1)="Y" goto l2800
    if replenishment$<>"Y" goto l2300
    if a0$(3,6)<>stocking$ goto l2300
    dim u0$(11),u1$(32),u[11]
    u0$(1)=a0$
    u0$(9,3)=buyer$
    x=4
    find record (apm06_dev,key=u0$,dom=*next) apm06a$
    if received$>yearend$ x=7
    u[x]=u[x]+po_extension
    u[x+1]=u[x+1]+(qty*c[1])
    u[x+2]=u[x+2]+qty
    if received$>cvs(u1$(10,3),2) u1$(10,3)=received$
    write record (apm06_dev,key=u0$) apm06a$

l2300: rem --- Update Work Orders

    if sf$<>"Y" goto l2800
    if cvs(w2$(1,7),2)="" goto l2800
    if a1$(134,1)<>"Y" and w[7]=0 goto l2800
    if y1$(21,1)="S" if d1$(60,1)<>"Y" goto l2800
    dim t0$(75),t1$(141),t[11]
    t0$(1)=firm_id$+"  "+w2$(1,7)
    find record (sfe01_dev,key=t0$(1,11),dom=l2800) sfe01a$
    if cvs(t0$(28,3),2)="" t0$(28,3)=received$
    if received$>t0$(28,3) t0$(28,3)=received$
    write record (sfe01_dev,key=t0$(1,11)) sfe01a$

rem --- Update link to WO subcontract line/Generate transaction detail

    oldwo$=w2$(1,10)
    newwo$=oldwo$
    call pgmdir$+"poc_wa.bbx",sfe22_dev,sfe32_dev,firm_id$,w0$(16),"C",y1$,oldwo$,newwo$,i[1],status
    if y1$(21,1)="S" goto l2500
    dim l0$(18),l1$(39),l[11]
    l0$(1)=t0$(1,11)+received$+"S"
    channel=sft31_dev
    gosub l6000
    if status goto l2800
    l1$(1)=w2$(8,3)+w0$(3,6)+w0$(16)+w4$
    l[0]=w[7]*w[0]
    l[1]=w[1]/w[0]
    l[2]=po_extension
    write record (sft31_dev,key=l0$) sft31a$
    write record (sfm07_dev,key=l0$) sfm07a$
    goto l2800
l2500:

l2800: rem --- Generate GL Recap Postings

    if gl$="N" goto l2900
    glfiles[1]=arm10_dev
    glfiles[2]=sfe01_dev
    glfiles[3]=sfm10_dev
    glfiles[4]=glm01_dev
    glfiles[5]=glt04_dev
    glfiles[6]=glt14_dev
    w$[0]=w0$
    w$[1]=w1$
    w$[2]=w2$
    w$[3]=w3$
    w$[4]=w4$
    glparams$[0]=gl$
    glparams$[1]=a1$(29,6)
    glparams$[2]=b0$(3,vendlen)
    glparams$[3]=m0$
    glparams$[4]=g4$
    glparams$[5]=fnitem$(c1$,i[3],i[4],i[5])
    glparams$[6]=y1$
    glparams$[7]=c6$
    glparams$[8]=distcode$
    glparams$[9]=code$
    glparams$[10]=firm_id$
    glparams$[11]=sf$
    glparams[0]=po_extension
    glparams[1]=g[4]
    glparams[2]=i[0]
    glparams$[12]=i3$(8,1)
    glparams[3]=iv_extension
    call pgmdir$+"poc_ga.bbx",glfiles[all],w$[all],w[all],glparams$[all],glparams[all],status
    if status goto std_exit

l2900: rem --- Update Receipt History & X-refs

    if y1$(21,1)="M" and p3$(72,1)<>"Y" goto l3000; rem "Don't retain message lines in history
    if y1$(21,1)="V" and p3$(73,1)<>"Y" goto l3000; rem "Don't retain vendor part lines in history
    flippedw0$=w0$(1,8)+w0$(16,7)+w0$(9,7)+w0$(23,3)
    write record (pot14_dev,key=flippedw0$) pot14a$
    xt4$=flippedw0$(1,8)+a1$(29,6)+flippedw0$(9,17)
    write record (pot44_dev,key=xt4$) pot44a$

rem --- Only write S-type lines to pot-24 and pot-34

    if y1$(21,1)<>"S" goto l3000
    xt2$=flippedw0$(1,2)+w3$(3,20)+w3$(1,2)+flippedw0$(3,6)+a1$(29,6)+flippedw0$(9,17)
    write record (pot24_dev,key=xt2$) pot24a$
    xt3$=flippedw0$(1,2)+w3$(3,20)+w3$(1,2)+a1$(29,6)+flippedw0$(3,23)
    write record (pot34_dev,key=xt3$) pot34a$

l3000: rem --- Remove receipt detail

rem --- escape if job$="Y" gosub 10300; rem "ACS JOB UPDATES
rem --- escape if job085$="Y" gosub 12000; rem "ACS PO085 UPDATE
remove (poe14_dev,key=w0$,dom=l3020)

    x4$=firm_id$+w3$(3)+w0$(16)+w0$(3,13)
    remove (poe44_dev,key=x4$,dom=*next)

rem --- Remove Receipt Lot/Serial Detail

    read (poe24_dev,key=w0$,dom=*next)
l3120:
    k$=key(poe24_dev,end=l3200)
    if pos(w0$=k$)<>1 goto l3200
    remove (poe24_dev,key=k$)

    goto l3120

l3200: rem --- Update PO detail

    r0$(1)=w0$(1,8)+w0$(16)
    if pos(y1$(21,1)="SNO") if onorder<=0 goto l3300
    if a1$(134,1)="Y" goto l3300
    if pos(y1$(21,1)="MV") if deleted goto l3300
    find record (poe12_dev,key=r0$,dom=l3400) poe12a$
    r[7]=r[7]+w[7]
    deleted=0
    write record (poe12_dev,key=r0$) poe12a$
    goto l3400

l3300: rem --- Remove PO detail

    if y1$(21,1)<>"S" goto l3350
    find record (poe12_dev,key=r0$,dom=l3360) poe12a$
    qty=-(r[3]*r[0]-(w[4]+w[7])*w[0])
    action$="OO"
    if qty<>0 gosub l6200
l3350: remove (poe12_dev,key=r0$,dom=*next)

l3360:
    x4$=firm_id$+w3$(3)+w0$(16)+w0$(3,6)
    deleted=1
    remove (poe42_dev,key=x4$,dom=*next)

l3400: rem --- Loop back for next detail

    goto l1200

l3500: rem --- Done with detail lines - Remove receipt header

    flippeda0$=a0$(1,8)+a0$(16,7)+a0$(9,7)
    write record (pot04_dev,key=flippeda0$) pot04a$
remove (poe04_dev,key=a0$,dom=l3530)

    x3$=firm_id$+a0$(16,7)+a0$(3,6)+a0$(9,7)
    x5$=firm_id$+a0$(9,7)+a0$(3,6)+a0$(16,7)
    remove (poe34_dev,key=x3$,dom=*next)
remove (poe54_dev,key=x5$,dom=*next)

rem --- escape let pot54$=firm_id$+a0$(16,7)+a0$(3,6)+a1$(29,6)+a0$(9,7)

rem --- escape write (pot54_dev,key=pot54$)pot54$
rem --- Done with details - Update PO Header

    s0$(1)=a0$(1,8)+a0$(16)
    gosub l6300
    if lines a1$(134,1)="N"
    if a1$(134,1)="Y" or lines=0 goto l3700
    find record (poe02_dev,key=s0$,dom=l3900) poe02a$
    s1$(29,6)=a1$(29,6)
    write record (poe02_dev,key=s0$) poe02a$
    goto l3900

l3700: rem --- Received complete - Delete PO

remove (poe02_dev,key=s0$,dom=l3720)

    x3$=firm_id$+a0$(16,7)+a0$(3,6)
    x5$=firm_id$+a1$(112,7)+a0$(3,6)+a0$(16,7)
    remove (poe32_dev,key=x3$,dom=*next)
remove (poe52_dev,key=x5$,dom=*next)

l3900: rem --- Loop back for next header

    goto l1000

done: rem --- All done

rem --- escape gosub 11000; rem "ACS60 CLEAR PO080

    goto std_exit

l6000: rem --- Find next available sequence number for SFT files

    let x=len(l0$)-2,l0$(x)="001",status=0
    read (channel,key=l0$(1,x-1)+$ff$,dom=*next)
    let k$=keyp(channel,end=l6090)
    if pos(l0$(1,x-1)=k$)<>1 goto l6090
    if k$(16,3)="999" goto l6080
    let l0$(x)=str(num(k$(16,3))+1:"000")
    goto l6090
l6080:
    let status=2
l6090:
    return

l6100: rem --- Update inventory with receipt quantity

    let action$="RC"
    gosub l6200

rem --- escape if job$<>"Y" goto 6190
rem --- escape let action$="CO
rem --- escape gosub 6200
rem --- escape let qty=qty*-1
rem --- escape let action$="WI
rem --- escape gosub 6200

    return

l6200: rem --- Call standard inventory update program

    let item$[0]=firm_id$,item$[1]=w3$(1,2),item$[2]=w3$(3)
    let ref3$=w0$(23,3),refs$[0]=a1$(29,6),refs$[1]=w0$(3,6),refs$[2]=w0$(16,7)
    let refs$[3]=w0$(9,7),refs$[4]="",refs$[5]=ref3$,refs$[6]=w1$(1,2)
    let refs$[8]=ivacct$,refs$[9]="",refs$[10]="",refs$[11]=""
    let refs$[12]=y1$(22,1),refs[0]=qty,refs[1]=cost,refs[2]=d[9]
    let refs[3]=leadtime,refs[4]=cost,refs[5]=0

rem --- escape if job$="Y" refs$[9]="J"+w1$(24,6)

    call pgmdir$+"ivc_ua.bbx",action$,files[all],params[all],params$[all],item$[all],refs$[all],refs[all],status
    return

rem --- Verify PO Has No Detail In poe-12
l6300:
    let lines=0
    read (poe12_dev,key=s0$,dom=*next)
    let poe12k$=key(poe12_dev,end=l6390)
    if pos(s0$=poe12k$)<>1 goto l6390
    let lines=1
l6390:
    return
rem --- Standard G/L Posting Routine
glpost:
    if gl$<>"Y" goto l6990
    call pgmdir$+"glc_glpost.aon",glm01_dev,glt04_dev,glt14_dev,account$,when$,ref1$,ref2$,ref3$,memo$,amount,units,status
l6990:
    return
rem --- GL
rem --- escape let account$=v0$,when$=x2$,amount=v0,units=v1
rem --- escape let ref1$=w0$(3,6),ref2$=w0$(16,7)
rem --- escape let ref3$="JOB "+w1$(24,6),memo$=vname$
rem --- escape gosub glpost
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Format zip/postal code

    def fnzipcode$(q$)
        q$=cvs(q$,4)
        if len(cvs(q$,2))<>9 and len(cvs(q$,2))<>6 return q$
        if len(cvs(q$,2))=9
            q1$="[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]"
            q1=mask(cvs(q$,2),q1$)
            if q1=0 return q$
            if q1<>0
                if q$(6,4)="0000" return q$(1,5)
            return q$(1,5)+"-"+q$(6,4)
            endif
        endif
        if len(cvs(q$,2))=6
            q1$="[a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9]"
            q1=mask(cvs(q$,2),q1$)
            if q1=0 return q$ else return q$(1,3)+" "+q$(4,3)
        endif
    fnend

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5)),
:                                   str(err),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
