rem --- Purchase Orders By Item Report (Print Overlay)
rem --- Program por_pobyitem_o1 v8.0.0 17Jul2007 (por_jb)
rem --- Created by adx_codeport.bbx v1.1.5 (07/17/2007 12:48:38)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Init Data

    precision ivprecision
    grandtot=0
    printwtot$="N"
    dim itemdesc$(60),whsename$(24),itemnum$(20)
    more=1

    call stbl("+DIR_SYP")+"bac_key_template.bbj","POE_PODET","PRIMARY",poe12a_key_tpl$,rd_table_chans$[all],status$
    call stbl("+DIR_SYP")+"bac_key_template.bbj","POE_PODET","WHSE_ITEM",poe12a_key_alttpl$,rd_table_chans$[all],status$
    call stbl("+DIR_SYP")+"bac_key_template.bbj","APM_VENDMAST","PRIMARY",apm01a_key_tpl$,rd_table_chans$[all],status$

rem --- Headings and print positions

    headings=2
    dim headings$[headings],o[14]
    width=132
    page=0
    l9=59
    l=l9+1
    headings$[0]=sysinfo.firm_name$
    headings$[1]=sysinfo.task_desc$

positions:

    o[1]=o[0]+5
    o[2]=o[1]+8
    o[3]=o[2]+4
    o[4]=o[3]+7
    o[5]=o[4]+3
    o[6]=o[5]+9
    o[7]=o[6]+9
    o[8]=o[7]+9
    o[9]=o[8]+m5+1
    o[10]=o[9]+m2+1
    o[11]=o[10]+m2+1
    o[12]=o[11]+m2+1
    o[13]=o[12]+m3+1
    o[14]=o[13]+m1+1
    if o[14]+11>=width
        o[14]=width-m2
        o[13]=o[14]-m1-1
        o[12]=o[13]-m3
        o[11]=o[12]-m2
        o[10]=o[11]-m2
        o[9]=o[10]-m2
        o[8]=o[9]-m5
    endif

rem --- Position files

    call pgmdir$+"adc_printer.aon",printer_dev,1,"","",status
    if status goto std_exit

    call pgmdir$+"adc_progress.aon","N","","","","",0,poe12a_dev,1,meter_num,status

rem --- Init Sort File
   
    dim poe12a_altkey$:poe12a_key_alttpl$
    if whsefrom$="" firstwhse$=fill(2) else firstwhse$=whsefrom$

    read (poe12_dev2,knum=3,key=firm_id$+firstwhse$+"S"+itemfrom$,dom=*next)
    if itemfrom$<>"" read(poe12_dev2,knum=3,key=firm_id$+firstwhse$+"S"+itemfrom$+pofrom$,dom=*next)
  
    while more

        poe12a_altkey$=key(poe12_dev2,end=*break)
        if poe12a_altkey.firm_id$<>firm_id$ break
       
        if poe12a_altkey.line_type$<"S" read(poe12_dev2,knum=3,key=firm_id$+poe12a_altkey.warehouse_id$+"S",dom=*continue)
        if poe12a_altkey.line_type$>"S" read(poe12_dev2,knum=3,key=firm_id$+poe12a_altkey.warehouse_id$+$ff$,dom=*continue)
        if itemfrom$<>"" if poe12a_altkey.item_id$<itemfrom$ read(poe12_dev2,key=firm_id$+poe12a_altkey.warehouse_id$+"S"+itemfrom$,dom=*continue)
        if itemthru$<>"" if poe12a_altkey.item_id$>itemthru$ read(poe12_dev2,key=firm_id$+poe12a_altkey.warehouse_id$+$ff$,dom=*continue)        
        
        sortkey$=firm_id$+poe12a_altkey.vendor_id$+poe12a_altkey.po_no$+poe12a_altkey.po_line_no$
        read (poe12_dev2,end=done)

rem --- Find corresponding detail line

        find record (poe12a_dev,key=sortkey$,dom=*next) poe12a$
        if poe12a.firm_id$+poe12a.vendor_id$+poe12a.po_no$+poe12a.po_line_no$<>sortkey$ then continue

rem --- Test PO Detail ranges

        if poe12a.warehouse_id$+poe12a.item_id$=poe12a_altkey.warehouse_id$+poe12a_altkey.item_id$ then
          if whsefrom$="" or poe12a.warehouse_id$>=whsefrom$ then
            if whsethru$="" or poe12a.warehouse_id$<=whsethru$ then
             if itemfrom$="" or poe12a.item_id$>=itemfrom$ then
              if itemthru$="" or poe12a.item_id$<=itemthru$ then
               if pofrom$="" or poe12a.po_no$>=pofrom$ then
                if pothru$="" or poe12a.po_no$<=pothru$ then
                 if vendfrom$="" or poe12a.vendor_id$>=vendfrom$ then
                  if vendthru$="" or poe12a.vendor_id$<=vendthru$ then
                  gosub gettestdate_detail
        if datefrom$="" or testdated$>=datefrom$ then
        if datethru$="" or testdated$<=datethru$

rem --- Get Line Type

        linetype$="N"
        p02_key$=poe12a.firm_id$+poe12a.po_line_code$
        find record (pom02a_dev,key=p02_key$,dom=*next) pom02a$
        linetype$=pom02a.line_type$
        if linetype$<>"S" continue

rem --- Test breaks; print line

        call pgmdir$+"adc_progress.aon","S","","","","",0,poe12a_dev,1,meter_num,status
        gosub testbreaks
        gosub printdetail

nextsort: rem --- Accumulate totals; then get next sort file record

        qtyordtot=qtyordtot+qtyord
        qtyrectot=qtyrectot+qtyrec
        baltot=baltot+balance
        itemtot=itemtot+extension
        whsetot=whsetot+extension
        grandtot=grandtot+extension
        extension=0
        extension$=""
        balance=0
        balance$=""
        qtyord=0
        qtyord$=""
        qtyrec=0
        qtyrec$=""
    
    wend

done: rem --- All Done

    if l+2>l9 gosub report_heading
    gosub itemtotals
    gosub whsetotals
    print (printer_dev) @(o[1]),"Total For Report",
:                       @(o[13]),grandtot:m1$
    goto std_exit

rem --- Print Detail Subroutine

printdetail: rem --- Set up variables

    dim datereq$(8),dateprom$(8),notb4date$(8)
    itemnum$=poe12a.item_id$
    unitmeas$=poe12a.unit_measure$
    if poe12a.reqd_date$<>fill(8) datereq$=fndate$(poe12a.reqd_date$)
    if poe12a.promise_date$<>fill(8) dateprom$=fndate$(poe12a.promise_date$)
    if poe12a.not_b4_date$<>fill(8) notb4date$=fndate$(poe12a.not_b4_date$)
    convfact=poe12a.conv_factor
    if convfact=0 convfact=1
    convfact$=str(convfact:m5$)
    unitcost$=str((poe12a.unit_cost/convfact):m3$)
    qtyord=poe12a.qty_ordered*convfact
    qtyrec=poe12a.qty_received*convfact
    qtyord$=str(qtyord:m2$)
    qtyrec$=str(qtyrec:m2$)
    ponum$=poe12a.po_no$
    vendor$=fnmask$(poe12a.vendor_id$,vendomask$)

rem --- Get extension

    gosub calc_extension

rem --- Print detail line

    if l+1>l9 gosub report_heading
    print (printer_dev) @(o[1]),ponum$,
:                       @(o[2]),poe12a.po_line_no$,
:                       @(o[3]),vendor$,
:                       @(o[4]),unitmeas$,
:                       @(o[5]),datereq$,
:                       @(o[6]),dateprom$,
:                       @(o[7]),notb4date$,
:                       @(o[8]),convfact$,
:                       @(o[9]),qtyord$,
:                       @(o[10]),qtyrec$,
:                       @(o[11]),balance$,
:                       @(o[12]),unitcost$,
:                       @(o[13]),extension$

    l=l+1
    return

report_heading: rem --- Report Heading

    l=headings+1
    gosub assignheads
   
    call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,page,width,when$,clock$,status
    if status exitto std_exit
    print (printer_dev) @(0),"From Vendor: ",vendf$," ",vendfname$(1,20),
:                       @(42),"From Item: ",itemf$,
:                       @(75),"From Purchase Order: ",pof$,
:                       @(117-len(datetype$)),"From ",datetype$,": ",datef$

    print (printer_dev) @(2),"To Vendor: ",vendt$," ",vendtname$(1,20),
:                       @(44),"To Item: ",itemt$,
:                       @(77),"To Purchase Order: ",pot$,
:                       @(119-len(datetype$)),"To ",datetype$,": ",datet$
    print (printer_dev)""
    print (printer_dev) @(o[5]),"Date",
:                       @(o[6]),"Date",
:                       @(o[7]),"Not",
:                       @(o[8]+m5-7),"Conv",
:                       @(o[9]+m2-9),"Quantity",
:                       @(o[10]+m2-9),"Quantity",
:                       @(o[12]+m3-5),"Unit",
:                       @(o[14]+m2-9),"Quantity"

    print (printer_dev) @(o[0]),"Item",
:                       @(o[1]),"PO #",
:                       @(o[2]),"Seq",
:                       @(o[3]),"Vendor",
:                       @(o[4]),"UM",
:                       @(o[5]),"Required",
:                       @(o[6]),"Promised",
:                       @(o[7]),"Before",
:                       @(o[8]+m5-7),"Factor",
:                       @(o[9]+m2-9),"Ordered",
:                       @(o[10]+m2-9),"Received",
:                       @(o[11]+m2-8),"Balance",
:                       @(o[12]+m3-5),"Cost",
:                       @(o[13]+m1-10),"Extension",
:                       @(o[14]+m2-9),"On Order"

    print (printer_dev)""
    l=l+6
    return

assignheads: rem --- Assign headings variables

    if vendfrom$="" vendf$="First" else vendf$=vendfrom$
    if vendthru$="" vendt$="Last" else vendt$=vendthru$
    if itemfrom$="" itemf$="First" else itemf$=itemfrom$
    if itemthru$="" itemt$="Last" else itemt$=itemthru$
    if pofrom$="" pof$="First" else pof$=pofrom$
    if pothru$="" pot$="Last" else pot$=pothru$
    if datefrom$="" datef$="First" else datef$=fndate$(datefrom$)
    if datethru$="" datet$="Last" else datet$=fndate$(datethru$)
    headings$[1]=headings$[1](1,len(sysinfo.task_desc$))+" For Warehouse "+whse$+" "+cvs(whsename$,2)
    return

gettestdate_detail: rem --- Determine date to use when testing range in detail

    action=pos(whichdate$="OPRD")
    
    switch action
        case 2
            testdated$=poe12a.promise_date$
            break
        case 3
            testdated$=poe12a.reqd_date$
            break
        case 4
            testdated$=poe12a.not_b4_date$
            break
        case default
            break
    swend
    return

testbreaks: rem --- Test for Breaks

    if poe12a.warehouse_id$<>whse$
        if printitot$="Y" gosub itemtotals
        if printwtot$="Y" gosub whsetotals
        gosub newwhse
        gosub newitem
    else

        if poe12a.item_id$<>itemnum$
            gosub itemtotals
            gosub newitem
        endif

    endif
    return

newwhse: rem --- New Warehouse

    dim c0$(160)
    whsetot=0
    whsename$="Not On File"
    whse$=poe12a.warehouse_id$
    printwtot$="Y"
    printitot$="N"
    i10_key$=firm_id$+"C"+whse$
    find record (ivm10c_dev,key=i10_key$,dom=brnch1) ivm10c$
    whsename$=ivm10c.short_name$

brnch1:

    gosub report_heading
    return

newitem: rem --- New Item

    itemtot=0
    qtyordtot=0
    qtyrectot=0
    baltot=0
    printitot$="Y"
    dim itemdesc$(60),x1$(60)
    ivm01a.item_desc$="Not On File"
    itemnum$=poe12a.item_id$
    i01_key$=firm_id$+poe12a.item_id$
    find record (ivm01a_dev,key=i01_key$,dom=brnch2) ivm01a$
    ivm01a.item_desc$=fnitem$(ivm01a.item_desc$,desclen[1],desclen[2],desclen[3])
brnch2:
    qtyonorder=0
    i02_key$=firm_id$+poe12a.warehouse_id$+poe12a.item_id$
    find record (ivm02a_dev,key=i02_key$,dom=*next) ivm02a$
    if l+3>l9 gosub report_heading
    print (printer_dev) @(0),itemnum$(1,itemlen)," ",itemdesc$,
:                       @(o[14]),qtyonorder:m2$
    l=l+1
    return

whsetotals: rem --- Print Warehouse total

    if l+2>l9 gosub report_heading
    print (printer_dev) @(o[1]),"Total For Warehouse ",whse$," ",whsename$,@(o[13]),whsetot:m1$
    print (printer_dev) ""
    let l=l+2
    return

itemtotals: rem --- Print Item total

    if l+2>l9 gosub report_heading
    print (printer_dev) @(o[1]),"Total For Item ",itemnum$(1,itemlen)," ",itemdesc$(1,22),
:                       @(o[9]),qtyordtot:m2$,
:                       @(o[10]),qtyrectot:m2$,
:                       @(o[11]),baltot:m2$,
:                       @(o[13]),itemtot:m1$

    print (printer_dev)""
    let l=l+2
    return

calc_extension: rem --- Calc extension and Balance

    let balance=qtyord-qtyrec,balance$=str(balance:m2$)
    precision 2
    let extension=num(unitcost$)*balance,extension$=str(extension:m1$)
    precision ivprecision
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions

    def fndate$(q$) 
        if cvs(q$,2)="" return ""

        testdate$=""

        testdate$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)

        if testdate$<>"" 

            return date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))

        endif

        return testdate$

    fnend    
   
rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape

std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
