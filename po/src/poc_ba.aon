rem --- Update Purchase Requisition File
rem --- Program poc_ba v8.0.0 11Dec2007 (poc_ba)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/11/2007 09:58:38)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error
    enter chans[all],info$[all],info[all],detailkey$,status

rem --- Retrieve the program path

    pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+sysinfo",err=*next)
    milestone=num(stbl("+milestone",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=14,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="apm-01",ids$[1]="APM_VENDMAST"
    files$[2]="apm-02",ids$[2]="APM_VENDHIST"
    files$[3]="aps-01a",ids$[3]=""
    files$[4]="ivs_params",ids$[4]="IVS_PARAMS"
    files$[5]="poe-01",ids$[5]="POE_REQHDR"
    files$[6]="poe-02",ids$[6]="POE_POHDR"
    files$[7]="poe-11",ids$[7]="POE_REQDET"
    files$[8]="poe-21",ids$[8]="POE_REQPRINT"
    files$[9]="poe-31",ids$[9]="POE_REQBYREQ"
    files$[10]="poe-41",ids$[10]="POE_REQBYITM"
    files$[11]="poe-52",ids$[11]="POE_POBYREQ"
    files$[12]="pom-02",ids$[12]="POC_LINECODE"
    files$[13]="pos-01a",ids$[13]="POS_PARAMS"
    files$[14]="pos-10",ids$[14]="POS_NUMBERS"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    apm01_dev=channels[1]
    apm02_dev=channels[2]
    aps01a_dev=channels[3]
    ivs01a_dev=channels[4]
    poe01_dev=channels[5]
    poe02_dev=channels[6]
    poe11_dev=channels[7]
    poe21_dev=channels[8]
    poe31_dev=channels[9]
    poe41_dev=channels[10]
    poe52_dev=channels[11]
    pom02_dev=channels[12]
    pos01a_dev=channels[13]
    pos10_dev=channels[14]

rem --- Dimension string templates

    dim apm01a$:templates$[1],apm02a$:templates$[2],aps01a$:templates$[3],
:       ivs01a$:templates$[4],poe01a$:templates$[5],poe02a$:templates$[6],
:       poe11a$:templates$[7],poe21a$:templates$[8],poe31a$:templates$[9],
:       poe41a$:templates$[10],poe52a$:templates$[11],pom02a$:templates$[12],
:       pos01a$:templates$[13],pos10a$:templates$[14]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$
    pos01a_key$=firm_id$+"PO00"
    find record (pos01a_dev,key=pos01a_key$,err=std_missing_params) pos01a$

rem --- Initializations

    dim a[8],b[12],d[3],b0$(18),x2$(15)
    dim reqnum$(7),detailkey$(18)
    dim purchaddrcode$(2),dateprom$(6),notb4date$(6),ack$(20),whseloc$(10)
    dim firm$(2),linetype$(1),vendor$(6),whse$(2),dateord$(6)
    dim datereq$(6),termscode$(2),unitmeas$(2)
    dim source$(1),forcasttype$(3),wonum$(7)
    dim wonum_seq$(10),custnum$(6),sonum_seq$(10)
    dim shiptonum$(6),itemnum$(20)
    more=1
    flag=1

rem --- Assign input params

    apm02_dev=chans[1]
    poe01_dev=chans[2],poe02_dev=chans[3]
    poe11_dev=chans[4]
    poe52_dev=chans[5],pom02_dev=chans[6]
    pos10_dev=chans[7]
    poe21_dev=chans[8],poe31_dev=chans[9]
    poe41_dev=chans[10]
    sys01_dev=chans[11],apm01_dev=chans[12]
    firm$(1)=info$[0]
    vendor$(1)=info$[1],linetype$(1)=info$[2]
    whse$(1)=info$[3]
    dateord$(1)=info$[4],datereq$(1)=info$[5]
    unitmeas$(1)=info$[6]
    source$(1)=info$[7]
    forcasttype$(1)=info$[8]
    wonum_seq$(1)=info$[9],custnum$(1)=info$[10]
    sonum_seq$(1)=info$[11]
    shiptonum$(1)=info$[12],itemnum$(1)=info$[13]
    memodesc$=info$[14]

rem --- Defaults

    find record (apm01_dev,key=firm$+vendor$,dom=done_failed) apm01a$
    find record (sys01_dev,key=firm$+"PO00",dom=done_failed) pos01a$
    find record (pos10_dev,key=firm$+"N",dom=*next) pos10n$
    if pos10n.increment=0 then let pos10n.increment=10
    vshipvia$=pos01a.ap_ship_via$
    freightterms$=pos01a.po_frt_terms$
    fob$=pos01a.fob$
    hold$=pos01a.hold_flag$
    reqmsg$=pos01a.po_msg_code_1$
    if cvs(apm01a.fob$,2)<>"" then let fob$=apm01a.fob$
    if cvs(apm01a.ap_ship_via$,2)<>"" then let vshipvia$=apm01a.ap_ship_via$
    gosub linecodes

rem --- Establish correct precision

    find record (sys01_dev,key=firm$+"IV00",dom=done_failed) ivs01a$
    places=num(ivs01a.precision$)

rem --- Check poe-01 for existing requisition for this vendor

    precision places
    read (poe01_dev,key=firm$+vendor$,dom=*next)
    k01$=key(poe01_dev,end=label1)

    if k01$(1,8)<>firm$+vendor$ then gosub findspot;flag=0
    
    if flag

    label1:
        gosub getterms
        gosub buildheader

    endif

rem --- Build and write detail record

    poe11a.po_line_code$=linecode$
    poe11a.reqd_date$=datereq$
    poe11a.promise_date$=dateprom$
    poe11a.not_b4_date$=notb4date$ 
    poe11a.lead_tim_flg$=line4lead$ 
    poe11a.unit_measure$=unitmeas$
    poe11a.location$=whseloc$
    poe11a.source_code$=source$
    poe11a.forcaste$=forcasttype$

    poe11a.wo_no$=wonum_seq$(1,7)
    poe11a.sequence_no$=wonum_seq$(8,3)
    poe11a.customer_no$=custnum$
    poe11a.order_no$=sonum_seq$(17,7)
    poe11a.line_no$=sonum_seq$(24,3)
    poe11a.shipto_no$=shiptonum$
    poe11a.warehouse_id$=whse$

    if linetype$="S"
        poe11a.item_no$=itemnum$
    else 
        gosub get_memodesc
    fi

    if linetype$<>"M" 
        poe11a.conv_factor=info[0]
        poe11a.unit_cost=info[1]
        poe11a.req_quantity=info[2]
        if linetype$="N" then poe11a.conv_factor=0; rem "No conversion factor for non stock
    endif

    while more 

        write record (poe11_dev,key=poe11a_key.firm_id$+poe11a_key.vendor_no$+poe11a_key.req_no$+poe11a_key.po_line_code$) poe11a$
        xref$=poe11a_key.firm_id$+poe11a.item_no$+poe11a_key.req_no$+poe11a_key.po_line_no$+poe11a_key.vendor_no$
        if linetype$="S" then write record (poe41_dev,key=xref$) poe41a$
        if !(linetype$<>"M" or len(cvs(memodesc$,2))=0)
           gosub get_memodesc
           gosub findspot
        else 
            break
        fi

    wend 

done: rem --- Done - Successful

rem --- Update print file

    poe21a_key.firm_id$=poe11a_key.firm_id$
    poe21a_key.vendor_no$=poe11a_key.vendor_no$
    poe21a_key.req_no$=poe11a_key.req_no$
    write record (poe21_dev,key=poe21a_key.firm_id$+ poe21a_key.vendor_no$+poe21a_key.req_no$) poe21a$
    goto std_exit

done_failed: rem --- Done - Unsuccessful

    if status=0 then let status=1
    goto std_exit

rem --- At least 1 req exists for vendor, so find spot for new req line
findspot: rem --- (Add to 1st req if possible, next if not, ... etc)


    read (poe11_dev,key=k01$+$ff$,dom=*next)
    k11$=keyp(poe11_dev,end=wontfit)

    while more

        if !looping 
            if k11$(1,15)<>k01$ 
                poe11a_key.firm_id$=k01$(1,2)
                poe11a_key.vendor_no$=k01$(3,6)
                poe11a_key.req_no$=k01$(9,7)
                poe11a_key.po_line_no$=str(pos10n.increment:"000")
                break
            else
                flag=0
            fi
        endif

        if  flag then if k11$(1,15)=k01$ 

           seq=num(k11$(16,3))+pos10n.increment
           if seq<=999 
               poe11a_key.firm_id$=k11$(1,2)
               poe11a_key.vendor_no$=k11$(3,6)
               poe11a_key.req_no$=k11$(9,7)
               poe11a_key.po_line_no$=str(seq:"000")
           endif 
           break

        endif 

    getnexthead: rem --- Get next req from header file

        read (poe01_dev,end=wontfit)
        k01$=key(poe01_dev)
        if k01$(1,8)=firm$+vendor$ then let looping=1;goto findspot 

    wontfit: rem --- couldn't find room in existing reqs

        gosub buildheader
        break

    wend

    looping=0
    return

getterms: rem --- Get Terms code from apm-02

    dim c1$(24),c[13]
    read (apm02_dev,key=firm$+vendor$,dom=*next)
    apm02_key$=key(apm02_dev,end=label4)
    if pos(firm$+vendor$=apm02_key$)=1 
       read record (apm02_dev,key=apm02_key$) apm02a$
    endif 

label4:
    termscode$=apm02a.terms_code$
    return

buildheader: rem --- Build header record and write it to poe-01

rem --- get 'next req #'; increment and write back

    extract record (pos10_dev,key=firm$+"N",dom=*next) pos10n$
    if pos10n.next_req_no=0 then let pos10n.next_req_no=1

    while more

        reqnum=pos10n.next_req_no
        pos10n.next_req_no=pos10n.next_req_no+1
        read (poe52_dev,key=firm$+$ff$,dom=*next)
        k52$=keyp(poe52_dev,end=label5)
        if k52$(3,7)>str(reqnum:"0000000") then let reqnum=num(k52$(3,7)),pos10n.next_req_no=reqnum+1

    label5:

        if pos10n.next_req_no>9999999 then let pos10n.next_req_no=1
        read (poe52_dev,key=firm$+str(reqnum:"0000000"),dom=*next)
        k52$=key(poe52_dev,end=label7)
        if k52$(1,2)=firm$ 

          if k52$(3,7)=str(reqnum:"0000000") 
              find (poe01_dev,key=firm$+k52$(10,6)+k52$(3,7),dom=label6)
              continue
          endif 

        else
            break
        fi

    label6:

        find (poe02_dev,key=firm$+k52$(10),dom=label7)

    wend 

label7:

    write record (pos10_dev,key=pos10n_key.firm_id$+pos10n_key.record_id$) pos10n$

rem --- make header

    reqnum$=str(pos10n.next_req_no:"0000000")
    poe01a_key.FIRM_ID$=firm$
    poe01a_key.VENDOR_NO$=vendor$
    poe01a_key.REQ_NO$=reqnum$
    poe01a.WAREHOSE_ID$=whse$
    poe01a.PURCH_ADDR$=purchaddrcode$
    poe01a.ORD_DATE$=dateord$
    poe01a.PROMISE_DATE$=dateprom$
    poe01a.NOT_B4_DATE$=notb4date$
    poe01a.REQD_DATE$=datereq$
    poe01a.HOLD_FLAG$=hold$
    poe01a.TERMS_CODE$=termscode$
    poe01a.PO_FRT_TERMS$=freightterms$
    poe01a.AP_SHIP_VIA$=vshipvia$
    poe01a.ACKNOWLEDGE$=ack$
    poe01a.FOB$=fob$
    poe01a.PO_MSG_CODE$=reqmsg$
    write record (poe01_dev,key=poe01a_key.FIRM_ID$+poe01a_key.VENDOR_NO$+poe01a_key.REQ_NO$) poe01a$
    poe31a.firm_id$=poe01a_key.FIRM_ID$
    poe31a.req_no$=poe01a_key.REQ_NO$
    poe31a.vendor_no$=poe01a_key.VENDOR_NO$
    write record (poe31_dev,key=xref$) poe31a$
    poe11a_key.FIRM_ID$=poe01a_key.FIRM_ID$
    poe11a_key.VENDOR_NO$=poe01a_key.VENDOR_NO$
    poe11a_key.REQ_NO$=poe01a_key.REQ_NO$
    poe11a_key.PO_LINE_NO$="010"
    return

linecodes: rem --- Assign line code info based on line type defaults

    dim line4lead$(1),linecode$(2),x1$(32)
    switch action

        case 2

        ntype:
            linecode$=pos01a.req_n_linecd; rem "Non-stock item type
            rem goto getline4lead
            break

        case 3

        mtype:
                linecode$=pos01a.req_m_linecd; rem "Message line type
                break

        case 1
        case default
        stype:

            linecode$=pos01a.req_s_linecd$; rem "Standard item type
            break

    swend

    find record (pom02_dev,key=firm$+linecode$,dom=*next) pom02a$
    line4lead$(1)=pom02a.lead_tim_flg$
    return

get_memodesc: rem --- Get Next 40 Characters (Maximum) Of Message

    if len(cvs(memodesc$,2))<=40 
        poe11a.order_memo$=cvs(memodesc$,1)
        memodesc$=""
        return
    endif

rem --- Split Message At Last Word Boundary Before 40 Characters

    memodesc$=cvs(memodesc$,1)+fill(40)
    wb=pos(" "=memodesc$(1,41),-1)
    if wb=0 then let wb=41
    poe11a.order_memo$=memodesc$(1,wb-1)
    memodesc$=cvs(memodesc$(wb),2)

    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
