rem --- Order Status Report By Item
rem --- Program opr_ob v8.0.0 28Feb2008 (opr_ob)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (02/28/2008 04:32:49)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved


        seterr std_error
        setesc std_error

rem --- Retrieve the program path

        pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

        sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
        dim sysinfo$:sysinfo_template$
        sysinfo$=stbl("+SYSINFO",err=*next)
        milestone=num(stbl("+MILESTONE",err=*next),err=*next)
        firm_id$=sysinfo.firm_id$

rem --- Open/Lock Files

        call pgmdir$+"adc_printer.aon",printer_dev,1,"","",status
        if status then goto std_exit

rem --- Initializations
        rem t1$=""
        rem t0$=""
        more=1
        headings=3
        dim t[1],o[13],headings$[headings]
        call stbl("+DIR_PGM")+"adc_getmask.aon","","AR","I","",m0$,0,m0
        call pgmdir$+"adc_getmask.aon","","IV","A",imask$,m1$,0,0    
        call pgmdir$+"adc_getmask.aon","","IV","U",imask$,m2$,0,0
        m0=len(m0$)
        m1=len(m1$)
        x$="Detail "
        l0=0
        l1=0
        if p9$="S" then  x$="Summary "
        h1$=x$+h1$
        clock$=""
        when$=sysinfo.system_date$
        nf$="(Not On File)"
        l9=59
        l=l9+1,h=0,h0=132,total=0,subtotal=0,done=0
        call pgmdir$+"adc_sizemask.aon",m2$,m2,11,11


rem --- Print positions

        o[13]=h0-m2
        o[12]=o[13]-m2
        o[11]=o[12]-m2
        o[10]=o[11]-4
        o[9]=o[10]-m2
        o[8]=o[9]-m1
        o[1]=21
        o[2]=o[1]+4
        o[3]=o[2]+3
        o[4]=o[3]+m0+10
        o[5]=o[4]+9
        o[6]=o[5]+9
        o[7]=o[6]+9


rem --- Headings
        if p8$<>"" then
            find record (ivm10_dev,key=firm_id$+"A"+p8$,dom=*next) ivm10a$
            h4$=h4$+p8$+ivm10a.code_desc$
        else
            h4$="All Products"
        endif
        more=1
        dim j$(h0-o[8],"-"),x$(h0)
        headings$[0]=n1$
        headings$[1]=h1$,x$(1)=h4$
        x$(fncenter(h3$,h0))=h3$
        x$(h0-len(h5$))=h5$,headings$[2]=h5$

rem --- Background

        call pgmdir$+"adc_progress.aon","N","","","","",0,ope11_dev,1,meter_num,status

rem retrieve template for OPE_ORDDET record key

        call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_ORDDET","ALT_KEY_01",ope11a_altkey01_tpl$,table_chans$[all],status$
        dim ope11a_altkey01$:ope11a_altkey01_tpl$



rem --- Position File

        read (ope11_dev,key=firm_id$+p6$,KNum=1,dom=*next)

rem --- Next ope-61 record

while more

        ope11a_altkey01$=key(ope11_dev,KNum=1,end=*break)

        if pos(firm_id$=ope11a_altkey01$)<>1 then
            break
        endif
        if p6$<>""
            if ope11a_altkey01.warehouse_id$<>p6$ then
                break
            endif
        endif

        read (ope11_dev)
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

rem --- Level breaks

        if ope11a_altkey01.warehouse_id$<>t0$ then
            gosub Warehouse_Break
        endif

        if ope11a_altkey01.item_id$<>t1$ then
            gosub Item_Break
        endif

rem --- Check product type

        if p8$<>"" then
            if ivm01a.product_type$<>p8$ then
                continue
            endif
        endif

rem --- Order header

        ope01a.firm_id$=ope11a_altkey01.firm_id$
        ope01a.ar_type$=ope11a_altkey01.ar_type$
        ope01a.customer_id$=ope11a_altkey01.customer_id$
        ope01a.order_no$=ope11a_altkey01.order_no$

        ope11a.firm_id$=ope01a.firm_id$
        ope11a.ar_type$=ope01a.ar_type$
        ope11a.customer_id$=ope01a.customer_id$
        ope11a.order_no$=ope01a.order_no$
        ope11a.line_no$=ope11a_altkey01.line_no$

        find record (ope01_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=*continue) ope01a$
        if ope01a.invoice_type$="V" then continue
        if ope01a.ordinv_flag$="I" then continue

rem --- Order line item

        find record (ope11_dev,key=ope11a_altkey01$,dom=*continue) ope11a$
        gosub test_code
        if ignoreit$="Y" then continue
        amount=ope11a.unit_price*ope11a.qty_ordered

        if p5$<>""
            cntr=0
            while more
                if pos("O"=p5$)>0 and ope01a.backord_flag$<>"B" and ope01a.credit_flag$<>"C" and ope01a.invoice_type$<>"P" then break
                if pos("B"=p5$)>0 and ope01a.backord_flag$="B" then break
                if pos("C"=p5$)>0 and ope01a.credit_flag$="C" then break
                if pos("Q"=p5$)>0 and ope01a.invoice_type$="P" then
                    break
                else
                    cntr=1
                    break
                endif
            wend
            if cntr=1
                continue
            endif
        endif

rem --- Detail or Summary?

    if p9$="D" then
  
rem --- Order status

            x$="Order"
            ship$=ope01a.shipmnt_date$
            if ope01a.invoice_type$="P" then
                x$="*Quote"
            else
                x$="Order"
            endif
            if ope01a.credit_flag$="C" then  x$="Credit"
            if ope01a.credit_flag$="R" then  x$="Released"
            if ope01a.backord_flag$="B" then  x$="BackOrder"
            if ope01a.ordinv_flag$="I" then  x$="Invoice"
            if ope11a.est_shp_date$<>"   " then  ship$=ope11a.est_shp_date$

rem --- Print item stuff?

            if item$<>"" then
                if l+3>l9 then gosub report_heading
                print (printer_dev)
:                                   @(o[0]),ivm01a.item_id$,
:                                   @(o[1]),ivm01a.product_type$,
:                                   @(o[2]),ivm01a.unit_of_sale$
                print (printer_dev)
:                                   @(o[0]+2),ivm01a.item_desc$
                l=l+2
                item$=""
            endif

rem --- Print Description for Non-stocks

            if nonstock$="Y" then
                if l+1>l9 then gosub report_heading
                print (printer_dev)
:                               @(o[3]-3),ope11a.order_memo$
                l=l+1
            endif

rem --- Print detail line

            if l+1>l9 then gosub report_heading
            print (printer_dev)
:                              @(o[3]),fnmask$(ope11a_altkey01.customer_id$,m0$),
:                              @(o[4]),ope01a.order_no$,ope01a.backord_flag$,
:                              @(o[5]),fndate$(ope01a.order_date$),
:                              @(o[6]),fndate$(ship$),
:                              @(o[7]),x$,
:                              @(o[8]),amount:m1$,
:                              @(o[9]),ope11a.qty_ordered:m2$,
:                              @(o[10]+1),ope11a.commit_flag$
            l=l+1
    endif

rem --- Accumulate totals

        t[0]=t[0]+amount
        t[1]=t[1]+ope11a.qty_ordered
        l0=l0+1,l1=l1+1
        total=total+amount
        subtotal=subtotal+amount

wend

done: rem --- End

        done=1
        gosub Warehouse_Break
        if l+2>l9 then gosub report_heading
        x$="Total For Report"
        print (printer_dev)
:                           @(o[8]),j$
        print (printer_dev)
:                           @(o[8]-len(x$)),x$,
:                           @(o[8]),total:m1$
        goto std_exit

report_heading: rem --- Report Heading

        l=headings+1
        call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,h,h0,when$,clock$,status
        if status then exitto std_exit
        if p9$="D" then print (printer_dev)
:                                           @(o[4]),"Order",
:                                           @(o[5]+2),"Order",
:                                           @(o[6]+2),"Ship",
        print (printer_dev)
:                                           @(o[8]+m1-6),"Order",
:                                           @(o[9]+m2-8),"Order",
:                                           @(o[10]),"Com",
:                                           @(o[11]+m2-9),"Quantity",
:                                           @(o[12]+m2-10),"Quantity",
:                                           @(o[13]+m2-10),"Quantity"
        if p9$="D" then print (printer_dev)
:                                           @(o[3]),"Cust",
:                                           @(o[4]),"Number",
:                                           @(o[5]+2),"Date",
:                                           @(o[6]+2),"Date",
:                                           @(o[7]),"Status",
        print (printer_dev)
:                                           @(o[0]),"Item",
:                                           @(o[1]),"Prd",
:                                           @(o[2]),"UM",
:                                           @(o[8]+m1-6),"Total",
:                                           @(o[9]+m2-9),"Quantity",
:                                           @(o[10])," ?",
:                                           @(o[11]+m2-9),"On Hand",
:                                           @(o[12]+m2-10),"Committed",
:                                           @(o[13]+m2-10),"Available"
        print (printer_dev)""
        l=l+3
        return

Warehouse_Break: rem --- Warehouse break

        if t0$<>"" then
            gosub Item_Break
            if l0<>0 then
                l=l+2
                x$="Total For "+h5$
                if l>l9 then gosub report_heading
                print (printer_dev)
:                                   @(o[8]),j$
                print (printer_dev)
:                                   @(o[8]-len(x$)),x$,
:                                   @(o[8]),subtotal:m1$
            endif
        endif

        if done>0 then
            return
        endif
        dim x0$(32),x$(h0)
        ivm10c.short_name$=nf$
        t0$=ope11a_altkey01.warehouse_id$
        l0=0
        l=l9+1
        subtotal=0
        find record (ivm10c_dev,key=firm_id$+"C"+t0$,dom=*next) ivm10c$
        h5$="Warehouse: "+t0$+" "+cvs(ivm10c.short_name$,2)
        x$(1)=h4$
        x$(fncenter(h3$,h0))=h3$
        x$(h0-len(h5$))=h5$
        headings$[2]=x$

        return

Item_Break: rem --- Item break

    if t1$<>"" then
        if l1<>0 then
            avail=ivm02a.qty_on_hand-ivm02a.qty_commit
            x$="Total For Item "+ivm01a.item_id$
            if p9$="S" then
                if l+3>l9 then gosub report_heading
                if cvs(ivm01a.item_id$,2)="" then  ivm01a.item_desc$="Non-Stock Item(s)"
                print (printer_dev)
:                                   @(o[0]),ivm01a.item_id$,
:                                   @(o[1]),ivm01a.product_type$,
:                                   @(o[2]),ivm01a.unit_of_sale$,
:                                   @(o[8]),t[0]:m1$,
:                                   @(o[9]),t[1]:m2$,
:                                   @(o[11]),ivm02a.qty_commit:m2$,
:                                   @(o[12]),ivm02a.qty_commit:m2$,
:                                   @(o[13]),avail:m2$
                print (printer_dev)
:                                   @(o[0]+2),ivm01a.item_desc$
                print (printer_dev)""
                l=l+3
                t[0]=0
                t[1]=0
            else
                if l+2>l9 then gosub report_heading
                print (printer_dev)
:                                   @(o[8]),j$
                print (printer_dev)
:                                   @(o[8]-len(x$)),x$,
:                                   @(o[8]),t[0]:m1$,
:                                   @(o[9]),t[1]:m2$,
:                                   @(o[11]),ivm02a.qty_on_hand:m2$,
:                                   @(o[12]),ivm02a.qty_commit:m2$,
:                                   @(o[13]),avail:m2$
                t[0]=0
                t[1]=0
            endif
        endif
    endif

    if done>0 then return
    t1$=ope11a_altkey01.item_id$
    ivm01a.firm_id$=ope11a_altkey01.firm_id$
    ivm01a.item_id$=t1$
    ivm01a.item_desc$=nf$
    
    ivm02a.firm_id$=ope11a_altkey01.firm_id$
    ivm02a.warehouse_id$=ope11a_altkey01.warehouse_id$
    ivm02a.item_id$=ope11a_altkey01.item_id$
    item$=t1$
    l1=0
    l=l+2
    find record (ivm01_dev,key=ivm01a.firm_id$+ivm01a.item_id$,dom=*next) ivm01a$
    find record (ivm02_dev,key=ivm02a.firm_id$+ivm02a.warehouse_id$+ivm02a.item_id$,dom=*next) ivm02a$

    return

test_code: rem --- Test line code to determine whether to print

    ignoreit$="N"
    nonstock$="N"
    find record (opm02_dev,key=firm_id$+ope11a.line_code$,dom=rtn_1) opm02a$
    if opm02a.line_type$="M" or opm02a.line_type$="O" then  ignoreit$="Y"
    if opm02a.line_type$="N" then  nonstock$="Y"
rtn_1:
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Format zip/postal code

    def fnzipcode$(q$)=fill(10,cvs(q$(1,3)+fill(pos("9"<q$(1,5))>0)+q$(4,2)+
:                      fill(ABS(pos("A">=q$(1,6))>0)-pos("0">q$(6,4))>0,"-")+
:                      q$(6,4)+fill(10),16))

rem --- Date/time handling functions

rem #include fndate.src

        def fndate$(q$)
        if cvs(q$,2)="" return ""
        if pos("9"<>q$)=0 return q$
        testdate$=""
        testdate$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        return testdate$
        fnend

rem #endinclude fndate.src



    rem def fndate$(q$)=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)
    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
