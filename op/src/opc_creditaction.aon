rem --- Order Entry/Credit Check
rem --- Program opc_creditaction v8.0.0 10Jul2009 (ope_df)
rem --- Created by adx_codeport.bbj v1.1.5 (07/10/2009 11:17:11)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

    enter cust_id$, order_no$, table_chans$[all], callpoint!, status

rem --- Use statements, declares

    use ::sys/prog/bao_callpoint.bbj::Callpoint
    
    declare Callpoint callpoint!

rem --- Retrieve the program path

    pgmdir$=""
    pgmdir$=stbl("+DIR_PGM",err=*next)
    sypdir$=""
    sypdir$=stbl("+DIR_SYP",err=*next)

rem --- Retrieve sysinfo data

    dim sysinfo$:stbl("+SYSINFO_TPL")
    sysinfo$=stbl("+SYSINFO")
    firm_id$=sysinfo.firm_id$

rem --- Open needed files

    num_files=10
    dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]

    open_tables$[1]="ARM_CUSTDET",  open_opts$[1]="OTA"
    open_tables$[2]="ARC_TERMCODE", open_opts$[2]="OTA"
    open_tables$[3]="ARS_PARAMS",   open_opts$[3]="OTA"
    open_tables$[4]="IVS_PARAMS",   open_opts$[4]="OTA"
    open_tables$[5]="OPE_ORDHDR",   open_opts$[5]="OTA"
    open_tables$[7]="OPE_CREDDATE", open_opts$[7]="OTA"
    open_tables$[8]="OPE_ORDDET",   open_opts$[8]="OTA"
    open_tables$[9]="OPC_LINECODE", open_opts$[9]="OTA"
    open_tables$[10]="ARS_CREDIT",  open_opts$[10]="OTA"

    gosub open_tables

    arm02_dev  = num(open_chans$[1])
    arm10_dev  = num(open_chans$[2])
    ars01a_dev = num(open_chans$[3])
    ivs01a_dev = num(open_chans$[4])
    ope01_dev  = num(open_chans$[5])
    ope03_dev  = num(open_chans$[7])
    ope11_dev  = num(open_chans$[8])
    opm02_dev  = num(open_chans$[9])
    ars01c_dev = num(open_chans$[10])

    dim arm02a$:open_tpls$[1]
    dim arm10a$:open_tpls$[2]
    dim ars01a$:open_tpls$[3]
    dim ivs01a$:open_tpls$[4]
    dim ope01a$:open_tpls$[5]
    dim ope03a$:open_tpls$[7]
    dim ope11a$:open_tpls$[8]
    dim opm02a$:open_tpls$[9]
    dim ars01c$:open_tpls$[10]

rem --- Retrieve parameter records

    find record (ars01a_dev, key=firm_id$+"AR00", err=std_missing_params) ars01a$
    find record (ars01c_dev, key=firm_id$+"AR01", err=std_missing_params) ars01c$; rem c9$
    find record (ivs01a_dev, key=firm_id$+"IV00", err=std_missing_params) ivs01a$

rem --- Initialize Data

    o3$=""
    status$="Credit OK"
    start_block = 1
    
    if start_block then
        found = 0
        find record (ope01_dev, key=firm_id$+"  "+cust_id$+order_no$, dom=*endif) ope01a$
        found = 1
    endif
    
    if !found then 
        status = 911
        exit
    endif
    
rem --- Display Left Side

    rem call pgmdir$+"opc_creditmgmnt.aon", ope01a.customer_id$, table_chans$[all], callpoint!, status

rem --- Has order been printed?

    if ope01a.print_status$ = "Y" then
        status$="This Order Has Been Printed"
        goto display_form
    endif

rem --- Check For Quotes

    if ope01a.invoice_type$="P" then
        status$="This is a Quote"
        extract record (ope01_dev, key=firm_id$+"  "+cust_id$+order_no$) ope01a$
        ope01a.credit_flag$ = ""
        write record (ope01_dev) ope01a$
        goto display_form
    endif

rem --- Check Terms (ope_df, 1300-1499, s$(1,1) is backwards)

    declare BBjControl creditHoldControl!
    
    over_credit_limit = num(callpoint!.getDevObject("over_credit_limit"))
    start_block = 1
    
    if start_block then
        find record (arm10_dev, key=firm_id$+"A"+ope01a.terms_code$, dom=*endif) arm10a$
        
        if arm10a.cred_hold$ = "Y" then 
            over_credit_limit = 1
            callpoint!.setDevObject("over_credit_limit", "1")
        endif
        
        if !over_credit_limit then 
            ope01a.credit_flag$=""
            status$="Credit is OK"
        else
            if ope01a.credit_flag$="R" then 
                status$="Order is Released"
            else
                if ope01a.total_sales > 0 then 
                    creditHoldControl! = cast(BBjControl, callpoint!.getDevObject("credit_hold_control"))
                    creditHoldControl!.setText("***Credit Hold***")
                endif
            endif
        endif
    endif

display_form: rem --- Display	

	dim dflt_data$[2,1]
	dflt_data$[1,0] = "CREDIT_STATUS"
	dflt_data$[1,1] = status$
    dflt_data$[2,0] = "AR_TERMS_CODE"
    dflt_data$[2,1] = ope01a.terms_code$
    
    credit_action = 0
	
	call sypdir$+"bam_run_prog.bbj", "OPE_CREDITACTION", stbl("+USER_ID"), "", "", table_chans$[all], "", dflt_data$[all]	
    
    credit_action = num(callpoint!.getDevObject("credit_action"))
    
    switch credit_action 
		case 1
        
        rem --- Hold order
        
            extract record (ope01_dev, key=firm_id$+"  "+cust_id$+order_no$) ope01a$
            ope01a.credit_flag$ = "C"
            ope01a$ = field(ope01a$)
            write record (ope01_dev) ope01a$
            
			break
            
		case 2
        
        rem --- Hold The Customer
        
            extract record (arm02_dev,key=firm_id$+cust_id$+"  ") arm02a$
            arm02a.cred_hold$ = "Y"
            arm02a$ = field(arm02a$)
            write record (arm02_dev,key=c0$) arm02a$
            
            extract record (ope01_dev, key=firm_id$+"  "+cust_id$+order_no$) ope01a$
            ope01a.credit_flag$ = "C"
            ope01a$ = field(ope01a$)
            write record (ope01_dev) ope01a$

			break
            
		case 3
        
        rem --- Release this order
        
            terms$ = str(callpoint!.getDevObject("new_terms_code"))
            
            if terms$<>"null" then
                find record (arm10_dev, key=firm_id$+"A"+terms$, dom=*endif) arm10a$
                ope01a.credit_flag$="R"
            endif
        
			break
            
		case 4
        
        rem --- Delete order
        rem --- (This is currently a no-op.  We have no way of programmatically deleting an order)
        
            o3$="D"
            ope01a.credit_flag$=""
            
			break
            
		case default
	swend
    
    goto end_input

rem *** SECTION UNUSED ***

done: rem --- Correct?

    if ui$="W" call pgmdir$+"syc_rs.bbx","",my_context,2006,status$,0,"",status else print @(48,20),status$,
    v4$="(<Enter>=Continue/<F2>=Line Detail"
    if c9$(18,1)<>"N" or ope01a.credit_flag$<>"C" v4$=v4$+"/<F1>=Print/<F3>=Select Printer"
    v4$=v4$+")"
    v0$="S"
    v1$="C"
    v2$=""
    v3$=""
    v0=1
    v1=fnv(v4$)
    v2=22
    control_id=i0-i0_done+1
    if ui$="W" v4$="(<OK>=Continue/<F2>=Line Detail)"
    rem gosub std_input
    o3$=""
done_v3: 
    on v3 goto l4066,l4066,l4066,l4066,l4066,end_input,cancel,printer_select,printit,done
l4066: 
    if v3=3 goto printer_select
    if v3=1 if c9$(18,1)<>"N" or ope01a.credit_flag$<>"C" o3$="P"
    if v3=2 o3$="D"
    if o3$="" then goto end_input
printit: 
    o3$="P"; goto end_input
cancel: 

rem ***

end_input: 

rem --- Update Tickler File

    gosub update_tickler

rem --- Update order header file

    if pos(o3$="PD")=0 then 
        gosub warn_re_picklist
    endif
    
    rem ope01a.total_sales=u[0]
    rem if o3$="P" goto l4500
    rem if o3$="D" run pgmdir$+"ope_dd.bbx"
    ope01a.lock_status$="N"
    ope01a$ =field(ope01a$)
    write record (ope01_dev) ope01a$
    
    goto std_exit

l4500: rem --- Print (*** not used)

    call pgmdir$+"adc_printer.aon",printer_dev,0,"Print Order "+a0$(11,7),r2$(15,2)+format$,status
    if status goto display_form
    if ope01a.print_status$="Y" a0$(100,1)="Y"
    write record (ope01_dev,key=a0$(1,20)) ope01a$
    o9$="ope_db.bbx"
    o9=2
    run pgmdir$+"opr_pa.bbx"

printer_select: rem --- Printer Select (*** not used)

    dim option$[2]
    option$[1]="ORDER"
    call pgmdir$+"syc_qp.bbx",d_action$,option$[all],vmenu$[all],vmenu[all],vtool$[all],vtool[all],d_status
    if option$[1]="EXIT" goto l4660
    r2$(15,2)=option$[1]
    if len(option$[1])>2 format$=option$[1](3) else format$=""
l4660: 
    prt_name$=r2$(15,2); if cvs(format$,2)<>"" prt_name$=r2$(15,2)+"-"+format$
    if ui$<>"W" print 'sb',@(40,1),prt_name$,'sf',
    if ui$="W" void$=sendmsg(sysgui_dev,statusbar,set_text,5,prt_name$,my_context,err=*next)
    goto display_form

update_tickler: rem --- Update Tickler File

    update = 1
    read (ope03_dev, key=firm_id$+cust_id$+order_no$, knum=2, dom=*next)

rem --- Find only tickler records for this order    

    while 1
    
        read record (ope03_dev, end=*break) ope03a$
        if ope03a.firm_id$+ope03a.customer_id$ <> firm_id$+cust_id$ then break
        if ope03a.order_no$<>order_no$ then continue
    
    rem --- Found and no need to remove or update
    
        if ope01a.order_date$ = ope03a.rev_date$ and ope01a.credit_flag$="C" then 
            update = 0
            break
        endif
        
    rem --- Found and needs to be removed, and possibly updated
        
        remove (ope03_dev, key=firm_id$+ope03a.rev_date$+cust_id$+order_no$, dom=*next)
        break
        
    wend

rem --- Update tickler file with new record
    
    if ope01a.credit_flag$="C" and update then
        dim ope03a$:fattr(ope03a$)
        ope03a.firm_id$ = firm_id$
        ope03a.rev_date$ = ope01a.order_date$
        ope03a.customer_id$ = cust_id$
        ope03a.order_no$ = order_no$
        write record (ope03_dev) ope03a$
    endif
    
    return

warn_re_picklist: rem --- Warn About Printing Pick Ticket

    if ope01a.print_status$<>"N" and (ope01a.credit_flag$<>"C" or ars01c.pick_hold$="N") then 
        msg_id$ = "OP_PRINT_PICKLIST"
        gosub disp_message
        escape; rem debug
        if msg_opt$ = "Y" then
            call pgmdir$+"opc_picklist.aon", cust_id$, order_no$, table_chans$[all], status
            if status then escape; rem debug
        endif
        rem call pgmdir$+"adc_yesno.aon",1,"New Items Have Been Committed.  Print Pick Ticket Now",2,v$,v3
        rem if v$="N" then warn$=""
    endif

    return

open_tables: rem --- Open tables

    call sypdir$+"bac_open_tables.bbj",
:       open_beg,
:       open_end,
:       open_tables$[all],
:       open_opts$[all],
:       open_chans$[all],
:       open_tpls$[all],
:       table_chans$[all],
:       open_batch,
:       open_status$

    if open_status$<>"" then
        msg_id$="ENTRY_OPEN_ERROR"
        dim msg_tokens$[1]
        msg_tokens$[1]=open_status$
        gosub disp_message
        status=912
        goto std_exit
    endif

    return

disp_message: rem --- Display Message Dialog

    call sypdir$+"bac_message.bbj",
:       msg_id$,
:       msg_tokens$[all],
:       msg_opt$,
:       table_chans$[all]

    return



rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:       str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5)),
:       str(err),rd_err_text$,rd_err_act$
std_missing_params_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    exit
    
rem #endinclude std_end.src

    end
