rem --- Order/Picking List
rem --- Program opr_pa v8.0.0 18Jul2007 (opr_pa)
rem --- Created by adx_codeport.bbx v1.1.5 (07/18/2007 03:48:04)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved


    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$


rem --- Assign form input values to local variables

    table$=fnget_table$("")
rem value_01$=fnget_fld_data$(table$,"dataname_01")
    Print_Prices$=fnget_fld_data$(table$,"print price")
    Restart$=fnget_fld_data$(table$,"Restart")
    Customer_Number$=fnget_fld_data$(table$,"Customer Number")   
    Selected_Warehouse$=fnget_fld_data$(table$,"Selected Warehouse")

rem --- Retrieve parameter records

    ars01a_key$=firm_id$+"AR00"
    find record (ars01a_dev,key=ars01a_key$,err=std_missing_params) ars01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$


rem --- Initialize Data

    if o9<>1 and o9<>2 call pgmdir$+"syc_fe.bbx",911; rem O9 was not set by before RUNning
    precision i[2]
    h0=0
    l9=37
    headings=0
    when$=sysinfo.system_date$
    dim h9$(40,$0A$),headings$[headings],mh0$(36),md0$(6),md1$(40),x4$(400)
    mult_wh=0
    read (ivm10_dev,key=firm_id$+"C",dom=*next)
    read (ivm10_dev)
    ivm10a_key$=key(ivm10_dev,end=Background)
    if pos(firm_id$+"C"=ivm10a_key$)=1 mult_wh=1

Background: rem --- Background

    if o9<>2 then
                    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,status
                    call pgmdir$+"adc_progress.aon","N",sysinfo.task_desc$,"","Printing","",len(m0$)+8,0,1,0,ignore_status
           
                else



                read (ope01_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$+ope01_key.SEQUENCE_000$,dom=*next)
                p8$="Y"
                if ope01a.INVOICE_TYPE$="S" then
                        call pgmdir$+"adc_yesno.aon",0,"Do you wish to print prices on the Picking List",0,v$,v3
                        p8$=v$
                        if v3=4 goto std_exit
                        if p8$="NO" p8$="N" else if p8$="YES" p8$="Y"
                endif


                call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,status
                call pgmdir$+"adc_progress.aon","N",sysinfo.task_desc$,"","Printing","",len(m0$)+8,0,1,0,ignore_status
rem             call pgmdir$+"adc_progress.aon","S","","","",fnmask$(a0$(5,p[0]),m0$)+" "+a0$(11,7),0,0,1,0,ignore_status
                call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,0,ignore_status

            rem --- Read header for on-demand printing

                read record (ope01_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$+ope01_key.SEQUENCE_000$,dom=std_exit) ope01a$
                total=0
                goto On_Demand
    endif


    read (ope04_dev,key=firm_id$+"O"+"  "+p5$,dom=*next)
while more


            if o9=2 goto On_Demand1
            total=0
            reprint$=""
            ope04a_key$=key(ope04_dev,end=*break)
            read (ope04_dev)
            if ope04a_key.FIRM_ID$+ope04a_key.ORDINV_FLAG$<>firm_id$+"O" break
            find record (ope01a_dev,key=ope04a_key.FIRM_ID$+ope04a_key.AR_TYPE+"000",dom=Remove_bad) ope01a$
            if (which_ones$="P" and ope01a.INVOICE_TYPE$<>"S") or (which_ones$="Q" and ope01a.INVOICE_TYPE$<>"P") continue

On_Demand: rem --- Here for on-demand printing

            if ope01a.PRINT_STATUS$="Y" gosub is_still_printed
            if ope01a.REPRINT_FLAG$="Y" reprint$=ope01a.PRINT_STATUS$,ope01a.PRINT_STATUS$="N"
            if pos(ope01a.PRINT_STATUS$="Y")<>0 continue
            if o9=1 and pos(ope01a.LOCK_STATUS="YS12") continue
            if ope01a.INVOICE_TYPE$="V" continue
            if c9$(7,1)="Y" if ope01a.CREDIT_FLAG$="C" and c9$(18,1)="N" continue
            after$="NO"; gosub valid_lines
            if print$="NO" continue
            call pgmdir$+"adc_progress.aon","S","","","",fnmask$(ope01a_key.CUSTOMER_ID$,m0$)+" "+ope01a_key.ORDER_NO$,0,0,1,0,ignore_status
            goto heading

Remove_bad: rem --- Remove bad sort key

            remove (ope04_dev,key=ope04a_key$)

            continue

heading: rem --- Heading

            b$=""
            othwhse$=""
            dim b1$(325)
            arm01a.CUSTOMER_NAME$="Not On File"
            read record (arm01_dev,key=firm_id$+ope01a_key.CUSTOMER_ID$,dom=Assign_Value) arm01a$
            b$=arm01a.ADDR_LINE_1$+arm01a.ADDR_LINE_2$+arm01a.ADDR_LINE_3$+arm01a.ADDR_LINE_4$+arm01a.CITY$+arm01a.STATE_CODE$+arm01a.ZIP_CODE$+arm01a.COUNTRY$
            call pgmdir$+"adc_address.aon",b$,24,5,p[2],30
Assign_Value:
            b$=arm01a.CUSTOMER_NAME$+b$

        rem --- Ship-To

rem         dim c1$(255),c$(159)
            if cvs(ope01a.SHIPTO_NO$,2)="" then arm03a.NAME$(1,4)="SAME",c$(1,81)=""
                 else
                    if ope01a.SHIPTO_NO$="000099" then
                         find record (ope31a_dev,key=firm_id$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$,dom=Cal_Prog) ope31a$
                            c$=ope31a.ADDR_LINE_1$+ope31a.ADDR_LINE_2$+ope31a.ADDR_LINE_3$+ope31a.ADDR_LINE_4$+ope31a.CITY$+ope31a.STATE_CODE$+ope31a.ZIP_CODE$
                             arm03a.NAME$=ope31a.NAME$
        
                  
                        else


                             find record (arm03a_dev,key=firm_id$+ope01_key.CUSTOMER_ID$+ope01a.SHIPTO_NO$,dom=Cal_Prog) arm03a$
                             c$=arm03a.ADDR_LINE_1$+arm03a.ADDR_LINE_2$+arm03a.ADDR_LINE_3$+arm03a.ADDR_LINE_4$+arm03a.CITY$+arm03a.COUNTRY$
                    endif
Cal_Prog:
                            call pgmdir$+"adc_address.aon",c$,24,5,p[2],30
           endif

 
            c$=arm03a.NAME$+c$

        rem --- Print Heading

            c$=pad(c$,len(b$))

        rem --- Salesperson

            x1$="HOUSE"
            find record (arm10f_dev,key=firm_id$+"F"+ope01a.SLSPSN_CODE$,dom=Terms) arm10f$
            x1$=arm10f.CODE_DESC$

Terms: rem --- Terms

            x3$=""
            find record (arm10a_dev,key=firm_id$+"A"+ope01a.TERMS_CODE$,dom=Print_Heading) arm10a$
            x3$=arm10a.CODE_DESC$

Print_Heading: rem --- Print Heading

            gosub report_heading
            t0=0

        rem --- Position Detail File

            read (ope11_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$,dom=*next)


    while more

            ope11a_key$=key(ope11_dev,end=*break)
            if ope11a_key.FIRM_ID$+ope11a_key.AR_TYPE$+ope11a_key.CUSTOMER_ID$+ope11a_key.ORDER_NO$<>ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$ break
            read record (ope11_dev,key=ope11a_key$) ope11a$

rem --- Type

rem         dim y0$(30)
            find record (opm02a_dev,key=firm_id$+ope11a.LINE_CODE$,dom=Check_Condn2) opm02a$
            if pos(ope01a.INVOICE_TYPE$="P")<>0 and ope11a.COMMIT_FLAG$<>"N" then
                    if pos(ope11a.WAREHOUSE_ID$=othwhse$)=0 othwhse$=othwhse$+ope11a.WAREHOUSE_ID$
            endif




            if whse$<>"" and ope11a.WAREHOUSE_ID$<>whse$ continue
            if pos(opm02a.LINE_TYPE$="MNO")<0 then


Check_Condn2:
                            dim x2$(60),x7$(62); let x2$(1)="**Not On File**"
                            if pos(opm02a.LINE_TYPE$=" SRDP")<>0 then
                                 find record (ivm01a_dev,key=firm_id$+ope11a.ITEM_ID$,dom=Find_Record1) ivm01a$
                                 gosub Compress_Description



Find_Record1:
                                 dim x5$(10)
                                 find record (ivm02a_dev,key=firm_id$+ope11a.WAREHOUSE_ID$+ope11a.ITEM_ID$,dom=*next) ivm02a$
                            endif
            endif




            if opm02a.LINE_TYPE$="M" and pos(opm02a.MESSAGE_TYPE$=" BO")=0 break



            t0=t0+ope11a.EXT_PRICE

        rem --- Any Serial/Lot #'s?

            if pos(i3$(17,1)="LS")=0 continue
            if pos(opm02a.LINE_TYPE$=" SRDP")=0 continue
            if ivm01a.LOTSER_ITEM$<>"Y" continue

        rem --- OK There Are Lots

            dim t[2]; let t9=0; rem ESCAPE T$="",
            read (ope21_dev,key=ope11a_key.FIRM_ID$+ope11a_key.AR_TYPE$+ope11a_key.CUSTOMER_ID$+ope11a_key.ORDER_NO$+ope11a_key.LINE_NO$,dom=*next)
        while more
            ope21a_key$=key(ope21_dev,end=*break)
            if pos(ope11a_key.FIRM_ID$+ope11a_key.AR_TYPE$+ope11a_key.CUSTOMER_ID$+ope11a_key.ORDER_NO$+ope11a_key.LINE_NO$=ope21a_key$)<>1  break
            read record (ope21_dev) ope21a$
            if ope21a.QTY_ORDERED=0 continue
            gosub Print4
            t9=t9+ope21a.QTY_SHIPPED
          wend

            if t9<ope11a.QTY_ORDERED then
rem                 dim ope21a.LOTSER_NO$(i[3],"_"),t[2]
                    y9=ope11a.QTY_ORDERED-t9; if i3$(17,1)="L" y9=3
                    for y=1 to y9
                        gosub Print4
                    next y
            endif




            if l+1>l9 continue
            print (printer_dev)""
            l=l+1

      wend






            gosub Total1
            if o9=2 break
            extract record (ope01_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$+ope01_key.SEQUENCE_000$,err=*continue) ope01a$
            if ope01a.REPRINT_FLAG$="Y" ope01a.PRINT_STATUS$=reprint$ else ope01a.PRINT_STATUS$="B"
            write record (ope01_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$+ope01_key.SEQUENCE_000$) ope01a$



wend



    if o9<>1 then
                after$="YES"; gosub valid_lines

On_Demand1: rem --- Here for on-demand printing

                if ope01a.REPRINT_FLAG$="Y" then ope01a.PRINT_STATUS$=reprint$,ope01a.REPRINT_FLAG$=""
                 else
                    if print$="YES" and allprint$="YES" ope01a.PRINT_STATUS$="Y"
                endif

                if ope01a.PRINT_STATUS$<>"Y" ope01a.PRINT_STATUS$="N"
                ope01a.LOCK_STATUS$="N"
                write record (ope01_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$+ope01_key.SEQUENCE_000$) ope01a$
                if ope01a.PRINT_STATUS$="Y" remove (ope04_dev,key=firm_id$+"O"+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$,dom=*next)
    endif

     while more

            if printer_dev close (printer_dev,err=*next)
            call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,ignore_status
            if o9=2 goto std_exit
            v4$="Are you ready to update the Order/Picking List"
            call pgmdir$+"adc_yesno.aon",0,v4$,0,v$,v3
            if v3=4 or v$="NO" goto std_exit
            if v$<>"YES" then continue
             else 
                break
     wend

    call pgmdir$+"adc_progress.aon","N","","","Updating","",len(m0$)+8,0,1,0,ignore_status
    read (ope04_dev,key=firm_id$+"O",dom=*next)

rem --- Clear Print Flags

    ope04a_key$=key(ope04_dev,end=all_done)
    read (ope04_dev,key=ope04a_key$)
    if ope04a_key.FIRM_ID$+ope04a_key.ORDINV_FLAG$=firm_id$+"O" then
                        call pgmdir$+"adc_progress.aon","S","","","",fnmask$(ope01_key.CUSTOMER_ID$,m0$)+" "+ope01_key.ORDER_NO$,0,0,1,0,ignore_status
                        extract record (ope01_dev,key=ope04a_key.FIRM_ID$+ope04a_key.AR_TYPE$+"000",dom=Clear1) ope01a$
                        if (which_ones$="P" and ope01a.INVOICE_TYPE$<>"S") or (which_ones$="Q" and ope01a.INVOICE_TYPE$<>"P") return
                        if ope01a.REPRINT_FLAG$="Y" or ope01a.REPRINT_FLAG$="" then ope01a.LOCK_STATUS$="N" 
                                else
                                if pos(ope01a.PRINT_STATUS$="B")=0 return
                                if pos(ope01a.LOCK_STATUS$="YS12")<>0 return
                                after$="YES"; gosub valid_lines
                                ope01a.LOCK_STATUS$="N"
                                if print$="YES" and allprint$="YES" ope01a.PRINT_STATUS$="Y"
                        endif
                    Write1:
                        if ope01a.PRINT_STATUS$<>"Y" ope01a.PRINT_STATUS$="N"
                        write record (ope01_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$+ope01_key.SEQUENCE_000$) ope01a$
                    Clear1:
                        if ope01a.PRINT_STATUS$="Y" remove (ope04_dev,key=ope04a_key$)
                        return
    endif

all_done: rem --- Done with update

    call pgmdir$+"syc_cn.bbx","",0,16,'CL',ignore_status
    goto std_exit

report_heading: rem --- Report Heading

    call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,page,width,when$,clock$,status
    if ope01a.ORDINV_FLAG$="P" print (printer_dev)'LF',
:                                           @(h0+24),"Q U O T A T I ON    O N L Y" else print (printer_dev)'LF',
:                                           @(h0+20),"O R D E R  /  P I C K I N G     L I S T"
    if ope01a.REPRINT_FLAG$="Y" z0$="*** R E P R I N T ***" else z0$=""
                         print (printer_dev)
:                                           @(h0+28),z0$,'LF',
:                                           @(h0+0),sysinfo.firm_name$,
:                                           @(h0+55),"Order Number: ",ope01_key.ORDER_NO$," ",ope01a.BACKORD_FLAG$,'LF',
:                                           @(h0+63),"Date : ",fndate$(ope01a.ORDER_DATE$)
                         print (printer_dev)
:                                           @(h0+2),"Customer: ",fnmask$(ope01_key.CUSTOMER_ID$,m0$),
:                                           @(h0+49),"Ship To:"
    for i=1 to 6
                        print (printer_dev)
:                                           @(h0+12),b$(i*30-29,30),
:                                           @(h0+49),c$(i*30-29,30),'LF',
    next i
                        print (printer_dev)
:                                           @(h0+0),fill(80,"-")
                        print (printer_dev)
:                                           @(h0+0),"Cust P.O.#    Terms           Salesperson       Ship Via   Ship Date    PC",'LF',
:                                           @(0),fill(80,"-")
                        print (printer_dev)
:                                           @(h0+0),ope01a.CUSTOMER_PO_NO$,
:                                           @(h0+14),x3$,@(h0+30),x1$,
:                                           @(h0+51),ope01a.AR_SHIP_VIA$,
:                                           @(h0+62),fndate$(ope01a.SHIPMNT_DATE$),
:                                           @(h0+74),ope01a.PRICE_CODE$,'LF',
:                                           @(h0+0),fill(80,"-"); rem ESCAPE, Need to make room for Cust PO#, A0$(111,20)
                        print (printer_dev)
:                                           @(h0+28),"Item Number &",'LF',
    if ope01a.INVOICE_TYPE$="P" or p8$="Y" print (printer_dev)
:                                           @(h0+73-m4+4),"Price",
                        print (printer_dev)
:                                           @(h0+0),"Line  Order   Ship   B/O        Description",
    if mult_wh>0 print (printer_dev)
:                                           @(h0+47),"Whse",
                 print (printer_dev)
:                                           @(h0+52),"Location",
:                                           @(h0+74),"Carton",'LF',
:                                           @(h0+0),fill(80,"-"),'LF'
    l=0
    return

rem --- Item detail

    if l+1>l9 gosub continue_page
                print (printer_dev)
:                                           @(h0),ope11a_key.LINE_NO$,
    if pos(opm02a.LINE_TYPE$="MO")=0 then
                    if ope11a.COMMIT_FLAG$="N" print (printer_dev)
:                                           @(h0+13),"Ship:",fndate$(ope11a.EST_SHP_DATE$), else print (printer_dev)
:                                           @(h0+13),"______ ______",
                    print (printer_dev)
:                                           @(h0+4),w[2],
                    print (printer_dev)
:                                           @(h0+74),"______",
    endif

    if pos(opm02a.LINE_TYPE$="MO")<>0 print (printer_dev)
:                                           @(h0+28),ope11a.ORDER_MEMO$,
    if opm02a.LINE_TYPE$="N" print (printer_dev)
:                                           @(h0+28),"Non-Stock",
    if pos(opm02a.LINE_TYPE$=" SRDP")<>0 print (printer_dev)
:                                           @(h0+28),ope11a.ITEM_ID$,
    if ope01a.INVOICE_TYPE$<>"P" then
                if pos(opm02a.LINE_TYPE$=" SRDPN")<>0 and mult_wh>0 print (printer_dev)
:                                           @(h0+48),ope11a.WAREHOUSE_ID$,
                if opm02a.DROPSHIP$="Y" then print (printer_dev)
:                                           @(h0+53),"*Drop Ship",
                    else   
                        if pos(opm02a.LINE_TYPE$=" SRDP")<>0 print (printer_dev)
:                                           @(h0+53),x5$,
                    
                endif        
            
                if p8$="Y" then
   endif

                    if pos(opm02a.LINE_TYPE$=" SRDPN")<>0 print (printer_dev)
:                                           @(h0+73-m4),w[1]:m4$,; let total=total+w[6]
                    if pos(opm02a.LINE_TYPE$="O")<>0 print (printer_dev)
:                                           @(h0+73-m1),w[6]:m1$,;let total=total+w[6]
                endif

    print (printer_dev)'LF',
    l=l+1
    if pos(opm02a.LINE_TYPE$=" SRDPN")<>0 if l+1>l9 gosub continue_page
    if pos(opm02a.LINE_TYPE$=" SRDP")<>0 print (printer_dev)
:                                           @(h0+32),x2$; let l=l+1
    if opm02a.LINE_TYPE$="N" print (printer_dev)
:                                           @(h0+32),ope11a.ORDER_MEMO$; let l=l+1
    return

Print4: rem --- Serial #'s Here

    if l>l9-1 then
        gosub continue_page
        if pos(opm02a.LINE_TYPE$=" SRDP")<>0 print (printer_dev)
:                                           @(h0+28),ope11a.ITEM_ID$,"(Continued)"; let l=l+1
    endif

            if i3$(17,1)<>"L" then
                print (printer_dev)
:                                           @(h0+24),"S/N: ",ope21a.LOTSER_NO$
                  else

                    print (printer_dev)
:                                           @(h0+24),"Lot: ",ope21a.LOTSER_NO$,"   Shipped: ",
                     if t[1]<>0 print (printer_dev)t[1]:m2$ else print (printer_dev)ope21a.LOTSER_NO$
            endif

    l=l+1
    return

Total1: rem --- Total

    gosub Print_Totals
    if l+2>l9 gosub continue_page
                     print (printer_dev)'LF',
:                                           @(h0),fill(80,"=")
    l=l+2
    gosub Certification
    if ope01a.INVOICE_TYPE$<>"P" gosub Print_Box
    print (printer_dev)'FF',
    return

continue_page: rem --- Continued

    if l9-l-1>0 print (printer_dev)h9$(1,l9-l-1)
                        print (printer_dev)
:                                           @(h0+64),"Continued"
    print (printer_dev)'FF',
    gosub report_heading
    return

 Compress_Description: rem --- Compress Description

    x2$=fnzipcode$(x2$,i[4],i[5],i[6])
    if len(x2$)>79-h0-32 x2$=x2$(1,79-h0-32)
    return

valid_lines: rem --- Look for valid lines here

    print$="NO"
    allprint$="YES" 
rem dim w1$(64)
    read (ope11_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$,dom=*next)

while more
            ope11a_key$=key(ope11_dev,end=*break)
            if pos(ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$=ope11a_key$)<>1 break
            read record (ope11_dev) ope11a$
            find record (opm02a_dev,key=firm_id$+ope11a.LINE_CODE$,dom=*continue) opm02a$
            if ope01a.INVOICE_TYPE$<>"P" then
                            if ope11a.COMMIT_FLAG$="N" 
                            if whse$<>"" and ope11a.WAREHOUSE_ID$<>whse$ if ope11a.PICK_FLAG$<>"Y" allprint$="NO"; continue else continue
                            if ope01a.REPRINT_FLAG$<>"Y" and ope11a.PICK_FLAG$="Y" continue; rem "Not a reprint and already printed for selected warehouse(s)
                            if ope01a.REPRINT_FLAG$="Y" and ope11a.PICK_FLAG$<>"Y" continue; rem "A reprint and not printed yet for selected warehouse(s)
            endif

            if after$="YES" ope11a.PICK_FLAG$="Y"; write record (ope11_dev,key=ope11a_key.FIRM_ID$+ope11a_key.AR_TYPE$+ope11a_key.CUSTOMER_ID$+ope11a_key.ORDER_NO$+ope11a_key.LINE_NO$) ope11a$
            print$="YES"
   wend

    read (ope01_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$+ope01_key.SEQUENCE_000$)
    return

Print_Box: rem --- Print Box

    if l+9+mult_wh>l9 gosub continue_page
                print (printer_dev)'LF','LF',
:                                           @(h0+12),"Carton       1       2       3    4       5     Total"
                print (printer_dev)
:                                           @(h0+22),fill(47,"-"),
            print (printer_dev)@(h0+21),"+",
:                                           @(h0+29),"+",
:                                           @(h0+37),"+",
:                                           @(h0+45),"+",
:                                           @(h0+53),"+",
:                                           @(h0+61),"+",
:                                           @(h0+69),"+"
                         print (printer_dev)
:                                           @(h0+12),"         |       |       |       |       |      |       |"
                         print (printer_dev)
:                                           @(h0+12),"Weight   |       |       |       |       |      |       |"
                         print (printer_dev)
:                                           @(h0+12),"         |       |       |       |       |      |       |"
                         print (printer_dev)
:                                           @(h0+22),fill(47,"-"),
                         print (printer_dev)
:                                           @(h0+21),"+",
:                                           @(h0+29),"+",
:                                           @(h0+37),"+",
:                                           @(h0+45),"+",
:                                           @(h0+53),"+",
:                                           @(h0+61),"+",
:                                           @(h0+69),"+",'LF'
    l=l+9
    if mult_wh=0 return
    if whse$<>"" and len(othwhse$)<2 then message$="All of this order tobe filled from these warehouses."
                    else
                    if pos(whse$=othwhse$)>0 othwhse$=othwhse$(1,pos(whse$=othwhse$)-1)+othwhse$(pos(whse$=othwhse$)+2)
                    if whse$="" or (whse$<>"" and othwhse$="") then message$="All of this order to be filled from this warehouse."
                                else
                                message$="Portions of this order are to be filled from warehouse "
 Message1:
                                message$=message$+othwhse$(1,2)+", "; let othwhse$=othwhse$(3); if len(othwhse$)>0 goto Message1
                                message$=message$(1,len(message$)-2)+"."
                                if pos(","=message$)>0 message$=message$(1,pos(","=message$,-1)-1)+" and"+message$(pos(","=message$,-1)+1)
                    endif
    endif
            while more
                if l+1>l9 gosub continue_page
                if len(message$)<60 print (printer_dev)@(h0+12),message$; let l=l+1; return
                print (printer_dev)@(h0+12),message$(1,pos(" "=message$(1,60),-1)); letl=l+1; let message$=message$(pos(" "=message$(1,60),-1)+1)
            wend

    return

Certification: rem --- Certification

    ms$=""
    gosub build_msg
    if status return
    for y=1 to 10
        if x4$(y*40-39,40)=fill(40) continue
        if y=1 if l+2>l9 gosub continue_page else print (printer_dev)'LF'; let l=l+2
        if l+1>l9 gosub continue_page
                          print (printer_dev)
:                                           @(h0+27),x4$(y*40-39,40)
        l=l+1
    next y
    return

Print_Totals: rem --- Print Totals

    if p8$<>"Y" return
    if l+4>l9 gosub continue_page
                       print (printer_dev)'LF',
:                                           @(h0+79-10),"Extension",'LF',@(h0+79-m1),fill(m1-1,"=")
    print (printer_dev)
:                                           @(h0+70-m1),"Total:",
:                                           @(h0+79-m1),total:m1$,'LF'
    l=l+4
    return

is_still_printed: rem --- Verify if Pick Ticket is still printed

    read (ope11_dev,key=ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$,dom=*next)
while more
    ope11a_key$=key(ope11_dev,end=*break)
    if pos(ope01_key.FIRM_ID$+ope01_key.AR_TYPE$+ope01_key.CUSTOMER_ID$+ope01_key.ORDER_NO$=ope11a_key$)<>1 break
    read record (ope11_dev,key=ope11a_key$,dom=*continue) ope11a$
    if ope11a.PICK_FLAG$="Y"return
wend
    ope01a.PRINT_STATUS$="N"
    ope01a.REPRINT_FLAG$=""
rem --- Reformat new opm-04/14 records into old-style
build_msg:
rem --- arm-10 G records for backwards compatibility
    status=11
    ml=0
    opm14a_key$=firm_id$+ope01a.MESSAGE_CODE$
    find record (opm04a_dev,key=opm14a_key$,dom=Return4) opm04a$
    status=0
    read (opm14_dev,key=opm14a_key$,dom=*next)

while more

    let opm14a_key$=key(opm14_dev,end=Return4)
    if pos(opm04a_key.FIRM_ID$+opm04a_key.MESSAGE_CODE$=opm14a_key$)<>1 break
    read record (opm14_dev,key=opm14a_key$) opm14a$
    if pos(md0$=ms$,6) continue
    ms$=ms$+md0$
    x4$(ml*40+1)=md1$
    ml=ml+1
    if ml<10 
wend

Return4: 
    return

return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Format zip/postal code

    def fnzipcode$(q$)=fill(10,cvs(q$(1,3)+fill(pos("9"<q$(1,5))>0)+q$(4,2)+
:                      fill(ABS(pos("A">=q$(1,6))>0)-pos("0">q$(6,4))>0,"-")+
:                      q$(6,4)+fill(10),16))

rem --- Date/time handling functions

    def fndate$(q$)=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)
    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run pgmdir$+"ads_process_end.aon",err=*next
    release
rem #endinclude std_end.src

    end
