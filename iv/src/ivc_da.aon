rem --- Delete Item and/or Warehouse
rem --- Program ivc_da v8.0.0 15Jun2007 (ivc_da)
rem --- Created by adx_codeport.bbx v1.1.5 (06/15/2007 04:48:55)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

rem --- ************ran thru codeport 6/15/07; have done nothing else, yet. 6/07.CAH

rem -------------- Errors, Warnings and Conversion Information ---------------------

rem --- The following error(s) were encountered during the conversion:

rem --- Undefined function fnyear_yy21$ (Line 0199)
rem --- Undefined function fnyear_yy21$ (Line 0204)

rem --- The following cross-reference files are being referenced:

rem --- Cross-reference file bmm-04 referenced (Line 0145)
rem --- Cross-reference file ivm-03 referenced (Line 0148)
rem --- Cross-reference file ivm-24 referenced (Line 0153)
rem --- Cross-reference file ope-61 referenced (Line 0154)
rem --- Cross-reference file poe-41 referenced (Line 0155)
rem --- Cross-reference file sfe-03 referenced (Line 0156)
rem --- Cross-reference file ivm-03 referenced (Line 0207)
rem --- Cross-reference file ivm-24 referenced (Line 0211)
rem --- Cross-reference file bmm-04 referenced (Line 0214)
rem --- Cross-reference file ope-61 referenced (Line 0215)
rem --- Cross-reference file poe-41 referenced (Line 0216)
rem --- Cross-reference file sfe-03 referenced (Line 0217)
rem --- Cross-reference file ivm-03 referenced (Line 0226)
rem --- Cross-reference file ivm-03 referenced (Line 0231)
rem --- Cross-reference file ivm-03 referenced (Line 0234)
rem --- Cross-reference file ope-61 referenced (Line 0245)
rem --- Cross-reference file poe-41 referenced (Line 0254)
rem --- Cross-reference file sfe-03 referenced (Line 0263)
rem --- Cross-reference file bmm-04 referenced (Line 0299)
rem --- Cross-reference file ivm-03 referenced (Line 0328)
rem --- Cross-reference file ivm-03 referenced (Line 0333)
rem --- Cross-reference file ivm-03 referenced (Line 0336)
rem --- Cross-reference file ivm-03 referenced (Line 0348)
rem --- Cross-reference file ivm-03 referenced (Line 0352)
rem --- Cross-reference file ivm-03 referenced (Line 0368)
rem --- Cross-reference file ivm-03 referenced (Line 0375)
rem --- Cross-reference file ivm-03 referenced (Line 0379)
rem --- Cross-reference file ivm-03 referenced (Line 0384)
rem --- Cross-reference file ivm-03 referenced (Line 0387)
rem --- Cross-reference file ivm-03 referenced (Line 0388)
rem --- Cross-reference file ivm-24 referenced (Line 0394)
rem --- Cross-reference file ivm-24 referenced (Line 0398)
rem --- Cross-reference file ivm-24 referenced (Line 0400)
rem --- Cross-reference file ivm-03 referenced (Line 0411)
rem --- Cross-reference file ivm-03 referenced (Line 0416)
rem --- Cross-reference file ivm-03 referenced (Line 0419)
rem --- Cross-reference file ivm-03 referenced (Line 0422)
rem --- Cross-reference file ivm-03 referenced (Line 0426)
rem --- Cross-reference file ivm-03 referenced (Line 0429)
rem --- Cross-reference file ivm-03 referenced (Line 0432)
rem --- Cross-reference file ivm-03 referenced (Line 0473)
rem --- Cross-reference file ivm-03 referenced (Line 0475)
rem --- Cross-reference file ivm-03 referenced (Line 0478)
rem --- Cross-reference file ivm-03 referenced (Line 0479)

rem --- The following cross-reference records are being referenced:

rem --- Cross-reference record bmm04a replaced by index on bmm-02 (Line 0160)
rem --- Cross-reference record ivm03a replaced by index on ivm-01 (Line 0161)
rem --- Cross-reference record ivm24a replaced by index on ivm-14 (Line 0163)
rem --- Cross-reference record ope61a replaced by index on ope-11 (Line 0163)
rem --- Cross-reference record poe41a replaced by index on poe-03 (Line 0163)

rem --- The following IOLIST's were removed from this program:

rem --- ivm01a: iolist a0$(1),a1$(1),a2$(1),a3$(1),a4$(1),a5$,a6$,a[all]
rem --- ivm02a: iolist b0$(1),b1$(1),b2$,b[all]
rem --- ivm12a: iolist c0$(1),c1$,c2$,c[all]

rem --- The following channel references have been identified:

rem --- bmm01a: Channel reference (Line 0172)

rem --------------------------------------------------------------------------------
rem --- bmm04a: Channel reference (Line 0171)
rem --- ivm03a: Channel reference (Line 0170)
rem --- ivm05a: Channel reference (Line 0169)
rem --- ivm09a: Channel reference (Line 0168)
rem --- ivm14a: Channel reference (Line 0167)
rem --- ivm24a: Channel reference (Line 0166)
rem --- ivs01a: (Generated by CodePort)
rem --- ope61a: Channel reference (Line 0164)
rem --- poe41a: Channel reference (Line 0164)
rem --- sfe03a: Channel reference (Line 0163)

rem --- ACTION$     : Action Code (input)
rem --- I=Delete Item and Warehouse(s)
rem --- W=Delete Warehouse Only
rem --- CHANNELS[n] : Channel references - See ivm_ma.bbx (input)
rem --- PARAMS$[n]  : Parameter information (input)
rem --- : [0]=Firm ID             [4]=PO Installed (Y/N)
rem --- : [1]=Warehouse ID        [5]=WO Installed (Y/N)
rem --- : [2]=Item Number         [6]=BM Installed (Y/N)
rem --- : [3]=OP Installed (Y/N)  [7]=AP Installed (Y/N)
rem --- PARAMS[n]   : Parameter information (input)
rem --- : [0]=# of Periods [1]=Current Period [2]=Current Year
rem --- STATUS      : 0=No Error (returned)

    seterr std_error
    setesc std_error
    enter action$,channels[all],params$[all],params[all],status

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=14,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ads-01"
    files$[2]="bmm-01"
    files$[3]="bmm-04"
    files$[4]="ivm-01"
    files$[5]="ivm-02"
    files$[6]="ivm-03"
    files$[7]="ivm-05"
    files$[8]="ivm-09"
    files$[9]="ivm-12"
    files$[10]="ivm-14"
    files$[11]="ivm-24"
    files$[12]="ope-61"
    files$[13]="poe-41"
    files$[14]="sfe-03"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ads01_dev=channels[1]
    bmm01_dev=channels[2]
    bmm04_dev=channels[3]
    ivm01_dev=channels[4]
    ivm02_dev=channels[5]
    ivm03_dev=channels[6]
    ivm05_dev=channels[7]
    ivm09_dev=channels[8]
    ivm12_dev=channels[9]
    ivm14_dev=channels[10]
    ivm24_dev=channels[11]
    ope61_dev=channels[12]
    poe41_dev=channels[13]
    sfe03_dev=channels[14]

rem --- Dimension string templates

    dim bmm01a$:templates$[2],bmm04a$:templates$[3],ivm01a$:templates$[4],
:       ivm02a$:templates$[5],ivm03a$:templates$[6],ivm05a$:templates$[7],
:       ivm09a$:templates$[8],ivm12a$:templates$[9],ivm14a$:templates$[10],
:       ivm24a$:templates$[11],ope61a$:templates$[12],poe41a$:templates$[13],
:       sfe03a$:templates$[14]

rem --- Retrieve miscellaneous templates

    files=1,begfile=1,endfile=files
    dim ids$[files],templates$[files]
    ids$[1]="ivs-01A"
    call pgmdir$+"adc_template.aon",begfile,endfile,ids$[all],templates$[all],status
    if status goto std_exit

rem --- Dimension miscellaneous string templates

    dim ivs01a$:templates$[1]

rem --- Retrieve parameter records

    ivs01a_key$=firm_id$+"IV00"
    find record (ads01_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Parameters

    firm_id$=params$[0]
    whse$=params$[1]
    item$=params$[2]
    op$=params$[3]
    po$=params$[4]
    wo$=params$[5]
    bm$=params$[6]
    ap$=params$[7]

rem --- Initializations

    dim a0$(22),a1$(60),a2$(64),a3$(40),a4$(21),a[12]
    a0$(1)=firm_id$+item$
    m1$=str(params[1]:"00")
    y1$=fnyear_yy21$(params[2])
    m2=params[1]+1
    y2=params[2]
    if m2>params[0] m2=1,y2=y2+1
    m2$=str(m2:"00")
    y2$=fnyear_yy21$(y2)
    ivm01_dev=channels[2]
    ivm02_dev=channels[3]
    ivm03_dev=channels[4]
    ivm09_dev=channels[5]
    ivm12_dev=channels[7]
    ivm14_dev=channels[9]
    ivm24_dev=channels[11]
    ivm05_dev=channels[26]
    bmm01_dev=channels[28]
    bmm04_dev=channels[30]
    ope61_dev=channels[33]
    poe41_dev=channels[39]
    sfe03_dev=channels[47]
    status=0

rem --- Position warehouse xref

    status=0
    first$=firm_id$+"G"+item$+whse$
    k$=first$
    find record (ivm01_dev,key=a0$,dom=done) ivm01a$
    read (ivm03_dev,key=k$,dom=l1000)
    goto l1020

l1000: rem --- Quantity on hand, on order or committed?

    k$=key(ivm03_dev,end=l1600)
l1020:
    if pos(first$=k$)<>1 goto l1600
    read (ivm03_dev)
    dim b0$(24),b1$(64),b[20]
    b0$(1)=firm_id$+k$(24,2)+item$
    find record (ivm02_dev,key=b0$,dom=*next) ivm02a$
    if b1$(15,1)="Y" status=1
    if b[0]<>0 or b[1]<>0 or b[2]<>0 status=2
    if status<>0 goto l2000

rem --- Open Orders?

    if op$<>"Y" goto l1200
    channel=ope61_dev
    x$=b0$
    x=3
    gosub l6000
    if status<>0 goto l2000

l1200: rem --- Requisitions?

    if po$<>"Y" goto l1300
    channel=poe41_dev
    x$=b0$
    x=4
    gosub l6000
    if status<>0 goto l2000

l1300: rem --- Work Orders?

    if wo$<>"Y" goto l1400
    channel=sfe03_dev
    x$=b0$(1,2)+"C"+b0$(3)
    x=5
    gosub l6000
    if status<>0 goto l2000
    x$=b0$(1,2)+"E"+"  "+b0$(3)
    x=6
    gosub l6000
    if status<>0 goto l2000

l1400: rem --- Current or next period activity?

    y$=y1$
    m$=m1$
    x=9
    gosub l6100
    if status<>0 goto l2000
    y$=y2$
    m$=m2$
    x=10
    gosub l6100
    if status<>0 goto l2000

rem --- Loop back for next warehouse

    goto l1000

l1600: rem --- Check Bill of Materials

    if action$="W" goto l2000
    if bm$<>"Y" goto l2000
    k$=firm_id$+item$
    find (bmm01_dev,key=k$,dom=l1670)
    status=7
    goto l2000
l1670:
    channel=bmm04_dev
    x$=k$
    x=8
    gosub l6000

l2000: rem --- Set message when STATUS<>0

    if status=0 goto l2900
    dim message$[2]
    if status=1 message$[0]="This Item Has Been Selected For Physical Inventory"
    if status=2 message$[0]="Warehouse Quantities Exist For This Inventory Item"
    if status=3 message$[0]="Sales Orders For This Inventory Item Current Exist"
    if status=4 message$[0]="Purchase Requisitions Exist For This Inventory Item"
    if status=5 message$[0]="Work Orders For This Inventory Item Currently Exist"
    if status=6 message$[0]="This Item Is Required For An ExistingWork Order"
    if status=7 message$[0]="This Item Is Also A Bill Of MaterialsMaster Bill"
    if status=8 message$[0]="This Item Is Also A Bill Of MaterialsComponent"
    if status=9 message$[0]="Warehouse Activity Exists For The Current Period"
    if status=10 message$[0]="Warehouse Activity Exists For The Next Period"
    message$[1]="It Can Not Be Deleted (<Enter>=Continue)"

rem --- Display message

    call pgmdir$+"adc_stdmessage.aon",2,message$[all],1,22,-1,v$,v3
    if v$<>"SPECIAL" goto done

l2900: rem --- Position warehouse xref

    k$=first$
    read (ivm03_dev,key=k$,dom=l3000)
    goto l3020

l3000: rem --- Next warehouse xref

    k$=key(ivm03_dev,end=l3300)
l3020:
    if pos(first$=k$)<>1 goto l3300
remove (ivm03_dev,key=k$,dom=l3040)

    dim b0$(24),b1$(64),b[20]
    b0$(1)=firm_id$+k$(24,2)+item$
    x$=k$
    find record (ivm02_dev,key=b0$,dom=*next) ivm02a$
remove (ivm02_dev,key=b0$,dom=*next)

rem --- Remove ivm-03 Xrefs

    dim x0$(37)
    x0$(1)=b0$(1,2)+"B"+b0$(3,2)+b1$(11,2)+b1$(1,10)+b0$(5)
remove (ivm03_dev,key=x0$,dom=l3140)

    dim x0$(28)
    x0$(1)=b0$(1,2)+"C"+b0$(3,2)+a2$(1,3)+b0$(5)
remove (ivm03_dev,key=x0$,dom=l3170)

    dim x0$(37)
    gosub l6200
    read (ivm12_dev,key=b0$,dom=*next)

l3200: rem --- Remove ivm-12 Activity

    k$=key(ivm12_dev,end=l3250)
    if pos(b0$=k$)<>1 goto l3250
    remove (ivm12_dev,key=k$,dom=l3200)

    goto l3200

l3250: rem --- Loop back for next warehouse

    read (ivm03_dev,key=x$,dom=l3000)
    goto l3000

l3300: rem --- Position vendor xref

    if action$="W" goto done
    first$=firm_id$+"H"+item$
    read (ivm03_dev,key=first$,dom=*next)

l3400: rem --- Read next ivm-05 vendor record

    k$=key(ivm03_dev,end=l3500)
    if pos(first$=k$)<>1 goto l3500
    x$=k$(1,2)+k$(24)+k$(4,20)
    if ap$="Y" remove (ivm05_dev,key=x$,dom=*next)
    x$=x$(1,2)+"D"+x$(3)
remove (ivm03_dev,key=x$,dom=l3456)

    x$=k$(1,2)+"F"+a2$(9,3)+k$(24,6)+a2$(1,3)+a0$(3)+"  "
    remove (ivm03_dev,key=x$,dom=*next)
remove (ivm03_dev,key=k$,dom=*next)

    goto l3400

l3500: rem --- Position synonyms file

    read (ivm24_dev,key=a0$,dom=*next)

l3600: rem --- Read next synonym

    k$=key(ivm24_dev,end=l3700)
    if pos(a0$=k$)<>1 goto l3700
remove (ivm24_dev,key=k$,dom=l3640)

    k$=k$(1,2)+k$(23)+k$(3,20)
remove (ivm14_dev,key=k$,dom=l3660)

    goto l3600

l3700: rem --- Remove ivm-03 Item Xrefs

    dim x0$(26)
    x0$(1)=firm_id$+"A"+a2$(1,3)+a0$(3)
remove (ivm03_dev,key=x0$,dom=l3720)

    dim x0$(43)
    x0$(1)=firm_id$+"E"+a1$
    x0$(24)=a0$(3)
remove (ivm03_dev,key=x0$,dom=l3735)

    x0$(1)=firm_id$+"I"+a3$(21,20)+a0$(3)
remove (ivm03_dev,key=x0$,dom=l3745)

    x0$(1)=firm_id$+"U"+a3$(1,20)+a0$(3)
remove (ivm03_dev,key=x0$,dom=l3755)

    dim x0$(37)
    x0$(1)=firm_id$+"F"+a2$(9,3)+a2$(12,6)+a2$(1,3)+a0$(3)
remove (ivm03_dev,key=x0$,dom=l3770)

    x0$=firm_id$+"J"+a2$(21,3)+a0$(3)
remove (ivm03_dev,key=x0$,dom=l3780)

    x0$=firm_id$+"T"+a2$(53,3)+a0$(3)
remove (ivm03_dev,key=x0$,dom=l3790)

    read (ivm09_dev,key=a0$,dom=*next)

l3800: rem --- Remove ivm-09 commments

    k$=key(ivm09_dev,end=l3900)
    if pos(a0$=k$)<>1 goto l3900
remove (ivm09_dev,key=k$,dom=l3840)

    goto l3800

l3900: rem --- Remove ivm-01 item master

    remove (ivm01_dev,key=a0$,dom=*next)

done: rem --- All done

    goto std_exit

l6000: rem --- Does Firm/Item/Warehouse exist in file?

    read (channel,key=x$,dom=*next)
    k$=key(channel,end=l6090)
    if pos(x$=k$)=1 status=x
l6090:
    return

l6100: rem --- Current or Next Period Activity?

    dim c0$(28),c[12]
    c0$(1)=b0$+y$+m$
    find record (ivm12_dev,key=c0$,dom=l6190) ivm12a$
    for p=0 to 8
        if c[p]<>0 status=x
    next p
l6190:
    return

rem --- Remove IVM03F Records for all Vendors (Stocking level W)
l6200:
    read (ivm03_dev,key=firm_id$+"H"+item$,dom=*next)
l6230:
    let h_k$=key(ivm03_dev,end=l6290)
    if pos(firm_id$+"H"+item$=h_k$)<>1 goto l6290
    let x0$(1)=firm_id$+"F"+b1$(19,3)+h_k$(24,6)+a2$(1,3)+b0$(5)+b0$(3,2)
    remove (ivm03_dev,key=x0$,dom=*next)
    read (ivm03_dev,key=h_k$,dom=*next)
    goto l6230
l6290:
    return
rem --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year
    def fnyear_yy21$(q)=fnyy_yy21$(str(mod(q,100):"00"))
rem --- Convert 2-Char Year to 21st Century 2-Char Year
    def fnyy_yy21$(q1$)
    let q9=10,q9=num(stbl("+Y2K_UPPER_LIMIT",err=*next),err=l8131)
l8131:
    if num(q1$(1,2),err=*next)<q9 q1$(1,1)=chr(int(num(q1$(1,2))/10)+65)
    return q1$
    fnend
rem --- Un-Convert 21st Century 2-Char Year to 2-Char Year
rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
