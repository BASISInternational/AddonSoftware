rem --- Rebuild Inventory On-Order Quantities
rem --- Program ivx_ea v8.0.0 09Jul2007 (ivx_ea)
rem --- Created by adx_codeport.bbx v1.1.5 (07/09/2007 11:55:30)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

rem -------------- Errors, Warnings and Conversion Information ---------------------

rem --- The following error(s) were encountered during the conversion:

rem --- v7.x Administrator reference ["sys-01A"] (Line 0095)
rem --- v7.x sys-01 reference [sys01a$:temp] (Line 0101)
rem --- v7.x sys-01 reference [sys01a_key$=] (Line 0112)
rem --- v7.x sys-01 reference [sys01a_key$,] (Line 0113)
rem --- v7.x Administrator reference ["sys-01"] (Line 0119)
rem --- v7.x sys-01 reference [sys01_dev=ch] (Line 0123)
rem --- v7.x sys-01 reference [sys01_dev,ke] (Line 0128)
rem --- v7.x sys-01 reference [sys01_dev,ke] (Line 0131)

rem --- The following reset verbs were removed from this program:

rem --- BEGIN statement removed [begin]

rem --- The following cross-reference files are being referenced:

rem --- Cross-reference file poe-42 referenced (Line 0082)
rem --- Cross-reference file poe-42 referenced (Line 0157)
rem --- Cross-reference file poe-42 referenced (Line 0189)
rem --- Cross-reference file poe-42 referenced (Line 0193)
rem --- Cross-reference file poe-42 referenced (Line 0195)

rem --- The following cross-reference records are being referenced:

rem --- Cross-reference record poe42a replaced by index on poe-04 (Line 0087)

rem --- The following IOLIST's were removed from this program:

rem --- ivm02a: iolist a0$(1),a1$(1),a2$,a[all]
rem --- poe12a: iolist b0$(1),b1$(1),b2$(1),b3$(1),b4$(1),b5$,b6$,b[all]
rem --- sfe01a: iolist c0$,c1$,c[all]

rem --- The following channel references have been identified:

rem --- ivs01a: (Generated by CodePort)

rem --------------------------------------------------------------------------------
rem --- poe42a: Channel reference (Line 0146)
rem --- sys01a: Channel reference (Line 0142)

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=5,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ads-01"
    files$[2]="ivm-02"
    files$[3]="poe-12"
    files$[4]="poe-42"
    files$[5]="sfe-01"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ads01_dev=channels[1]
    ivm02_dev=channels[2]
    poe12_dev=channels[3]
    poe42_dev=channels[4]
    sfe01_dev=channels[5]

rem --- Dimension string templates

    dim ivm02a$:templates$[2],poe12a$:templates$[3],poe42a$:templates$[4],
:       sfe01a$:templates$[5]

rem --- Retrieve miscellaneous templates

    files=2,begfile=1,endfile=files
    dim ids$[files],templates$[files]
    ids$[1]="ivs-01A"
    ids$[2]="sys-01A"
    call pgmdir$+"adc_template.aon",begfile,endfile,ids$[all],templates$[all],status
    if status goto std_exit

rem --- Dimension miscellaneous string templates

    dim ivs01a$:templates$[1],sys01a$:templates$[2]

rem --- Assign form input values to local variables

    table$=fnget_table$("")
    value_01$=fnget_fld_data$(table$,"dataname_01")

rem --- Retrieve parameter records

    ivs01a_key$=firm_id$+"IV00"
    find record (ads01_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$
    sys01a_key$=firm_id$+"SY00"
    find record (ads01_dev,key=sys01a_key$,err=std_missing_params) sys01a$

rem --- Open/Lock Files

    files=5
    dim files$[files],options$[files],channels[files]
    files$[1]="sys-01"
    files$[2]="ivm-02"
    call pgmdir$+"adc_fileopen.aon",1,1,1,files$[all],options$[all],channels[all],batch,status
    if status goto std_exit
    sys01_dev=channels[1]

rem --- Parameters

    dim p[1],info$[20]
    find record (sys01_dev,key="T"+fid(0),dom=std_missing_params) sys01t$
    firm_id$=f0$(16,2)
    n2$="IV"
    find record (sys01_dev,key=firm_id$+n2$+"00",dom=std_missing_params) ivs01a$
    p[0]=num(i2$(1,2))
    p[1]=num(i2$(5,1))
    call pgmdir$+"adc_application.aon","PO",info$[all]
    po$=info$[20]
    call pgmdir$+"adc_application.aon","SF",info$[all]
    sf$=info$[20]
    if po$="Y" goto l500
    if sf$="Y" goto l500
    goto l4900

l500: rem --- Initializations

    precision p[1]
    dim a0$(24),a1$(64),a[20],b0$(18),b1$(48),b2$(32),b3$(22),b4$(40),b[12]
    dim c0$(75),c1$(141),c[11]

rem --- Additional file opens

    if sf$="Y" files$[3]="sfe-01"
    if po$="Y" files$[4]="poe-12",files$[5]="poe-42"
    call pgmdir$+"adc_fileopen.aon",1,2,files,files$[all],options$[all],channels[all],batch,status
    if status goto std_exit
    ivm02_dev=channels[2]
    sfe01_dev=channels[3]
    poe12_dev=channels[4]
    poe42_dev=channels[5]

rem --- Background
rem --- Options

    v4$="Do You Wish To Rebuild Inventory On-Order Quantities"
    call pgmdir$+"adc_yesno.aon",0,v4$,0,v$,v3
    if v$<>"YES" goto std_exit

rem --- Position warehouse file

    x$="Clearing Current On-Order Quantities"
    x=3+p[0]
    gosub l6000
    read (ivm02_dev,key=firm_id$,dom=*next)

l1000: rem --- Clear ivm-02 On Hand

    k$=key(ivm02_dev,end=l1900)
    if pos(firm_id$=k$)<>1 goto l1900
    call pgmdir$+"adc_progress.aon","S","","","",k$(3,2)+" "+k$(5,p[0]),0,0,1,meter_num,status
    extract record (ivm02_dev,key=k$) ivm02a$
    a[1]=0
    write record (ivm02_dev,key=k$) ivm02a$
    goto l1000

l1900: rem --- Purchase Orders

    if po$="N" goto l2900
    x$="Purchase Order On-Order Quantities"
    x=3+p[0]
    gosub l6000
    read (poe42_dev,key=firm_id$,dom=*next)

l2000: rem --- Read next PO sort record

    k$=key(poe42_dev,end=l2900)
    if pos(firm_id$=k$)<>1 goto l2900
    read (poe42_dev)
    call pgmdir$+"adc_progress.aon","S","","","",k$(3,p[0]),0,poe12_dev,1,meter_num,status
    b0$(1)=k$(1,2)+k$(33,6)+k$(23,10)
    find record (poe12_dev,key=b0$,dom=l2000) poe12a$
    a0$(1)=firm_id$+b3$
    extract record (ivm02_dev,key=a0$,dom=l2000) ivm02a$
    a[1]=a[1]+((b[3]-b[7])*b[0])
    write record (ivm02_dev,key=a0$) ivm02a$
    goto l2000

l2900: rem --- Work Orders

    if sf$="N" goto done
    x$="Work Order On-Order Quantities"
    x=7
    gosub l6000
    read (sfe01_dev,key=firm_id$,dom=*next)

l3000: rem --- Read next work order

    k$=key(sfe01_dev,end=done)
    if pos(firm_id$=k$)<>1 goto done
    call pgmdir$+"adc_progress.aon","S","","","",k$(5,7),0,sfe01_dev,1,meter_num,status
    read record (sfe01_dev) sfe01a$

rem --- Is it open?

    if c0$(14,1)<>"I" goto l3000
    if pos(c0$(15,1)="CPQ")>0 goto l3000
    if c[0]<=c[2] goto l3000

rem --- Update warehouse

    a0$(1)=c0$(1,2)+c0$(54)
    extract record (ivm02_dev,key=a0$,dom=l3000) ivm02a$
    a[1]=a[1]+(c[0]-c[2])
    write record (ivm02_dev,key=a0$) ivm02a$
    goto l3000

done: rem --- All done

    goto std_exit

l4900: rem --- PO or WO must be installed

    dim message$[1]
    message$[0]="Inventory On-Order Quantities Can Only Exist If The Purchase Order And/Or"
    message$[1]="Shop Floor Control System(s) Are Installed (<Enter>=Continue"
    call pgmdir$+"adc_stdmessage.aon",2,message$[all],1,-1,-1,v$,v3
    goto std_exit

l6000: rem --- Update screen

    call pgmdir$+"adc_progress.aon","N","","","Updating","",x,0,1,meter_num,status
    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run pgmdir$+"ads_process_end.aon",err=*next
    release

rem #endinclude std_end.src

    end
